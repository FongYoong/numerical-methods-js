[{"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\App.js":"1","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\index.js":"2","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\MethodType.js":"3","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\Menu.js":"4","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\header\\Header.js":"5","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\constants\\categories.js":"6","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\Category.js":"7","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Newton.js":"8","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Secant.js":"9","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Regula.js":"10","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Inverse.js":"11","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Jordan.js":"12","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\FixedPoint.js":"13","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Gauss.js":"14","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Linear.js":"15","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\SVD.js":"16","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Multistep.js":"17","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Finite.js":"18","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Bisection.js":"19","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Midpoint.js":"20","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Polynomial.js":"21","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Spline.js":"22","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Richardson.js":"23","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\InversePower.js":"24","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Power.js":"25","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\QR.js":"26","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\ShiftedPower.js":"27","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Trapezoidal.js":"28","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Simpson.js":"29","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Quadrature.js":"30","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Pivot.js":"31","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\LU.js":"32","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Jacobi.js":"33","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Midpoint.js":"34","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Euler.js":"35","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Predictor.js":"36","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Runge.js":"37","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\fourier\\FFT.js":"38","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Seidel.js":"39","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\NotFound.js":"40","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\utils.js":"41","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\NewtonDesmos.js":"42"},{"size":3875,"mtime":1613292626550,"results":"43","hashOfConfig":"44"},{"size":593,"mtime":1612927141538,"results":"45","hashOfConfig":"44"},{"size":1130,"mtime":1612923894094,"results":"46","hashOfConfig":"44"},{"size":1550,"mtime":1613444254073,"results":"47","hashOfConfig":"44"},{"size":2498,"mtime":1613441942577,"results":"48","hashOfConfig":"44"},{"size":7875,"mtime":1612944242080,"results":"49","hashOfConfig":"44"},{"size":1459,"mtime":1612923830216,"results":"50","hashOfConfig":"44"},{"size":17409,"mtime":1613455556482,"results":"51","hashOfConfig":"44"},{"size":143,"mtime":1612925192591,"results":"52","hashOfConfig":"44"},{"size":143,"mtime":1612925187715,"results":"53","hashOfConfig":"44"},{"size":139,"mtime":1612925140939,"results":"54","hashOfConfig":"44"},{"size":137,"mtime":1612925167610,"results":"55","hashOfConfig":"44"},{"size":151,"mtime":1612925182495,"results":"56","hashOfConfig":"44"},{"size":135,"mtime":1612925136002,"results":"57","hashOfConfig":"44"},{"size":135,"mtime":1612925034937,"results":"58","hashOfConfig":"44"},{"size":131,"mtime":1612925162176,"results":"59","hashOfConfig":"44"},{"size":137,"mtime":1612925206827,"results":"60","hashOfConfig":"44"},{"size":133,"mtime":1612925051904,"results":"61","hashOfConfig":"44"},{"size":149,"mtime":1612925175934,"results":"62","hashOfConfig":"44"},{"size":145,"mtime":1612925116067,"results":"63","hashOfConfig":"44"},{"size":131,"mtime":1612925039465,"results":"64","hashOfConfig":"44"},{"size":135,"mtime":1612925044456,"results":"65","hashOfConfig":"44"},{"size":141,"mtime":1612925057887,"results":"66","hashOfConfig":"44"},{"size":147,"mtime":1612925063960,"results":"67","hashOfConfig":"44"},{"size":133,"mtime":1612925070009,"results":"68","hashOfConfig":"44"},{"size":127,"mtime":1612925075773,"results":"69","hashOfConfig":"44"},{"size":147,"mtime":1612925085361,"results":"70","hashOfConfig":"44"},{"size":151,"mtime":1612925111961,"results":"71","hashOfConfig":"44"},{"size":143,"mtime":1612925113338,"results":"72","hashOfConfig":"44"},{"size":149,"mtime":1612925114741,"results":"73","hashOfConfig":"44"},{"size":135,"mtime":1612925164164,"results":"74","hashOfConfig":"44"},{"size":129,"mtime":1612925165760,"results":"75","hashOfConfig":"44"},{"size":137,"mtime":1612925169197,"results":"76","hashOfConfig":"44"},{"size":135,"mtime":1612925198379,"results":"77","hashOfConfig":"44"},{"size":129,"mtime":1612925202363,"results":"78","hashOfConfig":"44"},{"size":137,"mtime":1612925211319,"results":"79","hashOfConfig":"44"},{"size":129,"mtime":1612925215842,"results":"80","hashOfConfig":"44"},{"size":119,"mtime":1612920938488,"results":"81","hashOfConfig":"44"},{"size":137,"mtime":1612925163139,"results":"82","hashOfConfig":"44"},{"size":151,"mtime":1612927063731,"results":"83","hashOfConfig":"44"},{"size":804,"mtime":1613404957125,"results":"84","hashOfConfig":"44"},{"size":5313,"mtime":1613443620370,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mhuixq",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\App.js",["178"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\index.js",[],["179","180"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\MethodType.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\Menu.js",["181","182","183"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\header\\Header.js",["184","185"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\constants\\categories.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\menu\\Category.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Newton.js",["186","187","188","189"],"import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport NewtonDesmos from \"./NewtonDesmos\";\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport {\r\n    parse, derivative, evaluate, round\r\n  } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".derivative-input\",\r\n        title: \"Derivative\",\r\n        content:\r\n            \"The function's derivative will be shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply Newton's method.\",\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".results\",\r\n        title: \"Results\",\r\n        content:\r\n            \"The results are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearNewton({methodName}) {\r\n    const styleClasses = useStyles();\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = React.useState(false);\r\n\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    // Derivative\r\n    const [functionLatex, setFunctionLatex] = useState('3x^2+2x-8');\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue, derivValue, derivLatex;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n        derivValue = derivative(functionText, 'x');\r\n        derivLatex = derivValue.toTex({parenthesis: \"keep\", implicit: \"hide\"});\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(10);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer\";\r\n    }\r\n\r\n    let hasError = functionError || iterError;\r\n\r\n    // Solve\r\n    const [solving, setSolving] = useState(false);\r\n    const [initialX, setInitialX] = useState(0);\r\n\r\n    let solve = false;\r\n    let results = [];\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        for (let i = 0; i < iterations; i++) {\r\n            let previousX = (i === 0) ? initialX: results[i - 1].newX;\r\n            let funcResult, derivResult;\r\n            try {\r\n                funcResult = functionValue.evaluate({x : previousX});\r\n                derivResult = derivValue.evaluate({x : previousX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            \r\n            let newX = previousX - funcResult / derivResult;\r\n            let errorX = Math.abs(newX - previousX);\r\n            results.push({\r\n                previousX,\r\n                funcResult,\r\n                derivResult,\r\n                newX,\r\n                errorX,\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    let params = {functionValue, derivValue, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={solving}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"derivative-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Derivative:\r\n                                    </Typography>\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                    <Collapse in={!functionError}>\r\n                                        {!functionError && <Fade  triggerOnce><MathComponent tex={derivLatex}/></Fade>}\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                    disabled={solving}\r\n                                    type=\"number\"\r\n                                    onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                    error={iterError}\r\n                                    label={iterError?\"Error\":\"\"}\r\n                                    defaultValue={iterations}\r\n                                    helperText={iterErrorText}\r\n                                    variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                    disabled={solving}\r\n                                    type=\"number\"\r\n                                    onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                    label={\"\"}\r\n                                    defaultValue={0.0}\r\n                                    variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={()=>{setRunTour(true)}}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n//  derivValue={derivValue} iterations={iterations} initialValue={initialValue} \r\n\r\n/*\r\n    <Collapse in={!hasError}>\r\n        <Button disabled={solving} variant=\"contained\" color=\"primary\" onClick={startSolve}>\r\n            Solve!\r\n        </Button>\r\n    </Collapse>\r\n*/\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n    //console.log(currentResult);\r\n\r\n    let previousXLatex = String.raw`x_{${currentIteration - 1}}`;\r\n    let newXLatex = String.raw`x_{${currentIteration}}`;\r\n\r\n    const latexContent =\r\n    String.raw`\r\n    \\displaystyle\r\n    \\begin{array}{lll}\r\n    \\\\ ${previousXLatex} &=& ${formatLatex(currentResult.previousX)}\r\n    \\\\ f(${previousXLatex}) &=& ${formatLatex(currentResult.funcResult)}\r\n    \\\\ f'(${previousXLatex}) &=& ${formatLatex(currentResult.derivResult)}\r\n    \\\\ ${newXLatex} &=& x_${currentIteration - 1} - \\frac{f(${previousXLatex})}{f'(${previousXLatex})}\r\n    \\\\                       &=& ${formatLatex(currentResult.newX)}\r\n    \\\\ Error &=& |${newXLatex} - ${previousXLatex}|\r\n    \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n    \\end{array}\r\n    `;\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    useEffect(() => {\r\n        //setSolving(false)\r\n    });\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n\r\n                <Grid className=\"results\" container direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                            \r\n                            <Slider\r\n                                orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                onChange={(event, value) => setCurrentIteration(value)}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                            \r\n                        </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"step-math\">\r\n                            <JackInTheBox triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iteration {currentIteration}:\r\n                                    </Typography>\r\n                                    <MathComponent tex={latexContent}/>\r\n                                </CardContent>\r\n                            </Card>\r\n                            </JackInTheBox>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs item className=\"graph-button\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                        <NewtonDesmos params={{currentIteration, smallScreen, ...params}} />\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearNewton;\r\n\r\n/*\r\n                            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                                <Grid key={0} item xs={12} sm={6} md={4} lg={4} xl={4}>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n*/\r\n/*\r\n                    <Card className={styleClasses.card}>\r\n                        <CardContent className={styleClasses.cardContent}>\r\n                            <Typography variant=\"h6\">\r\n                                Iteration {currentIteration}\r\n                            </Typography>\r\n                            <Box mx={\"2rem\"}>\r\n                                <Slider\r\n                                    className={styleClasses.slider}\r\n                                    orientation=\"vertical\"\r\n                                    onChangeCommitted={(event, value) => setCurrentIteration(value)}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                />\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                    */","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Secant.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Regula.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Inverse.js",[],["190","191"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Jordan.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\FixedPoint.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Gauss.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Linear.js",[],["192","193"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\SVD.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Multistep.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Finite.js",[],["194","195"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\Bisection.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Midpoint.js",[],["196","197"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Polynomial.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\curve\\Spline.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Richardson.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\InversePower.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Power.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\QR.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\ShiftedPower.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Trapezoidal.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Simpson.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Quadrature.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Pivot.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\LU.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Jacobi.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Midpoint.js",[],["198","199"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Euler.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Predictor.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Runge.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\fourier\\FFT.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\Seidel.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\NotFound.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\utils.js",["200"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\NewtonDesmos.js",["201"],"import {formatLatex, mathjsToLatex} from \"../../utils\";\r\nimport {React, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { MathComponent } from 'mathjax-react';\r\nimport * as Desmos from 'desmos';\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styleClasses = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styleClasses)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent =  withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))((props) => {\r\n    const params = props.params;\r\n    const [currentIteration, setCurrentIteration] = useState(params.currentIteration);\r\n    const defaultIteration = params.currentIteration;\r\n    const currentResult = params.results[currentIteration - 1];\r\n    const desmosDiv = useRef(null);\r\n    const calculator = useRef(null);\r\n\r\n    const updateGraph = useCallback(() => {\r\n        if (calculator.current){\r\n            calculator.current.setExpression({ id: 'graph1', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue) });\r\n            calculator.current.setExpression({ id: 'graph2', color: Desmos.Colors.GREEN, lineStyle: Desmos.Styles.DOTTED, latex:\r\n            `(y-${formatLatex(currentResult.funcResult)})/(x-${formatLatex(currentResult.previousX)})=${formatLatex(currentResult.derivResult)}` });\r\n            calculator.current.setExpression({ id: 'graph3', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, latex:\r\n            `(${formatLatex(currentResult.newX)}, 0)` });\r\n        }\r\n    }, [calculator, params.functionValue, currentResult]);\r\n    updateGraph();\r\n\r\n    useEffect(() => {\r\n        if (desmosDiv.current){\r\n            const smallScreen = props.smallScreen;\r\n            desmosDiv.current.style.width = smallScreen?'90vw':'60vw';\r\n            desmosDiv.current.style.height = smallScreen?'90vh':'60vh';\r\n            const desmosOptions = {\r\n                keypad: false,\r\n                expressions: false,\r\n                expressionsTopbar: false,\r\n            };\r\n            calculator.current = Desmos.GraphingCalculator(desmosDiv.current, desmosOptions);\r\n            updateGraph();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        \r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <Box component=\"div\" overflow=\"visible\">\r\n                <MathComponent tex={`${mathjsToLatex(params.functionValue)}`}/>\r\n            </Box>\r\n            <Typography variant=\"h6\">\r\n                Iteration {currentIteration}:\r\n            </Typography>\r\n            <Box width=\"70%\">\r\n                <Slider\r\n                    orientation=\"horizontal\"\r\n                    onChange={(event, value) => setCurrentIteration(value)}\r\n                    defaultValue={defaultIteration}\r\n                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                    step={1}\r\n                    marks\r\n                    min={1}\r\n                    max={params.iterations}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Box>\r\n            <Grid item>\r\n                <div ref={desmosDiv}>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n});\r\n\r\nfunction NewtonDesmos({params, smallScreen}) {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n      const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<TimelineIcon/>} onClick={handleClickOpen}>\r\n                View Graph\r\n            </Button>\r\n                \r\n            \r\n            <Dialog scroll='paper' maxWidth={false} fullScreen={smallScreen} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                <Fade>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\r\n                    <DialogContent dividers smallScreen={smallScreen} params={params} />\r\n                </Fade>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewtonDesmos;",{"ruleId":"202","severity":1,"message":"203","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":12},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"202","severity":1,"message":"210","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":14},{"ruleId":"202","severity":1,"message":"211","line":8,"column":22,"nodeType":"204","messageId":"205","endLine":8,"endColumn":27},{"ruleId":"202","severity":1,"message":"212","line":8,"column":29,"nodeType":"204","messageId":"205","endLine":8,"endColumn":41},{"ruleId":"202","severity":1,"message":"213","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"202","severity":1,"message":"214","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":14},{"ruleId":"202","severity":1,"message":"215","line":1,"column":22,"nodeType":"204","messageId":"205","endLine":1,"endColumn":35},{"ruleId":"202","severity":1,"message":"216","line":8,"column":24,"nodeType":"204","messageId":"205","endLine":8,"endColumn":32},{"ruleId":"202","severity":1,"message":"217","line":8,"column":34,"nodeType":"204","messageId":"205","endLine":8,"endColumn":39},{"ruleId":"202","severity":1,"message":"218","line":157,"column":21,"nodeType":"204","messageId":"205","endLine":157,"endColumn":31},{"ruleId":"206","replacedBy":"219"},{"ruleId":"208","replacedBy":"220"},{"ruleId":"206","replacedBy":"221"},{"ruleId":"208","replacedBy":"222"},{"ruleId":"206","replacedBy":"223"},{"ruleId":"208","replacedBy":"224"},{"ruleId":"206","replacedBy":"225"},{"ruleId":"208","replacedBy":"226"},{"ruleId":"206","replacedBy":"227"},{"ruleId":"208","replacedBy":"228"},{"ruleId":"202","severity":1,"message":"229","line":2,"column":3,"nodeType":"204","messageId":"205","endLine":2,"endColumn":8},{"ruleId":"230","severity":1,"message":"231","line":80,"column":8,"nodeType":"232","endLine":80,"endColumn":10,"suggestions":"233"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["234"],"no-negated-in-lhs",["235"],"'Fade' is defined but never used.","'Slide' is defined but never used.","'JackInTheBox' is defined but never used.","'styles' is defined but never used.","'Link' is defined but never used.","'mathjsToLatex' is defined but never used.","'evaluate' is defined but never used.","'round' is defined but never used.","'setSolving' is assigned a value but never used.",["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],"'parse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.smallScreen' and 'updateGraph'. Either include them or remove the dependency array.","ArrayExpression",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},"Update the dependencies array to be: [props.smallScreen, updateGraph]",{"range":"239","text":"240"},[3329,3331],"[props.smallScreen, updateGraph]"]