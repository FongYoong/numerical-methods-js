[{"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\constants\\categories.js":"1","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Power.js":"2","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\ShiftedPower.js":"3","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\InversePower.js":"4","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Discs.js":"5","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\FalsePosition.js":"6","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\optimisation\\Gradient.js":"7","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\fourier\\FFT.js":"8","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\System.js":"9","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\optimisation\\GoldenSearch.js":"10","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Finite.js":"11","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Midpoint.js":"12","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\MonteCarlo.js":"13","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Quadrature.js":"14","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Simpson.js":"15","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Trapezoidal.js":"16","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\LU.js":"17","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\JacobiSeidel.js":"18","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\PenroseInverse.js":"19","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Multistep.js":"20","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Euler.js":"21","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\FiniteDiff.js":"22","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Runge.js":"23","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Shooting.js":"24","C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Taylor.js":"25"},{"size":14393,"mtime":1614947981623,"results":"26","hashOfConfig":"27"},{"size":21660,"mtime":1614933013752,"results":"28","hashOfConfig":"27"},{"size":25357,"mtime":1614933040174,"results":"29","hashOfConfig":"27"},{"size":23144,"mtime":1614933058737,"results":"30","hashOfConfig":"27"},{"size":13746,"mtime":1614933077036,"results":"31","hashOfConfig":"27"},{"size":23979,"mtime":1614874703885,"results":"32","hashOfConfig":"27"},{"size":26800,"mtime":1614938061017,"results":"33","hashOfConfig":"27"},{"size":3899,"mtime":1614855713251,"results":"34","hashOfConfig":"27"},{"size":34737,"mtime":1614950211014,"results":"35","hashOfConfig":"27"},{"size":22760,"mtime":1614935998791,"results":"36","hashOfConfig":"27"},{"size":18110,"mtime":1614938491436,"results":"37","hashOfConfig":"27"},{"size":17277,"mtime":1614938949694,"results":"38","hashOfConfig":"27"},{"size":19334,"mtime":1614938975888,"results":"39","hashOfConfig":"27"},{"size":16795,"mtime":1614940078620,"results":"40","hashOfConfig":"27"},{"size":18623,"mtime":1614939010823,"results":"41","hashOfConfig":"27"},{"size":17332,"mtime":1614939029393,"results":"42","hashOfConfig":"27"},{"size":19828,"mtime":1614925428075,"results":"43","hashOfConfig":"27"},{"size":35451,"mtime":1614925307432,"results":"44","hashOfConfig":"27"},{"size":18337,"mtime":1614932254732,"results":"45","hashOfConfig":"27"},{"size":25388,"mtime":1614947820015,"results":"46","hashOfConfig":"27"},{"size":21971,"mtime":1614947776862,"results":"47","hashOfConfig":"27"},{"size":23430,"mtime":1614947799190,"results":"48","hashOfConfig":"27"},{"size":20796,"mtime":1614947858676,"results":"49","hashOfConfig":"27"},{"size":32279,"mtime":1614947882485,"results":"50","hashOfConfig":"27"},{"size":23185,"mtime":1614947905153,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mhuixq",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\constants\\categories.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Power.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\ShiftedPower.js",[],["105","106"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\InversePower.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\eigen\\Discs.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\nonlinear\\FalsePosition.js",["107"],"import {isValidMath, mathjsKeywords, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Graph from \"../../Graph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".interval-input\",\r\n        title: \"Interval\",\r\n        content:\r\n            \"Select the lower and upper bounds of x\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearFalsePosition({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Function\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n        functionValue.traverse(function (node, path, parent) {\r\n            if (node.type === 'SymbolNode' && !mathjsKeywords.includes(node.name)) {\r\n                if (node.name !== 'x') {\r\n                    throw \"variableName\";\r\n                }\r\n            }\r\n        });\r\n    }\r\n    catch(e) {\r\n        functionError = true;\r\n        functionErrorText = e === \"variableName\" ? \"Only x variable is allowed.\" :  \"Invalid equation!\";\r\n    }\r\n\r\n    // Interval\r\n    const [lowerX, setLowerX] = useState(0);\r\n    const [upperX, setUpperX] = useState(3);\r\n    let intervalError = false;\r\n    let lowerXErrorText = \"\";\r\n    let upperXErrorText = \"\";\r\n    if (isNaN(lowerX)) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be a number!\";\r\n    }\r\n    if (isNaN(upperX)) {\r\n        intervalError = true;\r\n        upperXErrorText = \"Upper x must be a number!\";\r\n    }\r\n    if (lowerX >= upperX) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be lower than upper x!\";\r\n        upperXErrorText = \"Upper x must be higher than lower x!\";\r\n    }\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0005);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (isNaN(errorThreshold)) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold must be a number!\";\r\n    }\r\n    else if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = functionError || intervalError || thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    let results = [];\r\n    let iterations = 1;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        let i = 0;\r\n        while (true) {\r\n            let oldLowerX = (i === 0) ? lowerX: results[i - 1].newLowerX;\r\n            let oldUpperX = (i === 0) ? upperX: results[i - 1].newUpperX;\r\n            let newLowerX = oldLowerX;\r\n            let newUpperX = oldUpperX;\r\n            let lowerFuncResult, upperFuncResult, rootX, rootFuncResult, errorX;\r\n            try {\r\n                lowerFuncResult = functionValue.evaluate({x : oldLowerX});\r\n                upperFuncResult = functionValue.evaluate({x : oldUpperX}); // upperFuncResult is for visualisation purposes, no relevance in the calculations\r\n                rootX = oldUpperX - upperFuncResult * (oldLowerX - oldUpperX) / (lowerFuncResult - upperFuncResult);\r\n                rootFuncResult = functionValue.evaluate({x : rootX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            let rootFound = false;\r\n            let product = lowerFuncResult * rootFuncResult;\r\n            if (product < 0) {\r\n                newUpperX = rootX;\r\n            }\r\n            else if (product > 0) {\r\n                newLowerX = rootX;\r\n            }\r\n            else {\r\n                rootFound = true;\r\n            }\r\n\r\n            if (!rootFound && i !== 0) {\r\n                // Check if root error is lower than threshold\r\n                errorX = Math.abs(rootX - results[i - 1].rootX);\r\n                if (errorX < errorThreshold){\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            results.push({\r\n                oldLowerX,\r\n                newLowerX,\r\n                oldUpperX,\r\n                newUpperX,\r\n                rootX,\r\n                lowerFuncResult,\r\n                upperFuncResult,\r\n                rootFuncResult,\r\n                errorX,\r\n            });\r\n            i++;\r\n            if (rootFound) {\r\n                break;\r\n            }\r\n            if (i > 1000) {\r\n                exceedIterError = true;\r\n                exceedIterErrorText = \"Exceeded 1000 iterations!\";\r\n                break;\r\n            }\r\n        }\r\n        iterations = i;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true);\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {functionLatex, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown}/>\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function, f(x):\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className=\"interval-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Lower x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setLowerX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={lowerX.toString()}\r\n                                        helperText={lowerXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Upper x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUpperX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={upperX.toString()}\r\n                                        helperText={upperXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"errorThreshold-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Error threshold:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                        error={thresholdError}\r\n                                        label={thresholdError?\"Error\":\"\"}\r\n                                        defaultValue={errorThreshold.toString()}\r\n                                        helperText={thresholdErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            \r\n        </>\r\n    );\r\n}\r\n/*\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nconst [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\nconst errorSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n    setOpenErrorSnackbar(false);\r\n};\r\n<Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n    <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n        There is an error with the {functionError?\"function\":\"iterations\"}.\r\n    </Alert>\r\n</Snackbar>\r\n*/\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let oldLowerXLatex = String.raw`x_{lower_{${currentIteration - 1}}}`;\r\n        let oldUpperXLatex = String.raw`x_{upper_{${currentIteration - 1}}}`;\r\n        let newLowerXLatex = String.raw`x_{lower_{${currentIteration}}}`;\r\n        let newUpperXLatex = String.raw`x_{upper_{${currentIteration}}}`;\r\n        let newRootXLatex = String.raw`x_{root_{${currentIteration - 1}}}`;\r\n        latexContent=String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ ${oldLowerXLatex} &=& ${formatLatex(currentResult.oldLowerX)}\r\n        \\\\ ${oldUpperXLatex} &=& ${formatLatex(currentResult.oldUpperX)}\r\n        \\\\ ${newRootXLatex} &=&  ${oldUpperXLatex}-\\frac{f(${oldUpperXLatex})(${oldLowerXLatex} - ${oldUpperXLatex})}{f(${oldLowerXLatex}) - f(${oldUpperXLatex})}\r\n        \\\\                       &=& ${formatLatex(currentResult.rootX)}\r\n        \\\\\r\n        `;\r\n\r\n        let rootFound = false;\r\n        latexContent += String.raw`\r\n        \\\\ f(${oldLowerXLatex}) &=& ${formatLatex(currentResult.lowerFuncResult)}\r\n        \\\\ f(${newRootXLatex}) &=& ${formatLatex(currentResult.rootFuncResult)}\r\n        \\\\\r\n        \\\\\r\n        `;\r\n        let product = currentResult.lowerFuncResult * currentResult.rootFuncResult;\r\n        if (product < 0) {\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\hline\r\n            \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) < 0,\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${newLowerXLatex} &=& ${oldLowerXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n            \\\\ ${newUpperXLatex} &=& ${newRootXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n            `;\r\n        }\r\n        else if (product > 0) {\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\hline\r\n            \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) > 0,\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${newLowerXLatex} &=& ${newRootXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n            \\\\ ${newUpperXLatex} &=& ${oldUpperXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n            `;\r\n        }\r\n        else {\r\n            rootFound = true;\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\hline\r\n            \\\\ \\text{Root found because }\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ f(${oldLowerXLatex})f(${newRootXLatex}) == 0.\r\n            `;\r\n        }\r\n        \r\n        if (!rootFound && currentIteration > 1) {\r\n            let oldRootXLatex = String.raw`x_{root_{${currentIteration - 2}}}`;\r\n            latexContent += String.raw`\r\n            \\\\ ${oldRootXLatex} &=& ${formatLatex(results[currentIteration - 2].rootX)}\r\n            \\\\ Error &=& |${newRootXLatex} - ${oldRootXLatex}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n            \\\\\r\n            `;\r\n            if (currentResult.errorX < params.errorThreshold) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\\r\n                \\\\ \\hline\r\n                \\\\ \\text{Root found because:}\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ Error &<& Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorX)} &<& ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: params.functionLatex});\r\n            calculator.current.setExpression({ id: 'lowerX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Lower\", showLabel:true, latex:\r\n                `(${currentResult.oldLowerX}, ${currentResult.lowerFuncResult})` });\r\n            calculator.current.setExpression({ id: 'upperX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Upper\", showLabel:true, latex:\r\n                `(${currentResult.oldUpperX}, ${currentResult.upperFuncResult})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${currentResult.rootX}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                \r\n                    <Grid container xs item direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                        <Grid xs item className=\"iteration-slider\">\r\n                            <Slide direction=\"left\" triggerOnce>\r\n                                <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                    <Slider\r\n                                        orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                        onChange={(event, value) => setCurrentIteration(value)}\r\n                                        defaultValue={1}\r\n                                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                                        step={1}\r\n                                        marks\r\n                                        min={1}\r\n                                        max={params.iterations}\r\n                                        valueLabelDisplay=\"on\"\r\n                                    />\r\n                                    \r\n                                </Box>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid xs item className=\"step-math\">\r\n                                <Zoom duration={500} triggerOnce>\r\n                                    <Card className={styleClasses.card}>\r\n                                        <CardContent className={styleClasses.cardContent}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Iteration {currentIteration}:\r\n                                            </Typography>\r\n                                            <TeX math={latexContent} block />\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Zoom>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs item className=\"graph-button\">\r\n                            <Slide direction=\"right\" triggerOnce>\r\n                                <Graph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                            </Slide>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearFalsePosition;",["108","109"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\optimisation\\Gradient.js",["110","111"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\fourier\\FFT.js",["112"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\System.js",["113"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\optimisation\\GoldenSearch.js",["114"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\differential\\Finite.js",["115","116"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Midpoint.js",["117"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\MonteCarlo.js",["118"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Quadrature.js",["119"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Simpson.js",["120"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\integral\\Trapezoidal.js",["121"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\LU.js",[],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\JacobiSeidel.js",["122","123","124"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\linear\\PenroseInverse.js",["125"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Multistep.js",["126"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Euler.js",["127"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\FiniteDiff.js",["128","129","130","131","132","133","134","135"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Runge.js",["136"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Shooting.js",["137"],"C:\\Users\\ACER NITRO5\\Desktop\\numerical-methods-js\\src\\components\\methods\\ode\\Taylor.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":118,"column":21,"nodeType":"145","messageId":"146","endLine":118,"endColumn":42},{"ruleId":"139","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"143","severity":1,"message":"144","line":133,"column":21,"nodeType":"145","messageId":"146","endLine":133,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":136,"column":21,"nodeType":"145","messageId":"146","endLine":136,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":82,"column":11,"nodeType":"151","messageId":"152","endLine":82,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":192,"column":25,"nodeType":"145","messageId":"146","endLine":192,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":118,"column":21,"nodeType":"145","messageId":"146","endLine":118,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":3,"column":37,"nodeType":"151","messageId":"152","endLine":3,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":112,"column":21,"nodeType":"145","messageId":"146","endLine":112,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":116,"column":21,"nodeType":"145","messageId":"146","endLine":116,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":125,"column":21,"nodeType":"145","messageId":"146","endLine":125,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":117,"column":21,"nodeType":"145","messageId":"146","endLine":117,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":116,"column":21,"nodeType":"145","messageId":"146","endLine":116,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":116,"column":21,"nodeType":"145","messageId":"146","endLine":116,"endColumn":42},{"ruleId":"149","severity":1,"message":"154","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":238,"column":57,"nodeType":"157","messageId":"158","endLine":238,"endColumn":83},{"ruleId":"155","severity":1,"message":"159","line":242,"column":53,"nodeType":"157","messageId":"158","endLine":242,"endColumn":79},{"ruleId":"149","severity":1,"message":"160","line":6,"column":31,"nodeType":"151","messageId":"152","endLine":6,"endColumn":39},{"ruleId":"143","severity":1,"message":"144","line":129,"column":21,"nodeType":"145","messageId":"146","endLine":129,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":139,"column":21,"nodeType":"145","messageId":"146","endLine":139,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":138,"column":25,"nodeType":"145","messageId":"146","endLine":138,"endColumn":46},{"ruleId":"149","severity":1,"message":"161","line":497,"column":10,"nodeType":"151","messageId":"152","endLine":497,"endColumn":15},{"ruleId":"149","severity":1,"message":"162","line":499,"column":11,"nodeType":"151","messageId":"152","endLine":499,"endColumn":23},{"ruleId":"149","severity":1,"message":"163","line":501,"column":30,"nodeType":"151","messageId":"152","endLine":501,"endColumn":49},{"ruleId":"149","severity":1,"message":"164","line":503,"column":9,"nodeType":"151","messageId":"152","endLine":503,"endColumn":17},{"ruleId":"149","severity":1,"message":"165","line":504,"column":9,"nodeType":"151","messageId":"152","endLine":504,"endColumn":18},{"ruleId":"149","severity":1,"message":"166","line":508,"column":11,"nodeType":"151","messageId":"152","endLine":508,"endColumn":19},{"ruleId":"149","severity":1,"message":"167","line":509,"column":11,"nodeType":"151","messageId":"152","endLine":509,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":129,"column":21,"nodeType":"145","messageId":"146","endLine":129,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":157,"column":25,"nodeType":"145","messageId":"146","endLine":157,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":135,"column":21,"nodeType":"145","messageId":"146","endLine":135,"endColumn":42},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["168"],["169"],"no-unused-vars","'smallScreen' is assigned a value but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'Link' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'modifiedMatrix'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'modifiedOutput'.","'identity' is defined but never used.","'Steps' is defined but never used.","'styleClasses' is assigned a value but never used.","'setCurrentIteration' is assigned a value but never used.","'hasError' is assigned a value but never used.","'errorText' is assigned a value but never used.","'currentX' is assigned a value but never used.","'newX' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]