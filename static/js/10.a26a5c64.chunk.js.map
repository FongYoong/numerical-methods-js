{"version":3,"sources":["components/methods/linear/matrix_utils.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","components/methods/linear/JacobiSeidel.js"],"names":["MatrixElementEditor","props","ref","React","createRef","onInputChange","value","current","parseInt","isNaN","setState","state","this","column","key","defaultValue","onBlur","onChange","Component","style","display","justifyContent","alignItems","flexDirection","columnSettings","editable","editor","formatter","createNewColumn","numberOfColumns","newNum","name","createNewRow","newRow","i","gridTo2DArray","rowsArray","keys","Object","sort","map","row","k","cloneArray","array","JSON","parse","stringify","isDiagonallyDominant","matrix","length","diagonal","sum","j","Math","abs","numberFactorials","nextPermutation","temp","generatePermutationMapping","target","original","Array","mapping","alreadyCovered","includes","push","matrixToLatex","latex","single","leftBracketOnly","rightBracketOnly","boldRows","transpose","String","raw","rowLength","colLength","isBold","b","content","formatMatrixLatex","initialMatrix","columns","rows","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","theme","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","_props$color","color","nameProp","onChangeProp","_props$size","size","radioGroup","createChainedFunction","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","FormGroup","_props$row","flexWrap","RadioGroup","actions","children","valueProp","rootRef","setValue","focus","querySelector","handleRef","useForkRef","useId","Provider","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","Typography","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","TOUR_STEPS","title","disableBeacon","useStyles","makeStyles","paper","spacing","textAlign","container","card","cardContent","overflow","matrixCard","divider","marginTop","marginBottom","fab","bottom","right","Steps","latexContent","smallScreen","params","styleClasses","useState","currentIteration","setCurrentIteration","hasError","exceedIterError","errorText","exceedIterErrorText","iterations","triedPermutating","originalMatrix","originalInput","originalOutput","results","currentResult","permutated","permutationMapping","rowIndexes","v","values","previousLatex","operationLatex","entries","newLatex","newMatrix","newOutput","index","output","solverExpressionLatex","solverType","oldInput","matrixSize","newInput","restoredOutput","ind","formatLatex","errorInput","converged","errorThreshold","Container","Collapse","in","Alert","severity","Grid","direction","justify","xs","item","triggerOnce","Card","CardContent","variant","Box","Slider","orientation","onChangeCommitted","aria-labelledby","step","marks","min","max","valueLabelDisplay","math","LinearJacobiSeidel","methodName","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","rowHeight","widthPadding","heightPadding","gridState","setGridState","inputColumnState","setInputColumnState","outputColumnState","setOutputColumnState","generateGridCallback","stateSetter","fromRow","toRow","updated","slice","sizeCallback","add","inputColumns","inputRows","outputColumns","outputRows","pop","setSolverType","setErrorThreshold","thresholdError","thresholdErrorText","solve","modifiedInput","dominant","modifiedMatrix","modifiedOutput","console","log","numPermutations","permutatedMatrix","runTour","setRunTour","Header","Paper","cascade","Link","rel","href","aria-label","onClick","rowGetter","rowsCount","onGridRowsUpdated","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","minHeight","random","TextField","parseFloat","error","toString","helperText","Divider","Tooltip","arrow","placement","Fab","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback"],"mappings":"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","file":"static/js/10.a26a5c64.chunk.js","sourcesContent":["import {formatMatrixLatex} from \"../../utils\";\r\nimport React from \"react\";\r\n\r\nexport class MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseInt(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nexport default class WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns) => {\r\n    const newNum = numberOfColumns + 1;\r\n    return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBold) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import {formatLatex, formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix3, initialInputColumn3, initialOutputColumn3, createNewColumn, createNewRow, gridTo2DArray, cloneArray,\r\nisDiagonallyDominant, numberFactorials, nextPermutation, generatePermutationMapping, matrixToLatex} from \"./matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".input-col-input\",\r\n        title: \"Input\",\r\n        content:\r\n        \"Specify the initial input vector.\",\r\n    },\r\n    {\r\n        target: \".output-col-input\",\r\n        title: \"Output\",\r\n        content:\r\n        \"Specify the output vector.\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearJacobiSeidel({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix3);\r\n    const [inputColumnState, setInputColumnState] = useState(initialInputColumn3);\r\n    const [outputColumnState, setOutputColumnState] = useState(initialOutputColumn3);\r\n    function generateGridCallback (state, stateSetter) {\r\n        return ({ fromRow, toRow, updated }) => {\r\n            const rows = state.rows.slice();\r\n            for (let i = fromRow; i <= toRow; i++) {\r\n                rows[i] = { ...rows[i], ...updated };\r\n            }\r\n            stateSetter({\r\n                ...state, rows\r\n            });\r\n        };\r\n    }\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            const inputColumns = inputColumnState.columns.slice();\r\n            const inputRows = inputColumnState.rows.slice();\r\n            const outputColumns = outputColumnState.columns.slice();\r\n            const outputRows = outputColumnState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n                inputColumns.push(createNewColumn(inputColumns.length));\r\n                inputRows[0][`col_${inputColumns.length}`] = 0;\r\n                outputColumns.push(createNewColumn(outputColumns.length));\r\n                outputRows[0][`col_${outputColumns.length}`] = 0;\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < outputRows.length; i++) {\r\n                    delete outputRows[i][`col_${outputColumns.length}`];\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n                for (let i = 0; i < inputRows.length; i++) {\r\n                    delete inputRows[i][`col_${inputColumns.length}`];\r\n                }\r\n                inputColumns.pop();\r\n                outputColumns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n            setInputColumnState({columns: inputColumns, rows: inputRows});\r\n            setOutputColumnState({columns: outputColumns, rows: outputRows});\r\n        };\r\n    }\r\n\r\n    // Solver Type\r\n    const [solverType, setSolverType] = useState(\"jacobi\");\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0002);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    const originalOutput = gridTo2DArray(outputColumnState.rows)[0];\r\n    const originalInput = gridTo2DArray(inputColumnState.rows)[0];\r\n    let modifiedInput = cloneArray(originalInput);\r\n    const matrixSize = gridState.rows.length;\r\n    let results = [];\r\n    let iterations = 0;\r\n    let permutated = false;\r\n    let triedPermutating = false; // Failed to obtain a dominant matrix even after permutating.\r\n    if (!hasError) {\r\n        solve = true;\r\n        let dominant = false; // Strictly diagonally dominant\r\n        let modifiedMatrix = cloneArray(originalMatrix);\r\n        let modifiedOutput = cloneArray(originalOutput);\r\n        console.log(\"Original: \", modifiedMatrix);\r\n        if (!isDiagonallyDominant(modifiedMatrix)) {\r\n            console.log(\"Initially not dominant!\");\r\n            let numPermutations = numberFactorials[matrixSize];\r\n            let rowIndexes = [...Array(matrixSize).keys()];\r\n            for (let i = 0; i < numPermutations - 1; i++) {\r\n                nextPermutation(rowIndexes);\r\n                const permutatedMatrix = rowIndexes.map(ind => modifiedMatrix[ind]);\r\n                if (isDiagonallyDominant(permutatedMatrix)) {\r\n                    dominant = true;\r\n                    modifiedMatrix = permutatedMatrix;\r\n                    modifiedOutput = rowIndexes.map(ind => modifiedOutput[ind]);\r\n                    console.log(\"Found a dominant!\", modifiedMatrix, modifiedOutput, rowIndexes);\r\n                    break;\r\n                }\r\n            }\r\n            if (dominant) {\r\n                results.push({\r\n                    newMatrix: cloneArray(modifiedMatrix),\r\n                    newOutput: cloneArray(modifiedOutput),\r\n                    newInput: cloneArray(modifiedInput),\r\n                    permutated: true,\r\n                    rowIndexes: rowIndexes,\r\n                });\r\n                permutated = true;\r\n                iterations += 1;\r\n            }\r\n            else {\r\n                console.log(\"Tried permutating but failed!\");\r\n                triedPermutating = true;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Initially dominant!\");\r\n            dominant = true;\r\n        }\r\n        \r\n        if (dominant) {\r\n            console.log(\"Solve Dominant!\");\r\n            let i = 0;\r\n            while (true) {\r\n                let oldInput = (i === 0) ? originalInput : results[i - 1 + iterations].newInput;\r\n                let newInput = [];\r\n                for (let j = 0; j < matrixSize; j++) {\r\n                    let sum = modifiedOutput[j];\r\n                    if (solverType === \"jacobi\") {\r\n                        for (let k = 0; k < matrixSize; k++) {\r\n                            if (k !== j) {\r\n                                sum -= modifiedMatrix[j][k] * oldInput[k];\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let k = 0; k < matrixSize; k++) {\r\n                            if (k < j) {\r\n                                sum -= modifiedMatrix[j][k] * newInput[k];\r\n                            }\r\n                            else if (k > j) {\r\n                                sum -= modifiedMatrix[j][k] * oldInput[k];\r\n                            }\r\n                        }\r\n                    }\r\n                    sum /= modifiedMatrix[j][j];\r\n                    newInput.push(sum);\r\n                }\r\n                let errorInput = newInput.map((v, index) => Math.abs(v - oldInput[index]));\r\n                let converged = true;\r\n                for (let j = 0; j < matrixSize; j++) {\r\n                    if (errorInput[j] >= errorThreshold) {\r\n                        converged = false;\r\n                        break;\r\n                    }\r\n                }\r\n                results.push({\r\n                    oldInput,\r\n                    newInput,\r\n                    errorInput,\r\n                    converged,\r\n                });\r\n                \r\n                i++;\r\n                if (converged) {\r\n                    console.log(\"Converged\");\r\n                    break;\r\n                }\r\n                if (i > 1000) {\r\n                    console.log(\"Exceeded 1000 iterations!\");\r\n                    exceedIterError = true;\r\n                    exceedIterErrorText = \"Exceeded 1000 iterations! Try increasing the error threshold.\";\r\n                    break;\r\n                }\r\n            }\r\n            iterations += i;\r\n        }\r\n    }\r\n    console.log(results);\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {solverType, originalMatrix, originalInput, originalOutput, matrixSize, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results, permutated, triedPermutating};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        This method is applied to matrices in the form of\r\n                        <TeX math={String.raw`\\ Ax=B`} />\r\n                        . <Link rel=\"noopener noreferrer\" href=\"https://people.richland.edu/james/lecture/m116/matrices/pivot.html\" target=\"_blank\" aria-label=\"Pivoting\">Pivoting</Link>\r\n                        &nbsp; bla bla bla. Warning: 7x7 matrix, factorial, 7! * 7*7\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"solver-type-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Solver Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <RadioGroup aria-label=\"solverType\" name=\"solverType\" value={solverType} onChange={(event)=>setSolverType(event.target.value)}>\r\n                                                <FormControlLabel value=\"jacobi\" control={<Radio />} label=\"Jacobi\" />\r\n                                                <FormControlLabel value=\"seidel\" control={<Radio />} label=\"Gauss-Seidel\" />\r\n                                            </RadioGroup>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid xs item className=\"input-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Initial Input, <TeX math={String.raw`X^{(0)}`} />:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={inputColumnState.columns}\r\n                                                        rowGetter={i => inputColumnState.rows[i]}\r\n                                                        rowsCount={inputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(inputColumnState, setInputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * inputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * inputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"output-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Output, B:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={outputColumnState.columns}\r\n                                                        rowGetter={i => outputColumnState.rows[i]}\r\n                                                        rowsCount={outputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(outputColumnState, setOutputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * outputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * outputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"errorThreshold-input\">\r\n                                            <Card className={styleClasses.card}>\r\n                                                <CardContent className={styleClasses.cardContent}>\r\n                                                    <Typography variant=\"h6\">\r\n                                                        Error threshold:\r\n                                                    </Typography>\r\n                                                    <TextField\r\n                                                        disabled={false}\r\n                                                        type=\"number\"\r\n                                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                                        error={thresholdError}\r\n                                                        label={thresholdError?\"Error\":\"\"}\r\n                                                        defaultValue={errorThreshold.toString()}\r\n                                                        helperText={thresholdErrorText}\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n    let latexContent;\r\n\r\n    if (currentIteration <= 0) {\r\n        setCurrentIteration(1);\r\n    }\r\n    else if (params.iterations > 0 && currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.triedPermutating) {\r\n        // Failed even after permutating the matrix\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\text{Cannot find a diagonally dominant matrix.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n           \\overbrace{${matrixToLatex(params.originalInput, {single: true})}}^{X_{0}}\r\n        &=&\\overbrace{${matrixToLatex(params.originalOutput, {single: true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    else if (params.iterations > 0) {\r\n        let results = params.results;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\begin{array}{lcl}\r\n        `;\r\n        if (currentResult.permutated) {\r\n            const permutationMapping = generatePermutationMapping(currentResult.rowIndexes);\r\n            const boldRows = Object.keys(permutationMapping).map((v) => parseInt(v) + 1);\r\n            boldRows.push(...Object.values(permutationMapping).map((v) => v + 1));\r\n            const previousLatex = String.raw`\r\n            \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(params.originalOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            let operationLatex =  String.raw`\\begin{array}{l}`;\r\n            for (const [key, value] of Object.entries(permutationMapping)) {\r\n                operationLatex += String.raw`R_{${parseInt(key) + 1}} \\leftrightarrow R_{${value + 1}}\\\\`;\r\n            }\r\n            operationLatex += String.raw`\\end{array}`;\r\n            const newLatex= String.raw`\r\n            \\overbrace{${matrixToLatex(currentResult.newMatrix, {leftBracketOnly:true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(currentResult.newOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            latexContent += String.raw`\r\n            \\\\ \\text{The matrix's rows are } \\textbf{permutated} ${smallScreen?\"\\\\\\\\\":\"\"} \\text{ to make it } \\textbf{strictly diagonally dominant.}\r\n            \\\\`\r\n            if (smallScreen) {\r\n                latexContent += String.raw`\r\n                \\\\ ${previousLatex}\r\n                \\\\ \\begin{array}{lcl}\r\n                    & \\downarrow &\r\n                    \\\\ & ${operationLatex} &\r\n                    \\\\ & \\downarrow &\r\n                    \\end{array}\r\n                \\\\ ${newLatex}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ \\begin{array}{lcl}\r\n                \\\\ ${previousLatex}\r\n                    & \\overrightarrow{${operationLatex}}\r\n                    & ${newLatex}\r\n                    \\end{array}\r\n                `;\r\n            }\r\n        }\r\n        else {\r\n            let index = params.permutated ? currentIteration - 1: currentIteration;\r\n            let matrix = params.permutated ? results[0].newMatrix : params.originalMatrix;\r\n            let output = params.permutated ? results[0].newOutput : params.originalOutput;\r\n            let solverExpressionLatex = params.solverType === \"jacobi\" ?\r\n            String.raw`\r\n            X^{(${index})}_i &=& \\frac{1}{A_{ii}}\r\n                \\left[ B_i - \\sum_{\\substack{j = 1, \\\\ j \\ne i}}^n \\left( A_{ij} \\cdot X^{(${index - 1})}_j \\right)\r\n                \\right]`\r\n            :\r\n            String.raw`\r\n            X^{(${index})}_i &=& \\frac{1}{A_{ii}}\r\n                \\left[ B_i - \\sum_{\\substack{j = 1}}^{i-1} \\left( A_{ij} \\cdot X^{(${index})}_j \\right)\r\n                           - \\sum_{\\substack{j = i+1}}^{n} \\left( A_{ij} \\cdot X^{(${index - 1})}_j \\right)\r\n\r\n                \\right]`;\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\overbrace{${matrixToLatex(matrix, {leftBracketOnly:true})}}^{A}\r\n            \\overbrace{${matrixToLatex(currentResult.oldInput, {single: true})}}^{X^{(${index - 1})}}\r\n            = \\overbrace{${matrixToLatex(output, {single:true})}}^{B}\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${solverExpressionLatex}\r\n            \\\\\r\n            \\\\ &=& \\left[\\begin{matrix}\r\n            `;\r\n            for (let i = 0; i < params.matrixSize; i++) {\r\n                latexContent += String.raw`\\frac{1}{${formatMatrixLatex(matrix[i][i])}} \\left[ ${formatMatrixLatex(output[i])}`;\r\n                if (params.solverType === \"jacobi\") {\r\n                    for (let j = 0; j < params.matrixSize; j++) {\r\n                        if (j !== i) {\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.oldInput[j])}) `;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let j = 0; j < params.matrixSize; j++) {\r\n                        if (j < i) {\r\n                            //sum -= modifiedMatrix[i][j] * newInput[j];\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.newInput[j])}) `;\r\n                        }\r\n                        else if (j > i) {\r\n                            //sum -= modifiedMatrix[i][j] * oldInput[j];\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.oldInput[j])}) `;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                latexContent += String.raw`\\right] \\cr`;\r\n            }\r\n\r\n            latexContent += String.raw`\r\n            \\end{matrix}\\right]\r\n            \\\\\r\n            \\\\ X^{(${index})} &=& ${matrixToLatex(currentResult.newInput, {single: true})}\r\n            \\end{array}\r\n            `;\r\n            if (results[0].permutated) {\r\n                // Reorder the equations\r\n                let restoredOutput = cloneArray(currentResult.newInput);\r\n                restoredOutput = results[0].rowIndexes.map(ind => restoredOutput[ind]);\r\n                latexContent += String.raw`\r\n                \\\\\r\n                \\\\ \\text {Given that the matrix A has been permutated in iteration 1, }\r\n                \\\\ \\text {we must restore the original order:}\r\n                \\\\\r\n                \\\\ X^{(${index})}_{restored} = ${matrixToLatex(restoredOutput, {single: true})}\r\n                `;\r\n            }\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ Error &=& |X^{(${index})} - X^{(${index - 1})}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorInput)}|\r\n            \\end{array}\r\n            `;\r\n            if (currentResult.converged) {\r\n                latexContent += String.raw`\r\n                \\\\\r\n                \\\\ \\text{Converged because:}\r\n                \\\\\r\n                \\\\ Error < Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorInput)} < ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n        \r\n    }\r\n    else {\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{lcl}\r\n        \\\\ \\text{Cannot do anything.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n           \\overbrace{${matrixToLatex(params.originalInput, {single: true})}}^{X_{0}}\r\n        &=&\\overbrace{${matrixToLatex(params.originalOutput, {single: true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" width=\"70vw\">\r\n                                <Slider\r\n                                    orientation=\"horizontal\"\r\n                                    onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={currentIteration}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations<=0 ? 1 :params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iteration {currentIteration}:\r\n                                    </Typography>\r\n                                    <TeX math={latexContent} />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearJacobiSeidel;"],"sourceRoot":""}