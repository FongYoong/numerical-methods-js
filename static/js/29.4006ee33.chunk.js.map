{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/methods/linear/SVD.js","components/matrix_utils.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","LinearSVD","methodName","markdown","useEffect","document","styleClasses","smallScreen","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","useState","initialMatrix","gridState","setGridState","columnCallback","add","columns","slice","rows","push","createNewColumn","length","i","pop","rowCallback","createNewRow","originalMatrix","gridTo2DArray","rowLength","colLength","multiplyTranspose","multiply","transpose","multiplyTransposeEigen","MLEigen","MLMatrix","multiplyTransposeEigenMatrix","Array","from","eigenvectorMatrix","data","map","v","multiplyTransposeSingularValues","realEigenvalues","reverse","Math","sqrt","transposeMultiply","transposeMultiplyEigen","transposeMultiplyEigenMatrix","transposeMultiplyEigenValues","transposeMultiplySingularValues","rightUnitaryT","leftUnitaryT","leftUnitary","diagonal","fill","product","latexContent","String","raw","matrixToLatex","filter","isNaN","formatMatrixLatex","j","runTour","setRunTour","duration","triggerOnce","cascade","variant","direction","alignItems","justify","xs","item","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","math","block","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","createRef","onInputChange","value","current","parseFloat","setState","this","column","key","defaultValue","onBlur","onChange","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","newRow","rowsArray","keys","Object","sort","row","k","cloneArray","array","JSON","parse","stringify","isDiagonallyDominant","matrix","sum","abs","numberFactorials","getBinomialCoefficient","n","nextPermutation","temp","generatePermutationMapping","original","mapping","alreadyCovered","includes","latex","single","leftBracketOnly","rightBracketOnly","boldRows","boldColumns","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix17","initialMatrix18","initialMatrix19","initialMatrix20","initialMatrix21","initialMatrix22"],"mappings":"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","file":"static/js/29.4006ee33.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix6 as initialMatrix, generateGridCallback, createNewColumn, createNewRow, gridTo2DArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { transpose, multiply } from 'mathjs';\r\nimport {Matrix as MLMatrix, EigenvalueDecomposition as MLEigen} from 'ml-matrix';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport { Zoom } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-col-input\",\r\n        title: \"Column\",\r\n        content:\r\n        \"Add/Remove columns\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-row-input\",\r\n        title: \"Row\",\r\n        content:\r\n        \"Add/Remove rows\",\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearSVD({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const columnCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n    const rowCallback = (add) => {\r\n        return () => {\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                rows.push(createNewRow(gridState.columns.length));\r\n            }\r\n            else {\r\n                if (rows.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n            }\r\n            setGridState({...gridState, rows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    const rowLength = gridState.rows.length; // row dimension\r\n    const colLength = gridState.columns.length; // column dimension\r\n    \r\n/*\r\n    const multiplyTranspose = multiply(transpose(originalMatrix), originalMatrix); // AT*A\r\n    const multiplyTransposeEigen = eigs(multiplyTranspose);\r\n    const multiplyTransposeSingularValues = multiplyTransposeEigen.values.slice().reverse().map((v) => Math.sqrt(v));\r\n    const transposeMultiply = multiply(originalMatrix, transpose(originalMatrix)); // A*AT\r\n    const transposeMultiplyEigen = eigs(transposeMultiply);\r\n    const transposeMultiplySingularValues = transposeMultiplyEigen.values.slice().reverse().map((v) => Math.sqrt(v));\r\n\r\n    let rightUnitaryT = transpose(multiplyTransposeEigen.vectors).reverse();\r\n    let leftUnitaryT = transpose(transposeMultiplyEigen.vectors).reverse();\r\n    let leftUnitary = transpose(leftUnitaryT);\r\n*/\r\n    const multiplyTranspose = multiply(originalMatrix, transpose(originalMatrix)); // A*AT\r\n    const multiplyTransposeEigen = new MLEigen(new MLMatrix(multiplyTranspose));\r\n    const multiplyTransposeEigenMatrix = Array.from(multiplyTransposeEigen.eigenvectorMatrix.data.map((v) => Array.from(v)));\r\n    const multiplyTransposeSingularValues = multiplyTransposeEigen.realEigenvalues.slice().reverse().map((v) => Math.sqrt(v));\r\n\r\n    const transposeMultiply = multiply(transpose(originalMatrix), originalMatrix); // AT*A\r\n    const transposeMultiplyEigen = new MLEigen(new MLMatrix(transposeMultiply));\r\n    const transposeMultiplyEigenMatrix = Array.from(transposeMultiplyEigen.eigenvectorMatrix.data.map((v) => Array.from(v)));\r\n    const transposeMultiplyEigenValues = transposeMultiplyEigen.realEigenvalues.slice().reverse();\r\n    const transposeMultiplySingularValues = transposeMultiplyEigen.realEigenvalues.slice().reverse().map((v) => Math.sqrt(v));\r\n\r\n    let rightUnitaryT = transpose(transposeMultiplyEigenMatrix).reverse();\r\n    let leftUnitaryT = transpose(multiplyTransposeEigenMatrix).reverse();\r\n    let leftUnitary = transpose(leftUnitaryT);\r\n\r\n    let diagonal = [];\r\n    if (rowLength <= colLength) {\r\n        for (let i = 0; i < rowLength; i++) {\r\n            diagonal.push(Array(colLength).fill(0));\r\n            if (i < colLength) {\r\n                diagonal[i][i] = multiplyTransposeSingularValues[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++) {\r\n            diagonal.push(Array(colLength).fill(0));\r\n            if (i < colLength) {\r\n                diagonal[i][i] = transposeMultiplySingularValues[i];\r\n            }\r\n        }\r\n    }\r\n    const product = multiply(leftUnitary, multiply(diagonal, rightUnitaryT));\r\n\r\n    let latexContent = String.raw`\r\n    \\displaystyle\r\n    \\begin{array}{l}\r\n    \\begin{array}{lcl}\r\n    \\\\ AA^{T} = ${matrixToLatex(multiplyTranspose)}\r\n    \\\\\r\n    \\\\ \\text{The eigenvectors of } AA^{T}:\r\n    \\\\\r\n    \\\\ \\bf{U} = \\left[\\begin{matrix}`;\r\n\r\n    for (let i = 0 ; i < multiplyTransposeEigenMatrix.length; i++) {\r\n        latexContent += String.raw` v_{${i + 1}} ${i === multiplyTransposeEigenMatrix.length - 1 ? '': '&'} `;\r\n    }\r\n\r\n    latexContent += String.raw`\r\n    \\end{matrix}\\right] = ${matrixToLatex(leftUnitary)}\r\n    \\\\ \r\n    \\\\ \\hline\r\n    \\\\\r\n    \\\\ A^{T}A = ${matrixToLatex(transposeMultiply)}\r\n    \\\\\r\n    \\\\\r\n    \\\\ \\text{The eigenvectors of } A^{T}A:\r\n    \\\\\r\n    \\\\ \\bf{V^{T}} = \\left[\\begin{matrix}`;\r\n\r\n    for (let i = 0 ; i < transposeMultiplyEigenMatrix.length; i++) {\r\n        latexContent += String.raw` v_{${i + 1}}\\cr `;\r\n    }\r\n\r\n    latexContent += String.raw`\r\n    \\end{matrix}\\right] = ${matrixToLatex(rightUnitaryT)}\r\n    \\\\\r\n    \\begin{array}{lcl}\r\n    \\\\ \\text{The eigenvalues of } A^{T}A &=& ${transposeMultiplyEigenValues.filter((v) => !isNaN(v)).map((v) => formatMatrixLatex(v))}\r\n    \\\\\r\n    \\\\ \\text{The singular values,} \\ \\sigma &=& \\sqrt{\\text{Eigenvalues}}\r\n    \\\\          &=& ${transposeMultiplySingularValues.filter((v) => !isNaN(v)).map((v) => formatMatrixLatex(v))}\r\n    \\end{array}\r\n    \\\\\r\n    \\\\ \\bf{D} = \\left[\\begin{matrix}`;\r\n    for (let i = 0; i < rowLength; i++) {\r\n        for (let j = 0; j < colLength; j++) {\r\n            if (j === i) {\r\n                latexContent += String.raw`\\colorbox{aqua}{\\bf{${formatMatrixLatex(diagonal[i][j])}}}`;\r\n            }\r\n            else {\r\n                latexContent += String.raw`${formatMatrixLatex(diagonal[i][j])}`;\r\n            }\r\n            if (j !== colLength - 1) {\r\n                latexContent += String.raw`&`;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\cr`;\r\n    }\r\n\r\n   latexContent += String.raw`\r\n    \\end{matrix}\\right]\r\n    \\\\\r\n    \\\\ \\hline\r\n    \\\\ \\begin{array}{lcl}\r\n    \\\\ A &=& ${matrixToLatex(originalMatrix)}\r\n    \\\\\r\n    \\\\ U &=& ${matrixToLatex(leftUnitary)}\r\n    \\\\\r\n    \\\\ D &=& ${matrixToLatex(diagonal)}\r\n    \\\\\r\n    \\\\ V^{T} &=& ${matrixToLatex(rightUnitaryT)}\r\n    \\\\\r\n    \\\\ A &=& U D V^{T}\r\n    \\\\\r\n    \\\\   &=& ${matrixToLatex(leftUnitary)} ${matrixToLatex(diagonal)} ${matrixToLatex(rightUnitaryT)}\r\n    \\\\\r\n    \\\\   &=& ${matrixToLatex(product)}\r\n    \\\\ \\end{array}\r\n    \\\\\r\n    \\\\ \\hline\r\n    \\\\ \\text{In some cases, } U D V^{T} \\ne A\r\n    \\\\ \\text{The error could be very small due to rounding error. }\r\n    \\\\ \\text{Otherwise, if the error is really huge or if the signs are reversed, this is because the my naive SVD algorithm sometimes}\r\n    \\\\ \\text{fails to properly realign the eigenvector matrices.}\r\n    \\\\ \\text{I'm too lazy to rectify this, sorry!}\r\n    \\end{array}\\end{array}\r\n    `;\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                    Note: Errors may occur depending on the matrix used\r\n                    <br/>\r\n                    because I've not perfected the algorithm yet.\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-col-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Columns:\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(false)}>\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(true)}>\r\n                                                <AddCircleOutlineOutlinedIcon  />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-row-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Rows:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n\r\n            <Container className={styleClasses.container}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Zoom direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <TeX math={latexContent} block />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearSVD;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 5, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix18 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix19 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix20 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n        { key: \"col_3\", name: \"u\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: 2},\r\n    ]\r\n}\r\nexport const initialMatrix21 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 2},\r\n    ]\r\n}\r\nexport const initialMatrix22 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 5},\r\n    ]\r\n}"],"sourceRoot":""}