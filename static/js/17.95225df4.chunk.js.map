{"version":3,"sources":["components/methods/linear/QR.js","components/matrix_utils.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","Steps","smallScreen","latexContent","params","styleClasses","useState","currentIteration","setCurrentIteration","iterations","results","currentResult","initialResultMatrix","originalMatrix","resultMatrix","initialQMatrix","qMatrix","String","raw","matrixToLatex","boldColumns","vectorColumn","single","formatMatrixLatex","columnNorm","vectorBasis","vectorCombined","transposeMultiply","multiplyTranspose","identity","length","toArray","householder","multiply","className","direction","alignItems","justify","xs","item","triggerOnce","id","orientation","onChangeCommitted","event","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","variant","math","block","LinearQR","methodName","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","sizeCallback","add","columns","slice","rows","push","createNewColumn","createNewRow","i","pop","gridTo2DArray","modifiedMatrix","cloneArray","matrixSize","console","log","iter","squeeze","getColumn","norm","zeros","Array","fill","j","subtract","runTour","setRunTour","duration","cascade","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","in","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","props","ref","React","createRef","onInputChange","current","parseFloat","isNaN","setState","this","column","key","onBlur","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","newNum","name","newRow","rowsArray","keys","Object","sort","map","row","k","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","Math","abs","numberFactorials","nextPermutation","temp","generatePermutationMapping","original","mapping","alreadyCovered","includes","latex","leftBracketOnly","rightBracketOnly","boldRows","transpose","rowLength","colLength","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13"],"mappings":"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","file":"static/js/17.95225df4.chunk.js","sourcesContent":["import {formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix3 as initialMatrix, generateGridCallback, createNewColumn, createNewRow, gridTo2DArray, cloneArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { zeros, identity, column as getColumn, norm, add, subtract, multiply, squeeze } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearQR({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    let solve = true;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    let modifiedMatrix = cloneArray(originalMatrix);\r\n    const matrixSize = gridState.rows.length;\r\n    let iterations = matrixSize - 1;\r\n    let results = [];\r\n\r\n    console.log(\"originalMatrix\", originalMatrix);\r\n    \r\n    for (let iter  = 0; iter < iterations; iter++) {\r\n        let vectorColumn = squeeze(getColumn(modifiedMatrix, iter));\r\n        for (let i = 0; i < iter; i++) {\r\n            vectorColumn[i] = 0;\r\n        }\r\n        console.log(\"vectorColumn\", vectorColumn);\r\n        let columnNorm = norm(vectorColumn, 2);\r\n        console.log(\"columnNorm\", columnNorm);\r\n        let vectorBasis = zeros(matrixSize).toArray();\r\n        vectorBasis[iter] = vectorColumn[iter] < 0 ? -1 : 1;\r\n        console.log(\"vectorBasis\", vectorBasis);\r\n\r\n\r\n        let vectorCombined = add(vectorColumn, multiply(columnNorm, vectorBasis));\r\n        console.log(\"vectorCombined\", vectorCombined);\r\n\r\n        let transposeMultiply = multiply(vectorCombined, vectorCombined);\r\n        console.log(\"transposeMultiply\", transposeMultiply);\r\n        let multiplyTranspose = [];\r\n        for (let i = 0; i < matrixSize; i++) {\r\n            multiplyTranspose.push(Array(matrixSize).fill(0));\r\n            for (let j = 0; j < matrixSize; j++) {\r\n                multiplyTranspose[i][j] = vectorCombined[i] * vectorCombined[j];\r\n            }\r\n        }\r\n        console.log(\"multiplyTranspose\", multiplyTranspose);\r\n\r\n\r\n        let householder = subtract(identity(matrixSize), multiply(2 / transposeMultiply, multiplyTranspose)).toArray();\r\n        console.log(\"householder\", householder);\r\n\r\n        let qMatrix = iter === 0 ? householder : multiply(results[iter - 1].qMatrix, householder);\r\n        console.log(\"qMatrix\", qMatrix);\r\n\r\n        modifiedMatrix = multiply(householder, modifiedMatrix);\r\n        console.log(\"resultMatrix\", modifiedMatrix);\r\n\r\n        results.push({\r\n            vectorColumn,\r\n            columnNorm,\r\n            vectorBasis,\r\n            vectorCombined,\r\n            transposeMultiply,\r\n            multiplyTranspose,\r\n            householder,\r\n            qMatrix,\r\n            resultMatrix: cloneArray(modifiedMatrix),\r\n        });\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, matrixSize, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        \r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let latexContent;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let results = params.results;\r\n        let currentResult = results[currentIteration - 1];\r\n        let initialResultMatrix = currentIteration === 1 ? params.originalMatrix : results[currentIteration - 2].resultMatrix;\r\n        let initialQMatrix = currentIteration === 1 ? null : results[currentIteration - 2].qMatrix;\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ R^{(${currentIteration - 1})} ${currentIteration === 1 ? String.raw`= \\text{Original Matrix}` : \"\"} = ${matrixToLatex(initialResultMatrix, {boldColumns: [currentIteration]})}\r\n        \\\\\r\n        \\\\ \\text{Column, }c = ${matrixToLatex(currentResult.vectorColumn, {single: true})}\r\n        \\text{${currentIteration > 1 ? \"\\\\ Note: The first \" + (currentIteration - 1) + \" elements of c must be zero.\": \"\"}}\r\n        \\\\\r\n        \\\\ \\text{Norm, }\\lVert c \\rVert = ${formatMatrixLatex(currentResult.columnNorm)}\r\n        \\\\\r\n        \\\\ \\text{Basis, }e = ${matrixToLatex(currentResult.vectorBasis, {single: true})}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ v &=& c + \\lVert c \\rVert e\r\n        \\\\\r\n        \\\\   &=& ${matrixToLatex(currentResult.vectorColumn, {single: true})} +  ${formatMatrixLatex(currentResult.columnNorm)} ${matrixToLatex(currentResult.vectorBasis, {single: true})}\r\n        \\\\\r\n        \\\\   &=& ${matrixToLatex(currentResult.vectorCombined, {single: true})}\r\n        \\\\ \\end{array}\r\n        \\\\ \\begin{array}{lcl}\r\n        \\\\ v^{T}v &=& ${matrixToLatex([currentResult.vectorCombined])} ${matrixToLatex(currentResult.vectorCombined, {single: true})}\r\n        \\\\\r\n        \\\\        &=& ${formatMatrixLatex(currentResult.transposeMultiply)}\r\n        \\\\ \\end{array}\r\n        \\\\ \\begin{array}{lcl}\r\n        \\\\ vv^{T} &=& ${matrixToLatex(currentResult.vectorCombined, {single: true})} ${matrixToLatex([currentResult.vectorCombined])}\r\n        \\\\\r\n        \\\\        &=& ${matrixToLatex(currentResult.multiplyTranspose)}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ \\text{Householder, } H^{(${currentIteration})} &=& I - \\frac{2}{v^{T}v} vv^{T}\r\n        \\\\\r\n        \\\\                           &=& ${matrixToLatex(identity(currentResult.vectorColumn.length).toArray())} - \\frac{2}{${formatMatrixLatex(currentResult.transposeMultiply)}} ${matrixToLatex(currentResult.multiplyTranspose)}\r\n        \\\\\r\n        \\\\                           &=& ${matrixToLatex(currentResult.householder)}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ Q^{(${currentIteration})} &=& ${currentIteration > 1 ? \"Q^{(\" + (currentIteration - 1) + \")}\" : \"\" } H^{(${currentIteration})}\r\n        \\\\\r\n        \\\\                           &=& ${currentIteration > 1 ? matrixToLatex(initialQMatrix) : \"\"} ${matrixToLatex(currentResult.householder)}\r\n        \\\\\r\n        \\\\                           ${currentIteration > 1 ? \"&=&\" + matrixToLatex(currentResult.qMatrix) : \"\"}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ R^{(${currentIteration})} &=& H^{(${currentIteration})} R^{(${currentIteration - 1})}\r\n        \\\\\r\n        \\\\                           &=& ${matrixToLatex(currentResult.householder)} ${matrixToLatex(initialResultMatrix)}\r\n        \\\\\r\n        \\\\                           &=& ${matrixToLatex(currentResult.resultMatrix)}\r\n        \\\\ \\end{array}\r\n        `;\r\n        if (currentIteration === params.iterations) {\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\\\ \\text{To verify the answer,}\r\n            \\\\ \\begin{array}{lcl}\r\n            \\\\ Q^{(${currentIteration})} R^{(${currentIteration})} &=& ${matrixToLatex(currentResult.qMatrix)} ${matrixToLatex(currentResult.resultMatrix)}\r\n            \\\\\r\n            \\\\                           &=& ${matrixToLatex(multiply(currentResult.qMatrix, currentResult.resultMatrix))}\r\n            \\\\\r\n            \\\\                           &=&  \\text{Original Matrix}\r\n            \\\\ \\end{array}\r\n            \\\\\r\n            \\\\\r\n            `\r\n        }\r\n        \r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid xs item className=\"iteration-slider\">\r\n                    <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" width=\"70vw\">\r\n                            <Slider\r\n                                orientation=\"horizontal\"\r\n                                onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations<=0 ? 1 :params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                        </Box>\r\n                    </Slide>\r\n                </Grid>\r\n                <Grid xs item className=\"step-math\">\r\n                    <Slide direction=\"right\" triggerOnce>\r\n                        <Card className={styleClasses.card}>\r\n                            <CardContent className={styleClasses.cardContent}>\r\n                                <Typography variant=\"h6\">\r\n                                    Iteration {currentIteration}:\r\n                                </Typography>\r\n                                <TeX math={latexContent} block />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Slide>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearQR;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns) => {\r\n    const newNum = numberOfColumns + 1;\r\n    return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 2, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}"],"sourceRoot":""}