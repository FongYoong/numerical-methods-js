{"version":3,"sources":["components/methods/linear/LU.js","components/methods/linear/matrix_utils.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","Steps","latexContent","smallScreen","params","styleClasses","useState","currentIteration","setCurrentIteration","iterations","results","previousMatrix","originalMatrix","finalMatrix","currentResult","String","raw","interchange","row","pivot","formatLatex","factor","boldRows","row2","finalLatex","matrixToLatex","initialLatex","operationLatex","formatMatrixLatex","lowerMatrix","lowerFormulaLatex","i","matrixSize","j","lowerLatex","className","direction","alignItems","justify","xs","item","triggerOnce","id","orientation","onChangeCommitted","event","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","variant","math","block","LinearLU","methodName","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","sizeCallback","add","columns","slice","rows","push","createNewColumn","length","createNewRow","pop","gridTo2DArray","modifiedMatrix","cloneArray","identity","toArray","pivotLength","validPivot","tempMatrixRow","divisionByZero","isNaN","col","state","stateSetter","runTour","setRunTour","duration","cascade","onClick","rowGetter","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","Math","random","in","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","action","MatrixElementEditor","props","ref","React","createRef","onInputChange","current","parseFloat","setState","this","column","key","onBlur","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","newNum","name","newRow","rowsArray","keys","Object","sort","map","k","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","abs","numberFactorials","nextPermutation","temp","generatePermutationMapping","original","Array","mapping","alreadyCovered","includes","latex","single","leftBracketOnly","rightBracketOnly","boldColumns","transpose","rowLength","colLength","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4"],"mappings":"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","file":"static/js/13.6a3bab5c.chunk.js","sourcesContent":["import {formatLatex, formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix4 as initialMatrix, createNewColumn, createNewRow, gridTo2DArray, cloneArray, matrixToLatex} from \"./matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { identity } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearLU({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    function generateGridCallback (state, stateSetter) {\r\n        return ({ fromRow, toRow, updated }) => {\r\n            const rows = state.rows.slice();\r\n            for (let i = fromRow; i <= toRow; i++) {\r\n                rows[i] = { ...rows[i], ...updated };\r\n            }\r\n            stateSetter({\r\n                ...state, rows\r\n            });\r\n        };\r\n    }\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    let solve = true;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    let modifiedMatrix = cloneArray(originalMatrix);\r\n    const matrixSize = gridState.rows.length;\r\n    let results = [];\r\n    let lowerMatrix = identity(matrixSize, matrixSize).toArray();\r\n    let pivotLength = matrixSize;\r\n    \r\n    for (let pivot  = 0; pivot < pivotLength - 1; pivot++) {\r\n        let validPivot = true;\r\n        if (modifiedMatrix[pivot][pivot] === 0 ) {\r\n            validPivot = false;\r\n            for (let row2 = pivot + 1; row2 < pivotLength; row2++) {\r\n                if (modifiedMatrix[row2][pivot] !== 0) {\r\n                    let tempMatrixRow = modifiedMatrix[pivot];\r\n                    modifiedMatrix[pivot] = modifiedMatrix[row2];\r\n                    modifiedMatrix[row2] = tempMatrixRow;\r\n                    results.push({\r\n                        finalMatrix: cloneArray(modifiedMatrix),\r\n                        interchange: true,\r\n                        pivot: pivot + 1,\r\n                        row: pivot + 1,\r\n                        row2: row2 + 1,\r\n                    });\r\n                    validPivot = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (validPivot) {\r\n            for (let row  = pivot + 1; row < pivotLength; row++) {\r\n                let factor = modifiedMatrix[row][pivot] / modifiedMatrix[pivot][pivot];\r\n                lowerMatrix[row][pivot] = factor;\r\n                let divisionByZero = false;\r\n                if (factor === 0) {\r\n                    divisionByZero = true;\r\n                }\r\n                else if (isNaN(factor)) {\r\n                    continue;\r\n                }\r\n                if (!divisionByZero) {\r\n                    for (let col  = 0; col < matrixSize; col++) {\r\n                        modifiedMatrix[row][col] -= factor * modifiedMatrix[pivot][col];\r\n                    }\r\n                }\r\n                results.push({\r\n                    finalMatrix: cloneArray(modifiedMatrix),\r\n                    interchange: false,\r\n                    factor,\r\n                    pivot: pivot + 1,\r\n                    row: row + 1,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    let iterations = results.length;\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, matrixSize, iterations, results, lowerMatrix};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        \r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let latexContent;\r\n\r\n    if (currentIteration <= 0) {\r\n        setCurrentIteration(1);\r\n    }\r\n    else if (params.iterations > 0 && currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.iterations >= 2) {\r\n        let results = params.results;\r\n        let previousMatrix = currentIteration===1 ? params.originalMatrix : results[currentIteration - 2].finalMatrix;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        `;\r\n        if (!currentResult.interchange) {\r\n            latexContent += String.raw`\r\n            \\begin{array}{lcl}\r\n            \\\\ Factor, \\bf{f_{${currentResult.row}${currentResult.pivot}}} &=& \\frac{U_{${currentResult.row}${currentResult.pivot}}}{U_{${currentResult.pivot}${currentResult.pivot}}}\r\n            \\\\        &=& ${formatLatex(currentResult.factor)}\r\n            \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\\\\ \\begin{array}{lcl} `;\r\n        const boldRows = currentResult.interchange ? [currentResult.row, currentResult.row2] : [currentResult.row, currentResult.pivot];\r\n        const finalLatex= String.raw`\\overbrace{${matrixToLatex(currentResult.finalMatrix, {boldRows: boldRows})}}^{U}`;\r\n        if (!currentResult.interchange && currentResult.factor === 0) {\r\n            latexContent += String.raw`\r\n                \\\\ \\text{The factor is zero, so no elimination is done here.}\r\n                \\\\\r\n                \\\\ ${finalLatex}\r\n            `;\r\n        }\r\n        else {\r\n            const initialLatex = String.raw`\r\n            \\overbrace{${matrixToLatex(previousMatrix, {boldRows: boldRows})}}^{U}`;\r\n            const operationLatex = currentResult.interchange ?\r\n            String.raw`R_{${currentResult.row}} \\leftrightarrow R_{${currentResult.row2}}`\r\n            : String.raw`R_{${currentResult.row}} = R_{${currentResult.row}}-${formatMatrixLatex(currentResult.factor)}R_{${currentResult.pivot}}`;\r\n            if (smallScreen) {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                \\\\ \\begin{array}{lcl}\r\n                       & \\downarrow &\r\n                    \\\\ & ${operationLatex} &\r\n                    \\\\ & \\downarrow &\r\n                    \\end{array}\r\n                \\\\ ${finalLatex}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                & \\overrightarrow{${operationLatex}}\r\n                & ${finalLatex}\r\n                `;\r\n            }\r\n        }\r\n        if (currentIteration === params.iterations) {\r\n            let lowerMatrix = params.lowerMatrix;\r\n            let lowerFormulaLatex = String.raw`\\left[\\begin{matrix}`;\r\n            for (let i = 0; i < params.matrixSize; i++) {\r\n                for (let j = 0; j < params.matrixSize; j++) {\r\n                    if (j < i) {\r\n                        \r\n                        lowerFormulaLatex += String.raw` \\bf{f_{${i + 1}${j + 1}}} `;\r\n                    }\r\n                    else if (j === i) {\r\n                        lowerFormulaLatex += String.raw`1`;\r\n                    }\r\n                    else {\r\n                        lowerFormulaLatex += String.raw`0`;\r\n                    }\r\n                    if (j !== params.matrixSize - 1) {\r\n                        lowerFormulaLatex += String.raw`&`;\r\n                    }\r\n                }\r\n                lowerFormulaLatex += String.raw` \\cr`;\r\n            }\r\n            lowerFormulaLatex += String.raw`\\end{matrix}\\right]`;\r\n            let lowerLatex = String.raw`\\left[\\begin{matrix}`;\r\n            for (let i = 0; i < params.matrixSize; i++) {\r\n                for (let j = 0; j < params.matrixSize; j++) {\r\n                    if (j < i) {\r\n                        lowerLatex += String.raw`\\colorbox{aqua}{\\bf{${formatMatrixLatex(lowerMatrix[i][j])}}}`;\r\n                    }\r\n                    else if (j === i) {\r\n                        lowerLatex += String.raw`1`;\r\n                    }\r\n                    else {\r\n                        lowerLatex += String.raw`0`;\r\n                    }\r\n                    if (j !== params.matrixSize - 1) {\r\n                        lowerLatex += String.raw`&`;\r\n                    }\r\n                }\r\n                lowerLatex += String.raw`\\cr`;\r\n            }\r\n            lowerLatex += String.raw`\\end{matrix}\\right]`;\r\n            latexContent += String.raw`\r\n            \\\\ \r\n            \\\\ \\hline\r\n            \\\\ \\begin{array}{lcl}\r\n            \\\\ Upper, U &=& ${matrixToLatex(currentResult.finalMatrix)}\r\n            \\\\ \r\n            \\\\ Lower, L &=& ${lowerFormulaLatex}\r\n            \\\\\r\n            \\\\          &=& ${lowerLatex}\r\n                \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n    }\r\n    else {\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\text{Cannot do any elimination.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix)}}^{A}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid xs item className=\"iteration-slider\">\r\n                    <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" width=\"70vw\">\r\n                            <Slider\r\n                                orientation=\"horizontal\"\r\n                                onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations<=0 ? 1 :params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                        </Box>\r\n                    </Slide>\r\n                </Grid>\r\n                <Grid xs item className=\"step-math\">\r\n                    <Slide direction=\"right\" triggerOnce>\r\n                        <Card className={styleClasses.card}>\r\n                            <CardContent className={styleClasses.cardContent}>\r\n                                <Typography variant=\"h6\">\r\n                                    Iteration {currentIteration}:\r\n                                </Typography>\r\n                                <TeX math={latexContent} block />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Slide>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearLU;","import {formatMatrixLatex} from \"../../utils\";\r\nimport React from \"react\";\r\n\r\nexport class MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nexport default class WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns) => {\r\n    const newNum = numberOfColumns + 1;\r\n    return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 2, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}"],"sourceRoot":""}