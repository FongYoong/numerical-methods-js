{"version":3,"sources":["components/methods/integral/Trapezoidal.js","components/Graph.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","fab","position","bottom","right","addStyles","IntegralTrapezoidal","methodName","markdown","useEffect","document","functionValue","styleClasses","smallScreen","useMediaQuery","useTheme","breakpoints","down","useState","String","raw","functionLatex","setFunctionLatex","functionText","setFunctionText","functionError","functionErrorText","parse","traverse","node","path","parent","type","mathjsKeywords","includes","name","evaluate","x","e","lowerX","setLowerX","upperX","setUpperX","intervalError","lowerXErrorText","upperXErrorText","isNaN","subIntervals","setSubIntervals","subIntervalsError","subIntervalsErrorText","Number","isInteger","latexContent","graphCallback","hasError","solve","isValidMath","width","integralResult","results","i","f","push","formatLatex","calculator","currentResult","current","setExpression","id","Desmos","BLUE","latex","BLACK","GREEN","RED","runTour","setRunTour","className","duration","triggerOnce","cascade","variant","direction","alignItems","justify","xs","item","disabled","onChange","mathField","mathquillDidMount","in","severity","event","parseInt","value","error","label","defaultValue","toString","helperText","parseFloat","math","block","params","iterations","arrow","placement","aria-label","onClick","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","DialogTitle","withStyles","root","closeButton","top","grey","props","children","classes","onClose","other","disableTypography","DialogContent","currentIteration","setCurrentIteration","defaultIteration","desmosDiv","useRef","updateGraph","useCallback","updateSettings","xAxisLabel","yAxisLabel","xAxisArrowMode","POSITIVE","yAxisArrowMode","style","height","keypad","expressions","expressionsTopbar","description","component","orientation","aria-labelledby","step","marks","min","max","valueLabelDisplay","ref","Graph","openDialog","setOpenDialog","handleClose","endIcon","scroll","maxWidth","fullScreen","open","dividers"],"mappings":"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","file":"static/js/33.015175d7.chunk.js","sourcesContent":["import {isValidMath, mathjsKeywords, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Graph from \"../../Graph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".subIntervals-input\",\r\n        title: \"Order\",\r\n        content:\r\n            \"Specify the number of subintervals, N.\",\r\n    },\r\n    {\r\n        target: \".interval-input\",\r\n        title: \"Interval\",\r\n        content:\r\n            \"Select the lower and upper bounds of x\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction IntegralTrapezoidal({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`\\left(x-3\\right)^{3}+2\\left(x-3\\right)^{2}-1`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n        functionValue.traverse(function (node, path, parent) {\r\n            if (node.type === 'SymbolNode' && !mathjsKeywords.includes(node.name)) {\r\n                if (node.name !== 'x') {\r\n                    throw \"variableName\";\r\n                }\r\n            }\r\n        });\r\n        functionValue.evaluate({x : 0});\r\n    }\r\n    catch(e) {\r\n        functionError = true;\r\n        functionErrorText = e === \"variableName\" ? \"Only x variable is allowed.\" :  \"Invalid equation!\";\r\n    }\r\n\r\n    // Interval\r\n    const [lowerX, setLowerX] = useState(1);\r\n    const [upperX, setUpperX] = useState(4);\r\n    let intervalError = false;\r\n    let lowerXErrorText = \"\";\r\n    let upperXErrorText = \"\";\r\n    if (isNaN(lowerX)) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"x value cannot be empty!\";\r\n    }\r\n    if (isNaN(upperX)) {\r\n        intervalError = true;\r\n        upperXErrorText = \"x value cannot be empty!\";\r\n    }\r\n    if (lowerX >= upperX) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be lower than upper x!\";\r\n        upperXErrorText = \"Upper x must be higher than lower x!\";\r\n    }\r\n\r\n    // Subintervals\r\n    const [subIntervals, setSubIntervals] = useState(10);\r\n    let subIntervalsError = false;\r\n    let subIntervalsErrorText = \"\";\r\n    if (isNaN(subIntervals) || !Number.isInteger(subIntervals) || subIntervals <= 0) {\r\n        subIntervalsError = true;\r\n        subIntervalsErrorText = \"Subintervals must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || intervalError || subIntervalsError;\r\n\r\n    // Solve\r\n    let latexContent, graphCallback;\r\n    let solve = false;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        const width = (upperX - lowerX) / subIntervals;\r\n        let integralResult = 0;\r\n        let results = [];\r\n        for (let i = 0; i <= subIntervals; i++) {\r\n            const x = lowerX + i * width;\r\n            let f = functionValue.evaluate({x : x});\r\n            if (i === 0 || i === subIntervals){\r\n                integralResult += f;\r\n                results.push(f);\r\n            }\r\n            else {\r\n                integralResult += 2 * f;\r\n                results.push(2 * f);\r\n            }\r\n        }\r\n        integralResult *= width / 2;\r\n        \r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ h &=& \\frac{ x_{upper} - x_{lower} }{N}\r\n        \\\\   &=& ${formatLatex(width)}\r\n        \\end{array}\r\n        \\\\\r\n        \\\\ x_i = x_{lower} + i \\cdot h\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ \\int_{${lowerX}}^{${upperX}} f(x) dx &=& \\frac{h}{2} [f(x_0) + 2 \\sum_{i=1}^{${subIntervals - 1}} f(x_i) + f(x_{${subIntervals}})]\r\n        \\\\`;\r\n        latexContent += String.raw`\r\n        \\\\ &=& ${formatLatex(width / 2)} [`;\r\n        for (let i = 0; i <= subIntervals; i++) {\r\n            latexContent += String.raw`${i===0 || i===subIntervals? \"\" : \"2\"}f(${formatLatex(lowerX + i * width)}) ${i===subIntervals ? \"\" : \"+\"}`;\r\n        }\r\n        latexContent += String.raw`\r\n        ]\r\n        \\\\\r\n        \\\\ &=& ${formatLatex(width / 2)} [`;\r\n        for (let i = 0; i <= subIntervals; i++) {\r\n            latexContent += String.raw`${formatLatex(results[i])} ${i===subIntervals ? \"\" : \"+\"}`;\r\n        }\r\n        latexContent += String.raw`\r\n        ]\r\n        \\\\\r\n        \\\\ &=& ${formatLatex(integralResult)}\r\n        \\end{array}\\end{array}\r\n        `;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: \"f(x)=\"+functionLatex});\r\n            calculator.current.setExpression({ id: 'a', latex: \"a=\"+lowerX});\r\n            calculator.current.setExpression({ id: 'b', latex: \"b=\"+upperX});\r\n            calculator.current.setExpression({ id: 'N', latex: \"N=\"+subIntervals});\r\n            calculator.current.setExpression({ id: 'L', latex: String.raw`L=\\left[a,\\ a+\\frac{\\left(b-a\\right)}{N},\\ a+\\frac{2\\left(b-a\\right)}{N},...,a+\\frac{\\left(N-1\\right)\\left(b-a\\right)}{N}\\right]`});\r\n            calculator.current.setExpression({ id: 'R', latex: String.raw`R=\\left[a+\\frac{\\left(b-a\\right)}{N},a+\\frac{2\\left(b-a\\right)}{N},\\ ...,b\\right]`});\r\n            calculator.current.setExpression({ id: 'M', latex: String.raw`M=\\frac{\\left(f\\left(R\\right)-f\\left(L\\right)\\right)}{R-L}`});\r\n            calculator.current.setExpression({ id: 'm', latex: String.raw`m=\\left[a+\\frac{.5\\left(b-a\\right)}{N},a+\\frac{3}{2}\\cdot\\frac{\\left(b-a\\right)}{N},...,b-\\frac{\\left(\\frac{1}{2}\\right)\\left(b-a\\right)}{N}\\right]`});\r\n            calculator.current.setExpression({ id: 'x', color: Desmos.Colors.BLACK, latex: String.raw`x=L\\left\\{\\min\\left(0,f\\left(L\\right)\\right)<y<\\max\\left(0,f\\left(L\\right)\\right)\\right\\}`});\r\n            calculator.current.setExpression({ id: 'positive', color: Desmos.Colors.GREEN, latex: String.raw`0\\le y\\le M\\left(x-L\\right)+f\\left(L\\right)\\left\\{L\\le x\\le R\\right\\}`});\r\n            calculator.current.setExpression({ id: 'negative', color: Desmos.Colors.RED, latex: String.raw`0\\ge y\\ge M\\left(x-L\\right)+f\\left(L\\right)\\left\\{L\\le x\\le R\\right\\}`});\r\n            /*\r\n            for (let i = 0; i <= subIntervals; i++) {\r\n                const x = lowerX + i * width;\r\n                let v = results[i];\r\n                if (i > 0 && i < subIntervals) {\r\n                    v /= 2;\r\n                }\r\n                calculator.current.setExpression({ id: i, color: Desmos.Colors.BLACK, pointStyle: Desmos.Styles.POINT, label: i + 1, showLabel: subIntervals < 20, latex: String.raw`(${x}, ${v})`});\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true);\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        \r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"subIntervals-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Subintervals, N:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setSubIntervals(parseInt(event.target.value))}\r\n                                        error={subIntervalsError}\r\n                                        label={subIntervalsError?\"Error\":\"\"}\r\n                                        defaultValue={subIntervals.toString()}\r\n                                        helperText={subIntervalsErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid className=\"interval-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Lower x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setLowerX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={lowerX.toString()}\r\n                                        helperText={lowerXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Upper x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUpperX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={upperX.toString()}\r\n                                        helperText={upperXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve &&\r\n                        <Container className={styleClasses.container}>\r\n                            <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid xs item className=\"step-math\">\r\n                                    <Slide direction=\"left\" triggerOnce>\r\n                                        <Card className={styleClasses.card}>\r\n                                            <CardContent className={styleClasses.cardContent}>\r\n                                                <TeX math={latexContent} block />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Slide>\r\n                                </Grid>\r\n                                <Grid xs item className=\"graph-button\">\r\n                                    <Slide direction=\"right\" triggerOnce>\r\n                                        <Graph params={{iterations: 0, functionLatex, graphCallback, smallScreen}} />\r\n                                    </Slide>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                        }\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntegralTrapezoidal;","import {React, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\nimport * as Desmos from 'desmos';\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styleClasses = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styleClasses)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent =  withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))((props) => {\r\n    const params = props.params;\r\n    const [currentIteration, setCurrentIteration] = useState(params.currentIteration);\r\n    const defaultIteration = params.currentIteration;\r\n    const currentResult = params.iterations > 0 ? params.results[currentIteration - 1] : null;\r\n    const desmosDiv = useRef(null);\r\n    const calculator = useRef(null);\r\n\r\n    const updateGraph = useCallback(() => {\r\n        if (calculator.current){\r\n            calculator.current.updateSettings({xAxisLabel: 'x', yAxisLabel: 'y',  xAxisArrowMode: Desmos.AxisArrowModes.POSITIVE, yAxisArrowMode: Desmos.AxisArrowModes.POSITIVE });\r\n            params.graphCallback(calculator, currentResult, currentIteration);\r\n        }\r\n    }, [calculator, currentResult, params, currentIteration]);\r\n    updateGraph();\r\n\r\n    useEffect(() => {\r\n        if (desmosDiv.current){\r\n            const smallScreen = props.smallScreen;\r\n            desmosDiv.current.style.width = smallScreen?'90vw':'60vw';\r\n            desmosDiv.current.style.height = smallScreen?'90vh':'60vh';\r\n            const desmosOptions = {\r\n                keypad: false,\r\n                expressions: false,\r\n                expressionsTopbar: false,\r\n            };\r\n            calculator.current = Desmos.GraphingCalculator(desmosDiv.current, desmosOptions);\r\n            updateGraph();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        \r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            {params.description && <Box component=\"div\" overflow=\"visible\">\r\n                    <Typography variant=\"h6\">\r\n                        {params.description}\r\n                    </Typography>\r\n                </Box>\r\n            }\r\n            {params.functionLatex && <Box component=\"div\" overflow=\"visible\">\r\n                    <TeX math={`${params.functionLatex}`} block />\r\n                </Box>\r\n            }\r\n            <Typography variant=\"h6\">\r\n                {params.iterations > 0 ? `Iteration ${currentIteration}:` : <br />}\r\n            </Typography>\r\n            {params.iterations > 0 &&\r\n                <Box width=\"70%\">\r\n                    <Slider\r\n                        orientation=\"horizontal\"\r\n                        onChange={(event, value) => setCurrentIteration(value)}\r\n                        defaultValue={defaultIteration}\r\n                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                        step={1}\r\n                        marks\r\n                        min={1}\r\n                        max={params.iterations}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </Box>\r\n            }\r\n            <Grid item>\r\n                <div ref={desmosDiv}>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\nfunction Graph({params, smallScreen}) {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n      const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<TimelineIcon/>} onClick={handleClickOpen}>\r\n                View Graph\r\n            </Button>\r\n            \r\n            <Dialog scroll='paper' maxWidth={false} fullScreen={smallScreen} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                <Fade>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\r\n                    <DialogContent dividers smallScreen={smallScreen} params={params} />\r\n                </Fade>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Graph;"],"sourceRoot":""}