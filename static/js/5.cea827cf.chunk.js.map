{"version":3,"sources":["components/methods/nonlinear/DesmosGraph.js","components/methods/nonlinear/Bisection.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","aria-label","onClick","DialogContent","params","useState","currentIteration","setCurrentIteration","defaultIteration","currentResult","results","desmosDiv","useRef","calculator","updateGraph","useCallback","current","graphCallback","useEffect","smallScreen","style","width","height","Desmos","keypad","expressions","expressionsTopbar","container","direction","alignItems","justify","component","overflow","tex","mathjsToLatex","functionValue","variant","orientation","onChange","event","value","defaultValue","aria-labelledby","step","marks","min","max","iterations","valueLabelDisplay","item","ref","NewtonDesmos","openDialog","setOpenDialog","handleClose","endIcon","scroll","maxWidth","fullScreen","open","id","dividers","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","paper","textAlign","text","primary","card","cardContent","fab","bottom","Steps","latexContent","styleClasses","hasError","exceedIterError","errorText","exceedIterErrorText","oldLowerXLatex","String","raw","oldUpperXLatex","newLowerXLatex","newUpperXLatex","newRootXLatex","formatLatex","oldLowerX","oldUpperX","rootX","rootFound","oldRootXLatex","errorX","errorThreshold","lowerFuncResult","rootFuncResult","product","newLowerX","newUpperX","setExpression","BLUE","latex","GREEN","pointStyle","POINT","label","showLabel","upperFuncResult","RED","useMediaQuery","useTheme","breakpoints","down","in","severity","xs","triggerOnce","onChangeCommitted","duration","addStyles","NonlinearBisection","methodName","document","functionLatex","setFunctionLatex","functionText","setFunctionText","functionError","functionErrorText","parse","lowerX","setLowerX","upperX","setUpperX","intervalError","lowerXErrorText","upperXErrorText","setErrorThreshold","thresholdError","thresholdErrorText","solve","isValidMath","i","Math","abs","evaluate","x","push","runTour","setRunTour","openErrorSnackbar","setOpenErrorSnackbar","errorSnackbarClose","reason","cascade","disabled","mathField","mathquillDidMount","type","parseFloat","error","toString","helperText","arrow","placement","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","autoHideDuration"],"mappings":"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","file":"static/js/5.cea827cf.chunk.js","sourcesContent":["import {formatLatex, mathjsToLatex} from \"../../utils\";\r\nimport {React, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { MathComponent } from 'mathjax-react';\r\nimport * as Desmos from 'desmos';\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styleClasses = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styleClasses)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent =  withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))((props) => {\r\n    const params = props.params;\r\n    const [currentIteration, setCurrentIteration] = useState(params.currentIteration);\r\n    const defaultIteration = params.currentIteration;\r\n    const currentResult = params.results[currentIteration - 1];\r\n    const desmosDiv = useRef(null);\r\n    const calculator = useRef(null);\r\n\r\n    const updateGraph = useCallback(() => {\r\n        if (calculator.current){\r\n            params.graphCallback(calculator, currentResult);\r\n        }\r\n    }, [calculator, currentResult, params]);\r\n    updateGraph();\r\n\r\n    useEffect(() => {\r\n        if (desmosDiv.current){\r\n            const smallScreen = props.smallScreen;\r\n            desmosDiv.current.style.width = smallScreen?'90vw':'60vw';\r\n            desmosDiv.current.style.height = smallScreen?'90vh':'60vh';\r\n            const desmosOptions = {\r\n                keypad: false,\r\n                expressions: false,\r\n                expressionsTopbar: false,\r\n            };\r\n            calculator.current = Desmos.GraphingCalculator(desmosDiv.current, desmosOptions);\r\n            updateGraph();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        \r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <Box component=\"div\" overflow=\"visible\">\r\n                <MathComponent tex={`${mathjsToLatex(params.functionValue)}`}/>\r\n            </Box>\r\n            <Typography variant=\"h6\">\r\n                Iteration {currentIteration}:\r\n            </Typography>\r\n            <Box width=\"70%\">\r\n                <Slider\r\n                    orientation=\"horizontal\"\r\n                    onChange={(event, value) => setCurrentIteration(value)}\r\n                    defaultValue={defaultIteration}\r\n                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                    step={1}\r\n                    marks\r\n                    min={1}\r\n                    max={params.iterations}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Box>\r\n            <Grid item>\r\n                <div ref={desmosDiv}>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\nfunction NewtonDesmos({params, smallScreen}) {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n      const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<TimelineIcon/>} onClick={handleClickOpen}>\r\n                View Graph\r\n            </Button>\r\n            \r\n            <Dialog scroll='paper' maxWidth={false} fullScreen={smallScreen} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                <Fade>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\r\n                    <DialogContent dividers smallScreen={smallScreen} params={params} />\r\n                </Fade>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewtonDesmos;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".interval-input\",\r\n        title: \"Interval\",\r\n        content:\r\n            \"Select the lower and upper bounds of x\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearBisection({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Function\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Interval\r\n    const [lowerX, setLowerX] = useState(0);\r\n    const [upperX, setUpperX] = useState(3);\r\n    let intervalError = false;\r\n    let lowerXErrorText = \"\";\r\n    let upperXErrorText = \"\";\r\n    if (lowerX >= upperX) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be lower than upper x!\";\r\n        upperXErrorText = \"Upper x must be higher than lower x!\";\r\n    }\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0005);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = functionError || intervalError || thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    let results = [];\r\n    let iterations = 1;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        let i = 0;\r\n        while (true) {\r\n            let oldLowerX = (i === 0) ? lowerX: results[i - 1].newLowerX;\r\n            let oldUpperX = (i === 0) ? upperX: results[i - 1].newUpperX;\r\n            let newLowerX = oldLowerX;\r\n            let newUpperX = oldUpperX;\r\n            let rootX = (newLowerX + newUpperX) / 2;\r\n            let lowerFuncResult, upperFuncResult, rootFuncResult, errorX;\r\n            let rootFound = false;\r\n            if (i !== 0) {\r\n                // Check if root error is lower than threshold\r\n                errorX = Math.abs(rootX - results[i - 1].rootX);\r\n                if (errorX < errorThreshold){\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            if (!rootFound){\r\n                // Update lower and upper x values\r\n                try {\r\n                    lowerFuncResult = functionValue.evaluate({x : oldLowerX});\r\n                    upperFuncResult = functionValue.evaluate({x : oldUpperX}); // upperFuncResult is for visualisation purposes, no relevance in the calculations\r\n                    rootFuncResult = functionValue.evaluate({x : rootX});\r\n                }\r\n                catch {\r\n                    hasError = true;\r\n                    functionError = true;\r\n                    functionErrorText = \"Only variable x is allowed!\";\r\n                    solve = false;\r\n                    break;\r\n                }\r\n                let product = lowerFuncResult * rootFuncResult;\r\n                if (product < 0) {\r\n                    newUpperX = rootX;\r\n                }\r\n                else if (product > 0) {\r\n                    newLowerX = rootX;\r\n                }\r\n                else {\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            \r\n            results.push({\r\n                oldLowerX,\r\n                newLowerX,\r\n                oldUpperX,\r\n                newUpperX,\r\n                rootX,\r\n                lowerFuncResult,\r\n                upperFuncResult,\r\n                rootFuncResult,\r\n                errorX,\r\n            });\r\n            i++;\r\n            if (rootFound) {\r\n                break;\r\n            }\r\n            if (i > 10000) {\r\n                exceedIterError = true;\r\n                exceedIterErrorText = \"Exceeded 10000 iterations!\";\r\n                break;\r\n            }\r\n        }\r\n        iterations = i;\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"lowerX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Lower x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setLowerX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={lowerX.toString()}\r\n                                        helperText={lowerXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"upperX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Upper x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUpperX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={upperX.toString()}\r\n                                        helperText={upperXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"errorThreshold-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Error threshold:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                        error={thresholdError}\r\n                                        label={thresholdError?\"Error\":\"\"}\r\n                                        defaultValue={errorThreshold.toString()}\r\n                                        helperText={thresholdErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let oldLowerXLatex = String.raw`x_{lower_{${currentIteration - 1}}}`;\r\n        let oldUpperXLatex = String.raw`x_{upper_{${currentIteration - 1}}}`;\r\n        let newLowerXLatex = String.raw`x_{lower_{${currentIteration}}}`;\r\n        let newUpperXLatex = String.raw`x_{upper_{${currentIteration}}}`;\r\n        let newRootXLatex = String.raw`x_{root_{${currentIteration - 1}}}`;\r\n        latexContent=String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ ${oldLowerXLatex} &=& ${formatLatex(currentResult.oldLowerX)}\r\n        \\\\ ${oldUpperXLatex} &=& ${formatLatex(currentResult.oldUpperX)}\r\n        \\\\ ${newRootXLatex} &=& \\frac{${oldLowerXLatex} + ${oldUpperXLatex}}{2}\r\n        \\\\                       &=& ${formatLatex(currentResult.rootX)}\r\n        \\\\\r\n        `;\r\n        let rootFound = false;\r\n        if (currentIteration > 1) {\r\n            let oldRootXLatex = String.raw`x_{root_{${currentIteration - 2}}}`;\r\n            latexContent += String.raw`\r\n            \\\\ ${oldRootXLatex} &=& ${formatLatex(results[currentIteration - 2].rootX)}\r\n            \\\\ Error &=& |${newRootXLatex} - ${oldRootXLatex}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n            \\\\\r\n            `;\r\n            if (currentResult.errorX < params.errorThreshold) {\r\n                rootFound = true;\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\\r\n                \\\\ \\text{Root found because:}\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ Error &<& Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorX)} &<& ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        if (!rootFound) {\r\n            latexContent += String.raw`\r\n            \\\\ f(${oldLowerXLatex}) &=& ${formatLatex(currentResult.lowerFuncResult)}\r\n            \\\\ f(${newRootXLatex}) &=& ${formatLatex(currentResult.rootFuncResult)}\r\n            \\\\\r\n            \\\\\r\n            `;\r\n            let product = currentResult.lowerFuncResult * currentResult.rootFuncResult;\r\n            if (product < 0) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) < 0,\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ ${newLowerXLatex} &=& ${oldLowerXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n                \\\\ ${newUpperXLatex} &=& ${newRootXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n                `;\r\n            }\r\n            else if (product > 0) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) > 0,\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ ${newLowerXLatex} &=& ${newRootXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n                \\\\ ${newUpperXLatex} &=& ${oldUpperXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Root found because }\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ f(${oldLowerXLatex})f(${newRootXLatex}) == 0.\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'lowerX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Lower\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldLowerX)}, ${formatLatex(currentResult.lowerFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'upperX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Upper\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldUpperX)}, ${formatLatex(currentResult.upperFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.rootX)}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                \r\n                    <Grid container xs item direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                        <Grid xs item className=\"iteration-slider\">\r\n                            <Slide direction=\"left\" triggerOnce>\r\n                                <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                    <Slider\r\n                                        orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                        onChangeCommitted={(event, value) => setCurrentIteration(value)}\r\n                                        defaultValue={1}\r\n                                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                                        step={1}\r\n                                        marks\r\n                                        min={1}\r\n                                        max={params.iterations}\r\n                                        valueLabelDisplay=\"on\"\r\n                                    />\r\n                                    \r\n                                </Box>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid xs item className=\"step-math\">\r\n                                <Zoom duration={500} triggerOnce>\r\n                                    <Card className={styleClasses.card}>\r\n                                        <CardContent className={styleClasses.cardContent}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Iteration {currentIteration}:\r\n                                            </Typography>\r\n                                            <MathComponent tex={latexContent}/>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Zoom>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs item className=\"graph-button\">\r\n                            <Slide direction=\"right\" triggerOnce>\r\n                                <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                            </Slide>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearBisection;"],"sourceRoot":""}