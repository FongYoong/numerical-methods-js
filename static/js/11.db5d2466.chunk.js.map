{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","components/methods/linear/JacobiSeidel.js","components/methods/linear/matrix_utils.js"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onChange","readOnly","required","tabIndex","type","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","role","undefined","input","newChecked","target","opacity","width","height","top","left","zIndex","createSvgIcon","d","theme","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","nameProp","onChangeProp","_props$size","size","radioGroup","createChainedFunction","palette","text","secondary","colorPrimary","primary","main","fade","action","hoverOpacity","colorSecondary","FormGroup","_props$row","row","flexDirection","flexWrap","RadioGroup","actions","children","valueProp","rootRef","defaultValue","setValue","focus","current","querySelector","handleRef","useId","Provider","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","alignItems","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","TOUR_STEPS","title","content","disableBeacon","useStyles","makeStyles","paper","spacing","textAlign","container","card","cardContent","overflow","matrixCard","divider","marginTop","marginBottom","fab","bottom","right","Steps","latexContent","smallScreen","params","styleClasses","useState","currentIteration","setCurrentIteration","hasError","exceedIterError","errorText","exceedIterErrorText","iterations","triedPermutating","String","raw","matrixToLatex","originalMatrix","leftBracketOnly","originalInput","single","originalOutput","results","currentResult","permutated","permutationMapping","generatePermutationMapping","rowIndexes","boldRows","Object","keys","map","v","parseInt","push","values","previousLatex","rightBracketOnly","operationLatex","entries","newLatex","newMatrix","newOutput","index","matrix","output","solverExpressionLatex","solverType","oldInput","i","matrixSize","formatMatrixLatex","j","newInput","restoredOutput","cloneArray","ind","formatLatex","errorInput","converged","errorThreshold","Container","Collapse","in","Alert","severity","Grid","direction","justify","xs","item","triggerOnce","Card","CardContent","Box","Slider","orientation","onChangeCommitted","aria-labelledby","step","marks","min","max","valueLabelDisplay","math","LinearJacobiSeidel","methodName","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","rowHeight","widthPadding","heightPadding","initialMatrix","gridState","setGridState","initialInputColumn","inputColumnState","setInputColumnState","initialOutputColumn","outputColumnState","setOutputColumnState","generateGridCallback","stateSetter","fromRow","toRow","updated","rows","slice","sizeCallback","add","columns","inputColumns","inputRows","outputColumns","outputRows","createNewColumn","length","createNewRow","pop","setSolverType","setErrorThreshold","thresholdError","thresholdErrorText","solve","gridTo2DArray","modifiedInput","dominant","modifiedMatrix","modifiedOutput","console","log","isDiagonallyDominant","numPermutations","numberFactorials","Array","nextPermutation","permutatedMatrix","sum","k","Math","abs","runTour","setRunTour","Header","Paper","cascade","rel","href","aria-label","onClick","rowGetter","rowsCount","onGridRowsUpdated","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","minHeight","random","TextField","parseFloat","error","toString","helperText","Divider","Tooltip","arrow","placement","Fab","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","MatrixElementEditor","createRef","onInputChange","isNaN","setState","this","column","Component","style","justifyContent","columnSettings","editable","editor","formatter","numberOfColumns","newNum","newRow","rowsArray","sort","array","JSON","parse","stringify","diagonal","temp","original","mapping","alreadyCovered","includes","latex","boldColumns","transpose","rowLength","colLength","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4"],"mappings":"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","file":"static/js/11.db5d2466.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import {formatLatex, formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix3 as initialMatrix, initialInputColumn3 as initialInputColumn, initialOutputColumn3 as initialOutputColumn, createNewColumn, createNewRow, gridTo2DArray, cloneArray,\r\nisDiagonallyDominant, numberFactorials, nextPermutation, generatePermutationMapping, matrixToLatex} from \"./matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".input-col-input\",\r\n        title: \"Input\",\r\n        content:\r\n        \"Specify the initial input vector.\",\r\n    },\r\n    {\r\n        target: \".output-col-input\",\r\n        title: \"Output\",\r\n        content:\r\n        \"Specify the output vector.\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearJacobiSeidel({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const [inputColumnState, setInputColumnState] = useState(initialInputColumn);\r\n    const [outputColumnState, setOutputColumnState] = useState(initialOutputColumn);\r\n    function generateGridCallback (state, stateSetter) {\r\n        return ({ fromRow, toRow, updated }) => {\r\n            const rows = state.rows.slice();\r\n            for (let i = fromRow; i <= toRow; i++) {\r\n                rows[i] = { ...rows[i], ...updated };\r\n            }\r\n            stateSetter({\r\n                ...state, rows\r\n            });\r\n        };\r\n    }\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            const inputColumns = inputColumnState.columns.slice();\r\n            const inputRows = inputColumnState.rows.slice();\r\n            const outputColumns = outputColumnState.columns.slice();\r\n            const outputRows = outputColumnState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n                inputColumns.push(createNewColumn(inputColumns.length));\r\n                inputRows[0][`col_${inputColumns.length}`] = 0;\r\n                outputColumns.push(createNewColumn(outputColumns.length));\r\n                outputRows[0][`col_${outputColumns.length}`] = 0;\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < outputRows.length; i++) {\r\n                    delete outputRows[i][`col_${outputColumns.length}`];\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n                for (let i = 0; i < inputRows.length; i++) {\r\n                    delete inputRows[i][`col_${inputColumns.length}`];\r\n                }\r\n                inputColumns.pop();\r\n                outputColumns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n            setInputColumnState({columns: inputColumns, rows: inputRows});\r\n            setOutputColumnState({columns: outputColumns, rows: outputRows});\r\n        };\r\n    }\r\n\r\n    // Solver Type\r\n    const [solverType, setSolverType] = useState(\"jacobi\");\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0002);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    const originalOutput = gridTo2DArray(outputColumnState.rows)[0];\r\n    const originalInput = gridTo2DArray(inputColumnState.rows)[0];\r\n    let modifiedInput = cloneArray(originalInput);\r\n    const matrixSize = gridState.rows.length;\r\n    let results = [];\r\n    let iterations = 0;\r\n    let permutated = false;\r\n    let triedPermutating = false; // Failed to obtain a dominant matrix even after permutating.\r\n    if (!hasError) {\r\n        solve = true;\r\n        let dominant = false; // Strictly diagonally dominant\r\n        let modifiedMatrix = cloneArray(originalMatrix);\r\n        let modifiedOutput = cloneArray(originalOutput);\r\n        console.log(\"Original: \", modifiedMatrix);\r\n        if (!isDiagonallyDominant(modifiedMatrix)) {\r\n            console.log(\"Initially not dominant!\");\r\n            let numPermutations = numberFactorials[matrixSize];\r\n            let rowIndexes = [...Array(matrixSize).keys()];\r\n            for (let i = 0; i < numPermutations - 1; i++) {\r\n                nextPermutation(rowIndexes);\r\n                const permutatedMatrix = rowIndexes.map(ind => modifiedMatrix[ind]);\r\n                if (isDiagonallyDominant(permutatedMatrix)) {\r\n                    dominant = true;\r\n                    modifiedMatrix = permutatedMatrix;\r\n                    modifiedOutput = rowIndexes.map(ind => modifiedOutput[ind]);\r\n                    console.log(\"Found a dominant!\", modifiedMatrix, modifiedOutput, rowIndexes);\r\n                    break;\r\n                }\r\n            }\r\n            if (dominant) {\r\n                results.push({\r\n                    newMatrix: cloneArray(modifiedMatrix),\r\n                    newOutput: cloneArray(modifiedOutput),\r\n                    newInput: cloneArray(modifiedInput),\r\n                    permutated: true,\r\n                    rowIndexes: rowIndexes,\r\n                });\r\n                permutated = true;\r\n                iterations += 1;\r\n            }\r\n            else {\r\n                console.log(\"Tried permutating but failed!\");\r\n                triedPermutating = true;\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Initially dominant!\");\r\n            dominant = true;\r\n        }\r\n        \r\n        if (dominant) {\r\n            console.log(\"Solve Dominant!\");\r\n            let i = 0;\r\n            while (true) {\r\n                let oldInput = (i === 0) ? originalInput : results[i - 1 + iterations].newInput;\r\n                let newInput = [];\r\n                for (let j = 0; j < matrixSize; j++) {\r\n                    let sum = modifiedOutput[j];\r\n                    if (solverType === \"jacobi\") {\r\n                        for (let k = 0; k < matrixSize; k++) {\r\n                            if (k !== j) {\r\n                                sum -= modifiedMatrix[j][k] * oldInput[k];\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let k = 0; k < matrixSize; k++) {\r\n                            if (k < j) {\r\n                                sum -= modifiedMatrix[j][k] * newInput[k];\r\n                            }\r\n                            else if (k > j) {\r\n                                sum -= modifiedMatrix[j][k] * oldInput[k];\r\n                            }\r\n                        }\r\n                    }\r\n                    sum /= modifiedMatrix[j][j];\r\n                    newInput.push(sum);\r\n                }\r\n                let errorInput = newInput.map((v, index) => Math.abs(v - oldInput[index]));\r\n                let converged = true;\r\n                for (let j = 0; j < matrixSize; j++) {\r\n                    if (errorInput[j] >= errorThreshold) {\r\n                        converged = false;\r\n                        break;\r\n                    }\r\n                }\r\n                results.push({\r\n                    oldInput,\r\n                    newInput,\r\n                    errorInput,\r\n                    converged,\r\n                });\r\n                \r\n                i++;\r\n                if (converged) {\r\n                    console.log(\"Converged\");\r\n                    break;\r\n                }\r\n                if (i > 1000) {\r\n                    console.log(\"Exceeded 1000 iterations!\");\r\n                    exceedIterError = true;\r\n                    exceedIterErrorText = \"Exceeded 1000 iterations! Try increasing the error threshold.\";\r\n                    break;\r\n                }\r\n            }\r\n            iterations += i;\r\n        }\r\n    }\r\n    console.log(results);\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {solverType, originalMatrix, originalInput, originalOutput, matrixSize, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results, permutated, triedPermutating};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        This method is applied to matrices in the form of\r\n                        <TeX math={String.raw`\\ Ax=B`} />\r\n                        . <Link rel=\"noopener noreferrer\" href=\"https://people.richland.edu/james/lecture/m116/matrices/pivot.html\" target=\"_blank\" aria-label=\"Pivoting\">Pivoting</Link>\r\n                        &nbsp; bla bla bla. Warning: 7x7 matrix, factorial, 7! * 7*7\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"solver-type-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Solver Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <RadioGroup aria-label=\"solverType\" name=\"solverType\" value={solverType} onChange={(event)=>setSolverType(event.target.value)}>\r\n                                                <FormControlLabel value=\"jacobi\" control={<Radio />} label=\"Jacobi\" />\r\n                                                <FormControlLabel value=\"seidel\" control={<Radio />} label=\"Gauss-Seidel\" />\r\n                                            </RadioGroup>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid xs item className=\"input-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Initial Input, <TeX math={String.raw`X^{(0)}`} />:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={inputColumnState.columns}\r\n                                                        rowGetter={i => inputColumnState.rows[i]}\r\n                                                        rowsCount={inputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(inputColumnState, setInputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * inputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * inputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"output-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Output, B:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={outputColumnState.columns}\r\n                                                        rowGetter={i => outputColumnState.rows[i]}\r\n                                                        rowsCount={outputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(outputColumnState, setOutputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * outputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * outputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"errorThreshold-input\">\r\n                                            <Card className={styleClasses.card}>\r\n                                                <CardContent className={styleClasses.cardContent}>\r\n                                                    <Typography variant=\"h6\">\r\n                                                        Error threshold:\r\n                                                    </Typography>\r\n                                                    <TextField\r\n                                                        disabled={false}\r\n                                                        type=\"number\"\r\n                                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                                        error={thresholdError}\r\n                                                        label={thresholdError?\"Error\":\"\"}\r\n                                                        defaultValue={errorThreshold.toString()}\r\n                                                        helperText={thresholdErrorText}\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n    let latexContent;\r\n\r\n    if (currentIteration <= 0) {\r\n        setCurrentIteration(1);\r\n    }\r\n    else if (params.iterations > 0 && currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.triedPermutating) {\r\n        // Failed even after permutating the matrix\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\text{Cannot find a diagonally dominant matrix.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n           \\overbrace{${matrixToLatex(params.originalInput, {single: true})}}^{X_{0}}\r\n        &=&\\overbrace{${matrixToLatex(params.originalOutput, {single: true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    else if (params.iterations > 0) {\r\n        let results = params.results;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\begin{array}{lcl}\r\n        `;\r\n        if (currentResult.permutated) {\r\n            const permutationMapping = generatePermutationMapping(currentResult.rowIndexes);\r\n            const boldRows = Object.keys(permutationMapping).map((v) => parseInt(v) + 1);\r\n            boldRows.push(...Object.values(permutationMapping).map((v) => v + 1));\r\n            const previousLatex = String.raw`\r\n            \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(params.originalOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            let operationLatex =  String.raw`\\begin{array}{l}`;\r\n            for (const [key, value] of Object.entries(permutationMapping)) {\r\n                operationLatex += String.raw`R_{${parseInt(key) + 1}} \\leftrightarrow R_{${value + 1}}\\\\`;\r\n            }\r\n            operationLatex += String.raw`\\end{array}`;\r\n            const newLatex= String.raw`\r\n            \\overbrace{${matrixToLatex(currentResult.newMatrix, {leftBracketOnly:true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(currentResult.newOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            latexContent += String.raw`\r\n            \\\\ \\text{The matrix's rows are } \\textbf{permutated} ${smallScreen?\"\\\\\\\\\":\"\"} \\text{ to make it } \\textbf{strictly diagonally dominant.}\r\n            \\\\`\r\n            if (smallScreen) {\r\n                latexContent += String.raw`\r\n                \\\\ ${previousLatex}\r\n                \\\\ \\begin{array}{lcl}\r\n                    & \\downarrow &\r\n                    \\\\ & ${operationLatex} &\r\n                    \\\\ & \\downarrow &\r\n                    \\end{array}\r\n                \\\\ ${newLatex}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ \\begin{array}{lcl}\r\n                \\\\ ${previousLatex}\r\n                    & \\overrightarrow{${operationLatex}}\r\n                    & ${newLatex}\r\n                    \\end{array}\r\n                `;\r\n            }\r\n        }\r\n        else {\r\n            let index = params.permutated ? currentIteration - 1: currentIteration;\r\n            let matrix = params.permutated ? results[0].newMatrix : params.originalMatrix;\r\n            let output = params.permutated ? results[0].newOutput : params.originalOutput;\r\n            let solverExpressionLatex = params.solverType === \"jacobi\" ?\r\n            String.raw`\r\n            X^{(${index})}_i &=& \\frac{1}{A_{ii}}\r\n                \\left[ B_i - \\sum_{\\substack{j = 1, \\\\ j \\ne i}}^n \\left( A_{ij} \\cdot X^{(${index - 1})}_j \\right)\r\n                \\right]`\r\n            :\r\n            String.raw`\r\n            X^{(${index})}_i &=& \\frac{1}{A_{ii}}\r\n                \\left[ B_i - \\sum_{\\substack{j = 1}}^{i-1} \\left( A_{ij} \\cdot X^{(${index})}_j \\right)\r\n                           - \\sum_{\\substack{j = i+1}}^{n} \\left( A_{ij} \\cdot X^{(${index - 1})}_j \\right)\r\n\r\n                \\right]`;\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\overbrace{${matrixToLatex(matrix, {leftBracketOnly:true})}}^{A}\r\n            \\overbrace{${matrixToLatex(currentResult.oldInput, {single: true})}}^{X^{(${index - 1})}}\r\n            = \\overbrace{${matrixToLatex(output, {single:true})}}^{B}\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${solverExpressionLatex}\r\n            \\\\\r\n            \\\\ &=& \\left[\\begin{matrix}\r\n            `;\r\n            for (let i = 0; i < params.matrixSize; i++) {\r\n                latexContent += String.raw`\\frac{1}{${formatMatrixLatex(matrix[i][i])}} \\left[ ${formatMatrixLatex(output[i])}`;\r\n                if (params.solverType === \"jacobi\") {\r\n                    for (let j = 0; j < params.matrixSize; j++) {\r\n                        if (j !== i) {\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.oldInput[j])}) `;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let j = 0; j < params.matrixSize; j++) {\r\n                        if (j < i) {\r\n                            //sum -= modifiedMatrix[i][j] * newInput[j];\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.newInput[j])}) `;\r\n                        }\r\n                        else if (j > i) {\r\n                            //sum -= modifiedMatrix[i][j] * oldInput[j];\r\n                            latexContent += String.raw`- (${formatMatrixLatex(matrix[i][j])}) (${formatMatrixLatex(currentResult.oldInput[j])}) `;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                latexContent += String.raw`\\right] \\cr`;\r\n            }\r\n\r\n            latexContent += String.raw`\r\n            \\end{matrix}\\right]\r\n            \\\\\r\n            \\\\ X^{(${index})} &=& ${matrixToLatex(currentResult.newInput, {single: true})}\r\n            \\end{array}\r\n            `;\r\n            if (results[0].permutated) {\r\n                // Reorder the equations\r\n                let restoredOutput = cloneArray(currentResult.newInput);\r\n                restoredOutput = results[0].rowIndexes.map(ind => restoredOutput[ind]);\r\n                latexContent += String.raw`\r\n                \\\\\r\n                \\\\ \\hline\r\n                \\\\ \\text {Given that the matrix A has been permutated in iteration 1, }\r\n                \\\\ \\text {we must restore it to the original order:}\r\n                \\\\\r\n                \\\\ X^{(${index})}_{restored} = ${matrixToLatex(restoredOutput, {single: true})}\r\n                `;\r\n            }\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\begin{array}{lcl}\r\n            \\\\ Error &=& |X^{(${index})} - X^{(${index - 1})}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorInput)}|\r\n            \\end{array}\r\n            `;\r\n            if (currentResult.converged) {\r\n                latexContent += String.raw`\r\n                \\\\\r\n                \\\\ \\hline\r\n                \\\\ \\text{Converged because:}\r\n                \\\\\r\n                \\\\ Error < Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorInput)} < ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n        \r\n    }\r\n    else {\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{lcl}\r\n        \\\\ \\text{Cannot do anything.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n           \\overbrace{${matrixToLatex(params.originalInput, {single: true})}}^{X_{0}}\r\n        &=&\\overbrace{${matrixToLatex(params.originalOutput, {single: true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" width=\"70vw\">\r\n                                <Slider\r\n                                    orientation=\"horizontal\"\r\n                                    onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={currentIteration}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations<=0 ? 1 :params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iteration {currentIteration}:\r\n                                    </Typography>\r\n                                    <TeX math={latexContent} />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearJacobiSeidel;","import {formatMatrixLatex} from \"../../utils\";\r\nimport React from \"react\";\r\n\r\nexport class MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nexport default class WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns) => {\r\n    const newNum = numberOfColumns + 1;\r\n    return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 2, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}"],"sourceRoot":""}