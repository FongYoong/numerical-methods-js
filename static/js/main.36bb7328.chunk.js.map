{"version":3,"sources":["App.module.css","components/header/Header.module.css","logo.svg","components/utils.js","components/header/Header.js","components/menu/MethodType.js","components/menu/Category.js","components/methods/nonlinear/DesmosGraph.js","components/methods/nonlinear/Bisection.js","components/methods/nonlinear/FalsePosition.js","components/methods/nonlinear/Newton.js","components/methods/nonlinear/Secant.js","components/methods/nonlinear/FixedPoint.js","components/methods/linear/Gauss.js","components/methods/ode/Predictor.js","constants/categories.js","components/methods/linear/Pivot.js","components/methods/linear/Jordan.js","components/methods/linear/Jacobi.js","components/methods/linear/Seidel.js","components/methods/linear/LU.js","components/methods/linear/SVD.js","components/methods/linear/Inverse.js","components/methods/linear/PenroseInverse.js","components/methods/eigen/Power.js","components/methods/eigen/InversePower.js","components/methods/eigen/ShiftedPower.js","components/methods/eigen/QR.js","components/methods/optimisation/GoldenSearch.js","components/methods/optimisation/Parabolic.js","components/methods/optimisation/Newton.js","components/methods/optimisation/Gradient.js","components/methods/optimisation/LinearProg.js","components/methods/curve/Linear.js","components/methods/curve/Polynomial.js","components/methods/curve/Spline.js","components/methods/fourier/FFT.js","components/methods/differential/Finite.js","components/methods/differential/Richardson.js","components/methods/integral/Midpoint.js","components/methods/integral/Trapezoidal.js","components/methods/integral/Simpson.js","components/methods/integral/Quadrature.js","components/methods/ode/Euler.js","components/methods/ode/Midpoint.js","components/methods/ode/Runge.js","components/methods/ode/Multistep.js","components/menu/Menu.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","formatLatex","value","format","notation","precision","mathjsToLatex","toTex","parenthesis","generatePath","categoryPath","methodPath","isValidMath","hasOwnProperty","useStyles","makeStyles","theme","root","flexGrow","homeButton","marginRight","spacing","githubButton","title","Header","methodName","styleClasses","history","useHistory","className","AppBar","position","Toolbar","IconButton","onClick","push","edge","color","aria-label","rel","href","target","Typography","variant","listItem","paddingLeft","transition","MethodType","method","onMethodClick","ListItem","button","ListItemIcon","completed","style","green","red","ListItemText","primary","Box","fontWeight","name","primaryTypographyProps","Category","category","React","useState","open","setOpen","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","methods","map","i","path","DialogTitle","withStyles","margin","padding","closeButton","right","top","palette","grey","props","children","classes","onClose","other","disableTypography","DialogContent","params","currentIteration","setCurrentIteration","defaultIteration","currentResult","results","desmosDiv","useRef","calculator","updateGraph","useCallback","current","graphCallback","useEffect","smallScreen","width","height","Desmos","keypad","expressions","expressionsTopbar","Grid","container","direction","alignItems","justify","overflow","tex","functionValue","Slider","orientation","onChange","event","defaultValue","aria-labelledby","step","marks","min","max","iterations","valueLabelDisplay","item","ref","NewtonDesmos","openDialog","setOpenDialog","handleClose","Button","endIcon","Dialog","scroll","maxWidth","fullScreen","id","dividers","TOUR_STEPS","content","disableBeacon","paper","textAlign","text","card","cardContent","fab","bottom","Steps","latexContent","hasError","exceedIterError","errorText","exceedIterErrorText","oldLowerXLatex","String","raw","oldUpperXLatex","newLowerXLatex","newUpperXLatex","newRootXLatex","oldLowerX","oldUpperX","rootX","rootFound","oldRootXLatex","errorX","errorThreshold","lowerFuncResult","rootFuncResult","product","newLowerX","newUpperX","setExpression","BLUE","latex","GREEN","pointStyle","POINT","label","showLabel","upperFuncResult","RED","useMediaQuery","useTheme","breakpoints","down","Container","Alert","severity","xs","triggerOnce","Card","CardContent","onChangeCommitted","duration","DesmosGraph","addStyles","NonlinearBisection","document","functionLatex","setFunctionLatex","functionText","setFunctionText","functionError","functionErrorText","parse","lowerX","setLowerX","upperX","setUpperX","intervalError","lowerXErrorText","upperXErrorText","setErrorThreshold","thresholdError","thresholdErrorText","solve","Math","abs","evaluate","x","runTour","setRunTour","openErrorSnackbar","setOpenErrorSnackbar","errorSnackbarClose","reason","Paper","cascade","disabled","mathField","mathquillDidMount","TextField","type","parseFloat","error","toString","helperText","Divider","Tooltip","arrow","placement","Fab","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","Snackbar","autoHideDuration","NonlinearFalsePosition","previousXLatex","newXLatex","previousX","funcResult","derivResult","newX","lineStyle","DOTTED","ORANGE","NonlinearNewton","derivValue","derivLatex","derivative","setIterations","iterError","iterErrorText","Number","isInteger","initialX","setInitialX","parseInt","perturbedXLatex","perturbedX","funcResult2","perturbation","NonlinearSecant","setPerturbation","perturbationError","perturbationErrorText","NonlinearFixedPoint","display","OdePredictor","categories","secondary","Menu","sm","md","lg","xl","NotFound","App","styles","CssBaseline","exact","j","reduce","previous","next","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.36bb7328.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__-VY2F\",\"App-logo\":\"App_App-logo__3aKMV\",\"App-logo-spin\":\"App_App-logo-spin__1Bkve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1_c6b\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {\r\n  parse, format\r\n} from 'mathjs';\r\n\r\nexport function formatLatex(value) {\r\n  //let v = parse(value);\r\n  //return v.toTex({parenthesis: \"keep\", implicit: \"hide\"});\r\n  return format(value, {notation: 'fixed', precision: 6});\r\n}\r\nexport function mathjsToLatex(value) {\r\n  return value.toTex({parenthesis: \"keep\"});\r\n}\r\n\r\nexport function generatePath(categoryPath=\"\", methodPath=\"\") {\r\n    if (categoryPath) {\r\n      return `/${categoryPath}/${methodPath}`;\r\n    }\r\n    return `/`;\r\n}\r\n\r\nexport function isValidMath(value) {\r\n  if (!value) {\r\n    return false;\r\n  }\r\n  else if (value.hasOwnProperty(\"value\")) {\r\n    if (value.value) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  else if (value.hasOwnProperty(\"implicit\")) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n","import styles from './Header.module.css';\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport {generatePath} from \"../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    homeButton: {\r\n      marginRight: theme.spacing(0),\r\n    },\r\n    githubButton: {\r\n        marginRight: theme.spacing(0),\r\n    },\r\n    title: {\r\n    },\r\n}));\r\n\r\nfunction Header({methodName}) {\r\n    const styleClasses = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const clickHome = () => {\r\n      history.push(generatePath());\r\n    };\r\n\r\n    let title = methodName? methodName:\"Numerical Methods\";\r\n    /*\r\n    if (methodName) {\r\n        title = \r\n        <Fade>\r\n            <Button component={Link} to={'/'} color=\"primary\">\r\n                {methodName}\r\n            </Button>\r\n        </Fade>;\r\n    }\r\n    else {\r\n        title = \r\n        <Zoom>\r\n            <Button component={Link} to={'/'} variant=\"outlined\" color=\"primary\">\r\n                Numerical Methods\r\n            </Button>\r\n        </Zoom>;\r\n    }\r\n    */\r\n    return (\r\n        <div className={styleClasses.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton onClick={clickHome} edge=\"start\" className={styleClasses.homeButton} color=\"inherit\" aria-label=\"Home\">\r\n                        <HomeIcon />\r\n                    </IconButton>\r\n                    <IconButton rel=\"noopener noreferrer\" href=\"https://github.com/FongYoong/numerical-methods-js\" target=\"_blank\" edge=\"start\" className={styleClasses.githubButton} color=\"inherit\" aria-label=\"GitHub\">\r\n                        <GitHubIcon />\r\n                    </IconButton>\r\n                    <Fade>\r\n                        <Typography variant=\"h5\" className={styleClasses.title}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Fade>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { green, red } from '@material-ui/core/colors';\r\n//import FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n        paddingLeft: theme.spacing(4),\r\n        transition: 'transform 0.2s',\r\n        \"&:hover\": {\r\n            '-ms-transform': 'scale(1.2)', /* IE 9 */\r\n            '-webkit-transform': 'scale(1.2)', /* Safari 3-8 */\r\n            'transform': 'scale(1.2)',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction MethodType({categoryPath, method, onMethodClick}) {\r\n    const styleClasses = useStyles();\r\n\r\n    const onClick = () => {\r\n        onMethodClick({categoryPath, method});\r\n    }\r\n    return (\r\n        <ListItem button className={styleClasses.listItem} onClick={onClick}>\r\n            <ListItemIcon>\r\n            {method.completed?\r\n            <CheckCircleOutlineOutlinedIcon style={{ color: green[500] }}/>\r\n            :\r\n            <CancelOutlinedIcon style={{ color: red[500] }}/>}\r\n            </ListItemIcon>\r\n            <ListItemText primary={<Box fontWeight=\"fontWeightBold\">{method.name}</Box>} primaryTypographyProps={{variant:'button'}}/>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default MethodType;","import React from \"react\";\r\nimport MethodType from \"./MethodType\";\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nfunction Category({category, onMethodClick}) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    return (\r\n        <>\r\n        <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n                <DoubleArrowIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={<Box fontWeight=\"fontWeightBold\">{category.name}</Box>} primaryTypographyProps={{'variant':'button'}}/>\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n                {\r\n                    category.methods.map((method, i) => (\r\n                        <MethodType key = {i} categoryPath={category.path} method={method} onMethodClick={onMethodClick}/>\r\n                    ))\r\n                }\r\n            </List>\r\n        </Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Category;","import {formatLatex, mathjsToLatex} from \"../../utils\";\r\nimport {React, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { MathComponent } from 'mathjax-react';\r\nimport * as Desmos from 'desmos';\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styleClasses = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styleClasses)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent =  withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))((props) => {\r\n    const params = props.params;\r\n    const [currentIteration, setCurrentIteration] = useState(params.currentIteration);\r\n    const defaultIteration = params.currentIteration;\r\n    const currentResult = params.results[currentIteration - 1];\r\n    const desmosDiv = useRef(null);\r\n    const calculator = useRef(null);\r\n\r\n    const updateGraph = useCallback(() => {\r\n        if (calculator.current){\r\n            params.graphCallback(calculator, currentResult);\r\n        }\r\n    }, [calculator, currentResult, params]);\r\n    updateGraph();\r\n\r\n    useEffect(() => {\r\n        if (desmosDiv.current){\r\n            const smallScreen = props.smallScreen;\r\n            desmosDiv.current.style.width = smallScreen?'90vw':'60vw';\r\n            desmosDiv.current.style.height = smallScreen?'90vh':'60vh';\r\n            const desmosOptions = {\r\n                keypad: false,\r\n                expressions: false,\r\n                expressionsTopbar: false,\r\n            };\r\n            calculator.current = Desmos.GraphingCalculator(desmosDiv.current, desmosOptions);\r\n            updateGraph();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        \r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <Box component=\"div\" overflow=\"visible\">\r\n                <MathComponent tex={`${mathjsToLatex(params.functionValue)}`}/>\r\n            </Box>\r\n            <Typography variant=\"h6\">\r\n                Iteration {currentIteration}:\r\n            </Typography>\r\n            <Box width=\"70%\">\r\n                <Slider\r\n                    orientation=\"horizontal\"\r\n                    onChange={(event, value) => setCurrentIteration(value)}\r\n                    defaultValue={defaultIteration}\r\n                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                    step={1}\r\n                    marks\r\n                    min={1}\r\n                    max={params.iterations}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Box>\r\n            <Grid item>\r\n                <div ref={desmosDiv}>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\nfunction NewtonDesmos({params, smallScreen}) {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n      const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<TimelineIcon/>} onClick={handleClickOpen}>\r\n                View Graph\r\n            </Button>\r\n            \r\n            <Dialog scroll='paper' maxWidth={false} fullScreen={smallScreen} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                <Fade>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\r\n                    <DialogContent dividers smallScreen={smallScreen} params={params} />\r\n                </Fade>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewtonDesmos;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".interval-input\",\r\n        title: \"Interval\",\r\n        content:\r\n            \"Select the lower and upper bounds of x\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearBisection({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Function\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Interval\r\n    const [lowerX, setLowerX] = useState(0);\r\n    const [upperX, setUpperX] = useState(3);\r\n    let intervalError = false;\r\n    let lowerXErrorText = \"\";\r\n    let upperXErrorText = \"\";\r\n    if (lowerX >= upperX) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be lower than upper x!\";\r\n        upperXErrorText = \"Upper x must be higher than lower x!\";\r\n    }\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0005);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = functionError || intervalError || thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    let results = [];\r\n    let iterations = 1;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        let i = 0;\r\n        while (true) {\r\n            let oldLowerX = (i === 0) ? lowerX: results[i - 1].newLowerX;\r\n            let oldUpperX = (i === 0) ? upperX: results[i - 1].newUpperX;\r\n            let newLowerX = oldLowerX;\r\n            let newUpperX = oldUpperX;\r\n            let rootX = (newLowerX + newUpperX) / 2;\r\n            let lowerFuncResult, upperFuncResult, rootFuncResult, errorX;\r\n            let rootFound = false;\r\n            if (i !== 0) {\r\n                // Check if root error is lower than threshold\r\n                errorX = Math.abs(rootX - results[i - 1].rootX);\r\n                if (errorX < errorThreshold){\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            if (!rootFound){\r\n                // Update lower and upper x values\r\n                try {\r\n                    lowerFuncResult = functionValue.evaluate({x : oldLowerX});\r\n                    upperFuncResult = functionValue.evaluate({x : oldUpperX}); // upperFuncResult is for visualisation purposes, no relevance in the calculations\r\n                    rootFuncResult = functionValue.evaluate({x : rootX});\r\n                }\r\n                catch {\r\n                    hasError = true;\r\n                    functionError = true;\r\n                    functionErrorText = \"Only variable x is allowed!\";\r\n                    solve = false;\r\n                    break;\r\n                }\r\n                let product = lowerFuncResult * rootFuncResult;\r\n                if (product < 0) {\r\n                    newUpperX = rootX;\r\n                }\r\n                else if (product > 0) {\r\n                    newLowerX = rootX;\r\n                }\r\n                else {\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            \r\n            results.push({\r\n                oldLowerX,\r\n                newLowerX,\r\n                oldUpperX,\r\n                newUpperX,\r\n                rootX,\r\n                lowerFuncResult,\r\n                upperFuncResult,\r\n                rootFuncResult,\r\n                errorX,\r\n            });\r\n            i++;\r\n            if (rootFound) {\r\n                break;\r\n            }\r\n            if (i > 10000) {\r\n                exceedIterError = true;\r\n                exceedIterErrorText = \"Exceeded 10000 iterations!\";\r\n                break;\r\n            }\r\n        }\r\n        iterations = i;\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"lowerX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Lower x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setLowerX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={lowerX.toString()}\r\n                                        helperText={lowerXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"upperX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Upper x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUpperX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={upperX.toString()}\r\n                                        helperText={upperXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"errorThreshold-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Error threshold:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                        error={thresholdError}\r\n                                        label={thresholdError?\"Error\":\"\"}\r\n                                        defaultValue={errorThreshold.toString()}\r\n                                        helperText={thresholdErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let oldLowerXLatex = String.raw`x_{lower_{${currentIteration - 1}}}`;\r\n        let oldUpperXLatex = String.raw`x_{upper_{${currentIteration - 1}}}`;\r\n        let newLowerXLatex = String.raw`x_{lower_{${currentIteration}}}`;\r\n        let newUpperXLatex = String.raw`x_{upper_{${currentIteration}}}`;\r\n        let newRootXLatex = String.raw`x_{root_{${currentIteration - 1}}}`;\r\n        latexContent=String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ ${oldLowerXLatex} &=& ${formatLatex(currentResult.oldLowerX)}\r\n        \\\\ ${oldUpperXLatex} &=& ${formatLatex(currentResult.oldUpperX)}\r\n        \\\\ ${newRootXLatex} &=& \\frac{${oldLowerXLatex} + ${oldUpperXLatex}}{2}\r\n        \\\\                       &=& ${formatLatex(currentResult.rootX)}\r\n        \\\\\r\n        `;\r\n        let rootFound = false;\r\n        if (currentIteration > 1) {\r\n            let oldRootXLatex = String.raw`x_{root_{${currentIteration - 2}}}`;\r\n            latexContent += String.raw`\r\n            \\\\ ${oldRootXLatex} &=& ${formatLatex(results[currentIteration - 2].rootX)}\r\n            \\\\ Error &=& |${newRootXLatex} - ${oldRootXLatex}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n            \\\\\r\n            `;\r\n            if (currentResult.errorX < params.errorThreshold) {\r\n                rootFound = true;\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\\r\n                \\\\ \\text{Root found because:}\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ Error &<& Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorX)} &<& ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        if (!rootFound) {\r\n            latexContent += String.raw`\r\n            \\\\ f(${oldLowerXLatex}) &=& ${formatLatex(currentResult.lowerFuncResult)}\r\n            \\\\ f(${newRootXLatex}) &=& ${formatLatex(currentResult.rootFuncResult)}\r\n            \\\\\r\n            \\\\\r\n            `;\r\n            let product = currentResult.lowerFuncResult * currentResult.rootFuncResult;\r\n            if (product < 0) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) < 0,\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ ${newLowerXLatex} &=& ${oldLowerXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n                \\\\ ${newUpperXLatex} &=& ${newRootXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n                `;\r\n            }\r\n            else if (product > 0) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) > 0,\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ ${newLowerXLatex} &=& ${newRootXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n                \\\\ ${newUpperXLatex} &=& ${oldUpperXLatex}\r\n                \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\ \\text{Root found because }\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ f(${oldLowerXLatex})f(${newRootXLatex}) == 0.\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'lowerX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Lower\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldLowerX)}, ${formatLatex(currentResult.lowerFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'upperX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Upper\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldUpperX)}, ${formatLatex(currentResult.upperFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.rootX)}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                \r\n                    <Grid container xs item direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                        <Grid xs item className=\"iteration-slider\">\r\n                            <Slide direction=\"left\" triggerOnce>\r\n                                <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                    <Slider\r\n                                        orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                        onChangeCommitted={(event, value) => setCurrentIteration(value)}\r\n                                        defaultValue={1}\r\n                                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                                        step={1}\r\n                                        marks\r\n                                        min={1}\r\n                                        max={params.iterations}\r\n                                        valueLabelDisplay=\"on\"\r\n                                    />\r\n                                    \r\n                                </Box>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid xs item className=\"step-math\">\r\n                                <Zoom duration={500} triggerOnce>\r\n                                    <Card className={styleClasses.card}>\r\n                                        <CardContent className={styleClasses.cardContent}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Iteration {currentIteration}:\r\n                                            </Typography>\r\n                                            <MathComponent tex={latexContent}/>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Zoom>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs item className=\"graph-button\">\r\n                            <Slide direction=\"right\" triggerOnce>\r\n                                <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                            </Slide>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearBisection;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".interval-input\",\r\n        title: \"Interval\",\r\n        content:\r\n            \"Select the lower and upper bounds of x\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearFalsePosition({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Function\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Interval\r\n    const [lowerX, setLowerX] = useState(0);\r\n    const [upperX, setUpperX] = useState(3);\r\n    let intervalError = false;\r\n    let lowerXErrorText = \"\";\r\n    let upperXErrorText = \"\";\r\n    if (lowerX >= upperX) {\r\n        intervalError = true;\r\n        lowerXErrorText = \"Lower x must be lower than upper x!\";\r\n        upperXErrorText = \"Upper x must be higher than lower x!\";\r\n    }\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.0005);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative!\";\r\n    }\r\n\r\n    let hasError = functionError || intervalError || thresholdError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let exceedIterError = false;\r\n    let exceedIterErrorText = \"\";\r\n    let results = [];\r\n    let iterations = 1;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        let i = 0;\r\n        while (true) {\r\n            let oldLowerX = (i === 0) ? lowerX: results[i - 1].newLowerX;\r\n            let oldUpperX = (i === 0) ? upperX: results[i - 1].newUpperX;\r\n            let newLowerX = oldLowerX;\r\n            let newUpperX = oldUpperX;\r\n            let lowerFuncResult, upperFuncResult, rootX, rootFuncResult, errorX;\r\n            try {\r\n                lowerFuncResult = functionValue.evaluate({x : oldLowerX});\r\n                upperFuncResult = functionValue.evaluate({x : oldUpperX}); // upperFuncResult is for visualisation purposes, no relevance in the calculations\r\n                rootX = oldUpperX - upperFuncResult * (oldLowerX - oldUpperX) / (lowerFuncResult - upperFuncResult);\r\n                rootFuncResult = functionValue.evaluate({x : rootX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            let rootFound = false;\r\n            let product = lowerFuncResult * rootFuncResult;\r\n            if (product < 0) {\r\n                newUpperX = rootX;\r\n            }\r\n            else if (product > 0) {\r\n                newLowerX = rootX;\r\n            }\r\n            else {\r\n                rootFound = true;\r\n            }\r\n\r\n            if (!rootFound && i !== 0) {\r\n                // Check if root error is lower than threshold\r\n                errorX = Math.abs(rootX - results[i - 1].rootX);\r\n                if (errorX < errorThreshold){\r\n                    rootFound = true;\r\n                }\r\n            }\r\n            results.push({\r\n                oldLowerX,\r\n                newLowerX,\r\n                oldUpperX,\r\n                newUpperX,\r\n                rootX,\r\n                lowerFuncResult,\r\n                upperFuncResult,\r\n                rootFuncResult,\r\n                errorX,\r\n            });\r\n            i++;\r\n            if (rootFound) {\r\n                break;\r\n            }\r\n            if (i > 10000) {\r\n                exceedIterError = true;\r\n                exceedIterErrorText = \"Exceeded 10000 iterations!\";\r\n                break;\r\n            }\r\n        }\r\n        iterations = i;\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, errorThreshold, iterations, exceedIterError, exceedIterErrorText, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"lowerX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Lower x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setLowerX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={lowerX.toString()}\r\n                                        helperText={lowerXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"upperX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Upper x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUpperX(parseFloat(event.target.value))}\r\n                                        error={intervalError}\r\n                                        label={intervalError?\"Error\":\"\"}\r\n                                        defaultValue={upperX.toString()}\r\n                                        helperText={upperXErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"errorThreshold-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Error threshold:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                        error={thresholdError}\r\n                                        label={thresholdError?\"Error\":\"\"}\r\n                                        defaultValue={errorThreshold.toString()}\r\n                                        helperText={thresholdErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.exceedIterError;\r\n    let errorText = params.exceedIterErrorText;\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let oldLowerXLatex = String.raw`x_{lower_{${currentIteration - 1}}}`;\r\n        let oldUpperXLatex = String.raw`x_{upper_{${currentIteration - 1}}}`;\r\n        let newLowerXLatex = String.raw`x_{lower_{${currentIteration}}}`;\r\n        let newUpperXLatex = String.raw`x_{upper_{${currentIteration}}}`;\r\n        let newRootXLatex = String.raw`x_{root_{${currentIteration - 1}}}`;\r\n        latexContent=String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ ${oldLowerXLatex} &=& ${formatLatex(currentResult.oldLowerX)}\r\n        \\\\ ${oldUpperXLatex} &=& ${formatLatex(currentResult.oldUpperX)}\r\n        \\\\ ${newRootXLatex} &=&  ${oldUpperXLatex}-\\frac{f(${oldUpperXLatex})(${oldLowerXLatex} - ${oldUpperXLatex})}{f(${oldLowerXLatex}) - f(${oldUpperXLatex})}\r\n        \\\\                       &=& ${formatLatex(currentResult.rootX)}\r\n        \\\\\r\n        `;\r\n\r\n        let rootFound = false;\r\n        latexContent += String.raw`\r\n        \\\\ f(${oldLowerXLatex}) &=& ${formatLatex(currentResult.lowerFuncResult)}\r\n        \\\\ f(${newRootXLatex}) &=& ${formatLatex(currentResult.rootFuncResult)}\r\n        \\\\\r\n        \\\\\r\n        `;\r\n        let product = currentResult.lowerFuncResult * currentResult.rootFuncResult;\r\n        if (product < 0) {\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) < 0,\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${newLowerXLatex} &=& ${oldLowerXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n            \\\\ ${newUpperXLatex} &=& ${newRootXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n            `;\r\n        }\r\n        else if (product > 0) {\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\text{Given that } f(${oldLowerXLatex})f(${newRootXLatex}) > 0,\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ ${newLowerXLatex} &=& ${newRootXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newLowerX)}\r\n            \\\\ ${newUpperXLatex} &=& ${oldUpperXLatex}\r\n            \\\\                   &=& ${formatLatex(currentResult.newUpperX)}\r\n            `;\r\n        }\r\n        else {\r\n            rootFound = true;\r\n            latexContent += String.raw`\r\n            \\end{array}\r\n            \\\\ \\text{Root found because }\r\n            \\\\\r\n            \\begin{array}{lcl}\r\n            \\\\ f(${oldLowerXLatex})f(${newRootXLatex}) == 0.\r\n            `;\r\n        }\r\n        \r\n        if (!rootFound && currentIteration > 1) {\r\n            let oldRootXLatex = String.raw`x_{root_{${currentIteration - 2}}}`;\r\n            latexContent += String.raw`\r\n            \\\\ ${oldRootXLatex} &=& ${formatLatex(results[currentIteration - 2].rootX)}\r\n            \\\\ Error &=& |${newRootXLatex} - ${oldRootXLatex}|\r\n            \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n            \\\\\r\n            `;\r\n            if (currentResult.errorX < params.errorThreshold) {\r\n                latexContent += String.raw`\r\n                \\end{array}\r\n                \\\\\r\n                \\\\ \\text{Root found because:}\r\n                \\\\\r\n                \\begin{array}{lcl}\r\n                \\\\ Error &<& Error Threshold\r\n                \\\\ ${formatLatex(currentResult.errorX)} &<& ${formatLatex(params.errorThreshold)}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'lowerX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Lower\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldLowerX)}, ${formatLatex(currentResult.lowerFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'upperX', color: Desmos.Colors.GREEN, pointStyle: Desmos.Styles.POINT, label: \"Upper\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.oldUpperX)}, ${formatLatex(currentResult.upperFuncResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.rootX)}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid xs item>\r\n                        <Zoom triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Converged after {params.iterations} iterations\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                \r\n                    <Grid container xs item direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                        <Grid xs item className=\"iteration-slider\">\r\n                            <Slide direction=\"left\" triggerOnce>\r\n                                <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                    <Slider\r\n                                        orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                        onChangeCommitted={(event, value) => setCurrentIteration(value)}\r\n                                        defaultValue={1}\r\n                                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                                        step={1}\r\n                                        marks\r\n                                        min={1}\r\n                                        max={params.iterations}\r\n                                        valueLabelDisplay=\"on\"\r\n                                    />\r\n                                    \r\n                                </Box>\r\n                            </Slide>\r\n                        </Grid>\r\n                        <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid xs item className=\"step-math\">\r\n                                <Zoom duration={500} triggerOnce>\r\n                                    <Card className={styleClasses.card}>\r\n                                        <CardContent className={styleClasses.cardContent}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Iteration {currentIteration}:\r\n                                            </Typography>\r\n                                            <MathComponent tex={latexContent}/>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Zoom>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid xs item className=\"graph-button\">\r\n                            <Slide direction=\"right\" triggerOnce>\r\n                                <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                            </Slide>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearFalsePosition;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse, derivative } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".derivative-input\",\r\n        title: \"Derivative\",\r\n        content:\r\n            \"The function's derivative will be shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply Newton's method.\",\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".results\",\r\n        title: \"Results\",\r\n        content:\r\n            \"The results are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearNewton({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Derivative\r\n    // Another sample would be: `3x^2+2x-8`\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue, derivValue, derivLatex;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n        derivValue = derivative(functionText, 'x');\r\n        derivLatex = mathjsToLatex(derivValue);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(10);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || iterError;\r\n\r\n    // Initial x\r\n    const [initialX, setInitialX] = useState(0.0);\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let results = [];\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        for (let i = 0; i < iterations; i++) {\r\n            let previousX = (i === 0) ? initialX: results[i - 1].newX;\r\n            let funcResult, derivResult;\r\n            try {\r\n                funcResult = functionValue.evaluate({x : previousX});\r\n                derivResult = derivValue.evaluate({x : previousX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            \r\n            let newX = previousX - funcResult / derivResult;\r\n            let errorX = Math.abs(newX - previousX);\r\n            results.push({\r\n                previousX,\r\n                funcResult,\r\n                derivResult,\r\n                newX,\r\n                errorX,\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, derivValue, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"derivative-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Derivative:\r\n                                    </Typography>\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                    <Collapse in={!functionError}>\r\n                                        {!functionError && <Fade triggerOnce><MathComponent tex={derivLatex}/></Fade>}\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                        error={iterError}\r\n                                        label={iterError?\"Error\":\"\"}\r\n                                        defaultValue={iterations.toString()}\r\n                                        helperText={iterErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                        label={\"\"}\r\n                                        defaultValue={initialX.toString()}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let previousXLatex = String.raw`x_{${currentIteration - 1}}`;\r\n        let newXLatex = String.raw`x_{${currentIteration}}`;\r\n        latexContent =\r\n        String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{lll}\r\n        \\\\ ${previousXLatex} &=& ${formatLatex(currentResult.previousX)}\r\n        \\\\ f(${previousXLatex}) &=& ${formatLatex(currentResult.funcResult)}\r\n        \\\\ f'(${previousXLatex}) &=& ${formatLatex(currentResult.derivResult)}\r\n        \\\\ ${newXLatex} &=& ${previousXLatex} - \\frac{f(${previousXLatex})}{f'(${previousXLatex})}\r\n        \\\\                       &=& ${formatLatex(currentResult.newX)}\r\n        \\\\ Error &=& |${newXLatex} - ${previousXLatex}|\r\n        \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n        \\end{array}\r\n        `;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'derivative', color: Desmos.Colors.GREEN, lineStyle: Desmos.Styles.DOTTED, latex:\r\n                `(y-${formatLatex(currentResult.funcResult)})/(x-${formatLatex(currentResult.previousX)})=${formatLatex(currentResult.derivResult)}` });\r\n            calculator.current.setExpression({ id: 'initialX', color: Desmos.Colors.ORANGE, pointStyle: Desmos.Styles.POINT, label: \"initialX\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.previousX)}, ${formatLatex(currentResult.funcResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.newX)}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                <Slider\r\n                                    orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                    onChange={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"step-math\">\r\n                            <Zoom duration={500} triggerOnce>\r\n                                <Card className={styleClasses.card}>\r\n                                    <CardContent className={styleClasses.cardContent}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Iteration {currentIteration}:\r\n                                        </Typography>\r\n                                        <MathComponent tex={latexContent}/>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Zoom>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs item className=\"graph-button\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearNewton;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".perturbation-input\",\r\n        title: \"Perturbation\",\r\n        content:\r\n            \"Specify the perturbation fraction. Higher values produce a better approximation.\",\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply the modified secant method.\",\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".results\",\r\n        title: \"Results\",\r\n        content:\r\n            \"The results are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearSecant({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Derivative\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Perturbation\r\n    const [perturbation, setPerturbation] = useState(0.01);\r\n    let perturbationError = false;\r\n    let perturbationErrorText = \"\";\r\n    if (perturbation <= 0) {\r\n        perturbationError = true;\r\n        perturbationErrorText = \"Perturbation must be a positive integer!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(10);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || perturbationError || iterError;\r\n\r\n    // Initial x\r\n    const [initialX, setInitialX] = useState(3.5);\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let results = [];\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        for (let i = 0; i < iterations; i++) {\r\n            let previousX = (i === 0) ? initialX: results[i - 1].newX;\r\n            let perturbedX = previousX * (1 + perturbation);\r\n            let funcResult, funcResult2;\r\n            try {\r\n                funcResult = functionValue.evaluate({x : previousX});\r\n                funcResult2 = functionValue.evaluate({x : perturbedX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            \r\n            let newX = previousX - perturbation * previousX * funcResult / (funcResult2 - funcResult);\r\n            let errorX = Math.abs(newX - previousX);\r\n            results.push({\r\n                previousX,\r\n                perturbedX,\r\n                funcResult,\r\n                funcResult2,\r\n                newX,\r\n                errorX,\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, perturbation, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"perturbation-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Perturbation fraction:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setPerturbation(parseFloat(event.target.value))}\r\n                                        error={perturbationError}\r\n                                        label={perturbationError?\"Error\":\"\"}\r\n                                        defaultValue={perturbation.toString()}\r\n                                        helperText={perturbationErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                        error={iterError}\r\n                                        label={iterError?\"Error\":\"\"}\r\n                                        defaultValue={iterations.toString()}\r\n                                        helperText={iterErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                        label={\"\"}\r\n                                        defaultValue={initialX.toString()}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let previousXLatex = String.raw`x_{${currentIteration - 1}}`;\r\n        let perturbedXLatex = String.raw`${previousXLatex} + 𝛿 \\cdot ${previousXLatex}`;\r\n        let newXLatex = String.raw`x_{${currentIteration}}`;\r\n        latexContent =\r\n        String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ ${previousXLatex} &=& ${formatLatex(currentResult.previousX)}\r\n        \\\\ ${perturbedXLatex} &=& ${formatLatex(currentResult.perturbedX)}\r\n        \\\\ f(${previousXLatex}) &=& ${formatLatex(currentResult.funcResult)}\r\n        \\\\ f(${perturbedXLatex}) &=& ${formatLatex(currentResult.funcResult2)}\r\n        \\\\ ${newXLatex} &=& ${previousXLatex} - \\frac{𝛿 \\cdot ${previousXLatex} \\cdot f(${previousXLatex})}{f(${perturbedXLatex}) - f(${previousXLatex})}\r\n        \\\\              &=& ${formatLatex(currentResult.newX)}\r\n        \\end{array}\r\n        \\\\\r\n        \\begin{array}{lcl}\r\n        \\\\ Error &=& |${newXLatex} - ${previousXLatex}|\r\n        \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n        \\end{array}\r\n        \\end{array}\r\n        `;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'derivative', color: Desmos.Colors.GREEN, lineStyle: Desmos.Styles.DOTTED, latex:\r\n                `(y-${formatLatex(currentResult.funcResult)})/(x-${formatLatex(currentResult.previousX)})=${formatLatex((currentResult.funcResult2 - currentResult.funcResult) / (params.perturbation * currentResult.previousX))}` });\r\n            calculator.current.setExpression({ id: 'initialX', color: Desmos.Colors.ORANGE, pointStyle: Desmos.Styles.POINT, label: \"initialX\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.previousX)}, ${formatLatex(currentResult.funcResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.newX)}, 0)` });\r\n        }\r\n    }\r\n\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                <Slider\r\n                                    orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                    onChange={(event, value) => setCurrentIteration(value)}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"step-math\">\r\n                            <Zoom duration={500} triggerOnce>\r\n                                <Card className={styleClasses.card}>\r\n                                    <CardContent className={styleClasses.cardContent}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Iteration {currentIteration}:\r\n                                        </Typography>\r\n                                        <MathComponent tex={latexContent}/>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Zoom>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs item className=\"graph-button\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearSecant;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport DesmosGraph from \"./DesmosGraph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply the fixed point method.\",\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".results\",\r\n        title: \"Results\",\r\n        content:\r\n            \"The results are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction NonlinearFixedPoint({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Derivative\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`\\frac{3-x^3}{6}`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(10);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || iterError;\r\n\r\n    // Initial x\r\n    const [initialX, setInitialX] = useState(1.5);\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let results = [];\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        for (let i = 0; i < iterations; i++) {\r\n            let previousX = (i === 0) ? initialX: results[i - 1].newX;\r\n            let funcResult;\r\n            try {\r\n                funcResult = functionValue.evaluate({x : previousX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            \r\n            let newX = funcResult;\r\n            let errorX = Math.abs(newX - previousX);\r\n            results.push({\r\n                previousX,\r\n                funcResult,\r\n                newX,\r\n                errorX,\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        It is assumed that the user has already rearranged the original function into the form\r\n                        <MathComponent display={false} tex={String.raw`\\ x=f(x)`} />\r\n                        .\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function, f(x):\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                        error={iterError}\r\n                                        label={iterError?\"Error\":\"\"}\r\n                                        defaultValue={iterations.toString()}\r\n                                        helperText={iterErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                        label={\"\"}\r\n                                        defaultValue={initialX.toString()}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let previousXLatex = String.raw`x_{${currentIteration - 1}}`;\r\n        let newXLatex = String.raw`x_{${currentIteration}}`;\r\n        latexContent =\r\n        String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{lll}\r\n        \\\\ ${previousXLatex} &=& ${formatLatex(currentResult.previousX)}\r\n        \\\\ f(${previousXLatex}) &=& ${formatLatex(currentResult.funcResult)}\r\n        \\\\ ${newXLatex} &=& f(${previousXLatex})\r\n        \\\\              &=& ${formatLatex(currentResult.newX)}\r\n        \\\\ Error &=& |${newXLatex} - ${previousXLatex}|\r\n        \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n        \\end{array}\r\n        `;\r\n\r\n        graphCallback = (calculator, currentResult) => {\r\n            calculator.current.setExpression({ id: 'function', color: Desmos.Colors.BLUE, latex: mathjsToLatex(params.functionValue)});\r\n            calculator.current.setExpression({ id: 'initialX', color: Desmos.Colors.ORANGE, pointStyle: Desmos.Styles.POINT, label: \"initialX\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.previousX)}, ${formatLatex(currentResult.funcResult)})` });\r\n            calculator.current.setExpression({ id: 'root', color: Desmos.Colors.RED, pointStyle: Desmos.Styles.POINT, label: \"Root\", showLabel:true, latex:\r\n                `(${formatLatex(currentResult.newX)}, 0)` });\r\n        }\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                <Slider\r\n                                    orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                    onChange={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"step-math\">\r\n                            <Zoom duration={500} triggerOnce>\r\n                                <Card className={styleClasses.card}>\r\n                                    <CardContent className={styleClasses.cardContent}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Iteration {currentIteration}:\r\n                                        </Typography>\r\n                                        <MathComponent tex={latexContent}/>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Zoom>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs item className=\"graph-button\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <DesmosGraph params={{currentIteration, graphCallback, smallScreen, ...params}} />\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NonlinearFixedPoint;","import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse } from 'mathjs';\r\nimport { MathComponent } from 'mathjax-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply the fixed point method.\",\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".results\",\r\n        title: \"Results\",\r\n        content:\r\n            \"The results are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction LinearGauss({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    // Derivative\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`\\frac{3-x^3}{6}`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(10);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || iterError;\r\n\r\n    // Initial x\r\n    const [initialX, setInitialX] = useState(1.5);\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let results = [];\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        for (let i = 0; i < iterations; i++) {\r\n            let previousX = (i === 0) ? initialX: results[i - 1].newX;\r\n            let funcResult;\r\n            try {\r\n                funcResult = functionValue.evaluate({x : previousX});\r\n            }\r\n            catch {\r\n                hasError = true;\r\n                functionError = true;\r\n                functionErrorText = \"Only variable x is allowed!\";\r\n                solve = false;\r\n                break;\r\n            }\r\n            \r\n            let newX = funcResult;\r\n            let errorX = Math.abs(newX - previousX);\r\n            results.push({\r\n                previousX,\r\n                funcResult,\r\n                newX,\r\n                errorX,\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        solve = false;\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        if (hasError) {\r\n            setOpenErrorSnackbar(true);\r\n        }\r\n        else {\r\n            setRunTour(true)\r\n        }\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n\r\n    const errorSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n    };\r\n\r\n    let params = {functionValue, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        It is assumed that the user has already rearranged the original function into the form\r\n                        <MathComponent display={false} tex={String.raw`\\ x=f(x)`} />\r\n                        .\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function, f(x):\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                        error={iterError}\r\n                                        label={iterError?\"Error\":\"\"}\r\n                                        defaultValue={iterations.toString()}\r\n                                        helperText={iterErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial x value:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                        label={\"\"}\r\n                                        defaultValue={initialX.toString()}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n                <Divider  />\r\n\r\n            </Paper>\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n            <Snackbar open={openErrorSnackbar} autoHideDuration={2000} onClose={errorSnackbarClose}>\r\n                <Alert onClose={errorSnackbarClose} severity=\"error\">\r\n                    There is an error with the {functionError?\"function\":\"iterations\"}.\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    let results = params.results;\r\n    let currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent, graphCallback;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let previousXLatex = String.raw`x_{${currentIteration - 1}}`;\r\n        let newXLatex = String.raw`x_{${currentIteration}}`;\r\n        latexContent =\r\n        String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{lll}\r\n        \\\\ ${previousXLatex} &=& ${formatLatex(currentResult.previousX)}\r\n        \\\\ f(${previousXLatex}) &=& ${formatLatex(currentResult.funcResult)}\r\n        \\\\ ${newXLatex} &=& f(${previousXLatex})\r\n        \\\\              &=& ${formatLatex(currentResult.newX)}\r\n        \\\\ Error &=& |${newXLatex} - ${previousXLatex}|\r\n        \\\\       &=& |${formatLatex(currentResult.errorX)}|\r\n        \\end{array}\r\n        `;\r\n    }\r\n\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid className=\"results\" container direction={smallScreen?\"column\":\"row\"} alignItems=\"center\" justify=\"space-evenly\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" height={smallScreen?null:\"20rem\"} width={smallScreen?\"70vw\":null}>\r\n                                <Slider\r\n                                    orientation={smallScreen?\"horizontal\":\"vertical\"}\r\n                                    onChange={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"step-math\">\r\n                            <Zoom duration={500} triggerOnce>\r\n                                <Card className={styleClasses.card}>\r\n                                    <CardContent className={styleClasses.cardContent}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Iteration {currentIteration}:\r\n                                        </Typography>\r\n                                        <MathComponent tex={latexContent}/>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Zoom>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs item className=\"graph-button\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            Graph hereeeee\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearGauss;","import React from \"react\";\r\n\r\nfunction OdePredictor() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OdePredictor;","import NonlinearBisection from '../components/methods/nonlinear/Bisection';\r\nimport NonlinearFalsePosition from '../components/methods/nonlinear/FalsePosition';\r\nimport NonlinearNewton from '../components/methods/nonlinear/Newton';\r\nimport NonlinearSecant from '../components/methods/nonlinear/Secant';\r\nimport NonlinearFixedPoint from '../components/methods/nonlinear/FixedPoint';\r\n\r\nimport LinearGauss from '../components/methods/linear/Gauss';\r\nimport LinearPivot from '../components/methods/linear/Pivot';\r\nimport LinearJordan from '../components/methods/linear/Jordan';\r\nimport LinearJacobi from '../components/methods/linear/Jacobi';\r\nimport LinearSeidel from '../components/methods/linear/Seidel';\r\nimport LinearLU from '../components/methods/linear/LU';\r\nimport LinearSVD from '../components/methods/linear/SVD';\r\nimport LinearInverse from '../components/methods/linear/Inverse';\r\nimport LinearPenrose from '../components/methods/linear/PenroseInverse';\r\n\r\nimport EigenPower from '../components/methods/eigen/Power';\r\nimport EigenInversePower from '../components/methods/eigen/InversePower';\r\nimport EigenShiftedPower from '../components/methods/eigen/ShiftedPower';\r\nimport EigenQR from '../components/methods/eigen/QR';\r\n\r\nimport OptiGoldenSearch from '../components/methods/optimisation/GoldenSearch';\r\nimport OptiParabolic from '../components/methods/optimisation/Parabolic';\r\nimport OptiNewton from '../components/methods/optimisation/Newton';\r\nimport OptiGradient from '../components/methods/optimisation/Gradient';\r\nimport OptiLinearProg from '../components/methods/optimisation/LinearProg';\r\n\r\nimport CurveLinear from '../components/methods/curve/Linear';\r\nimport CurvePoly from '../components/methods/curve/Polynomial';\r\nimport CurveSpline from '../components/methods/curve/Spline';\r\n\r\nimport FFT from '../components/methods/fourier/FFT';\r\n\r\nimport DiffFinite from '../components/methods/differential/Finite';\r\nimport DiffRichardson from '../components/methods/differential/Richardson';\r\n\r\nimport IntegralMidpoint from '../components/methods/integral/Midpoint';\r\nimport IntegralTrapezoidal from '../components/methods/integral/Trapezoidal';\r\nimport IntegralSimpson from '../components/methods/integral/Simpson';\r\nimport IntegralQuadrature from '../components/methods/integral/Quadrature';\r\n\r\nimport OdeEuler from '../components/methods/ode/Euler';\r\nimport OdeMidpoint from '../components/methods/ode/Midpoint';\r\nimport OdeRunge from '../components/methods/ode/Runge';\r\nimport OdeMultistep from '../components/methods/ode/Multistep';\r\nimport OdePredictor from '../components/methods/ode/Predictor';\r\n\r\nconst categories = [\r\n    {\r\n        name : \"Nonlinear Equations\",\r\n        path : \"nonlinear\",\r\n        methods : [\r\n            {\r\n                name: \"Bisection\",\r\n                path : \"bisection\",\r\n                component: NonlinearBisection,\r\n                completed: true,\r\n            },\r\n            {\r\n                name: \"False-Position\",\r\n                path : \"false_position\",\r\n                component: NonlinearFalsePosition,\r\n                completed: true,\r\n            },\r\n            {\r\n                name: \"Fixed-Point\",\r\n                path : \"fixed_point\",\r\n                component: NonlinearFixedPoint,\r\n                completed: true,\r\n            },\r\n            {\r\n                name: \"Newton-Rhapson\",\r\n                path: \"newton\",\r\n                component: NonlinearNewton,\r\n                completed: true,\r\n            },\r\n            {\r\n                name: \"Modified Secant\",\r\n                path : \"secant\",\r\n                component: NonlinearSecant,\r\n                completed: true,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Linear Equations\",\r\n        path : \"linear\",\r\n        methods : [\r\n            {\r\n                name: \"Gauss Elimination\",\r\n                path : \"gauss\",\r\n                component: LinearGauss,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Gauss Pivoting\",\r\n                path : \"pivot\",\r\n                component: LinearPivot,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Gauss-Jordan\",\r\n                path : \"jordan\",\r\n                component: LinearJordan,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Jacobi Iteration\",\r\n                path : \"jacobi\",\r\n                component: LinearJacobi,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Gauss-Seidel Iteration\",\r\n                path : \"seidel\",\r\n                component: LinearSeidel,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"LU Decomposition\",\r\n                path : \"lu\",\r\n                component: LinearLU,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Singular Value Decomposition\",\r\n                path : \"svd\",\r\n                component: LinearSVD,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Inverse Matrix\",\r\n                path : \"inverse\",\r\n                component: LinearInverse,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Moore-Penrose Inverse\",\r\n                path : \"penrose_inverse\",\r\n                component: LinearPenrose,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Eigenvalues / Eigenvectors\",\r\n        path : \"eigen\",\r\n        methods : [\r\n            {\r\n                name: \"Power Method\",\r\n                path : \"power\",\r\n                component: EigenPower,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Inverse-Power\",\r\n                path : \"inverse\",\r\n                component: EigenInversePower,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Shifted Power\",\r\n                path : \"shifted\",\r\n                component: EigenShiftedPower,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"QR Factorisation\",\r\n                path : \"qr\",\r\n                component: EigenQR,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Optimisation\",\r\n        path : \"optimisation\",\r\n        methods : [\r\n            {\r\n                name: \"Golden-Section Search\",\r\n                path : \"golden_search\",\r\n                component: OptiGoldenSearch,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Parabolic Interpolation\",\r\n                path : \"parabolic\",\r\n                component: OptiParabolic,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Newton's Method\",\r\n                path : \"newton\",\r\n                component: OptiNewton,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Gradient Methods\",\r\n                path : \"gradient\",\r\n                component: OptiGradient,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Linear Programming\",\r\n                path : \"linear_prog\",\r\n                component: OptiLinearProg,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Curve Fitting\",\r\n        path : \"curve\",\r\n        methods : [\r\n            {\r\n                name: \"Linear\",\r\n                path : \"linear\",\r\n                component: CurveLinear,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Polynomial Regression\",\r\n                path : \"poly\",\r\n                component: CurvePoly,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Spline Interpolation\",\r\n                path : \"spline\",\r\n                component: CurveSpline,\r\n                completed: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name : \"Fourier Methods\",\r\n        path : \"fourier\",\r\n        methods : [\r\n            {\r\n                name: \"Fast Fourier Transform\",\r\n                path : \"fft\",\r\n                component: FFT,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Numerical Differentiation\",\r\n        path : \"differential\",\r\n        methods : [\r\n            {\r\n                name: \"Finite Difference\",\r\n                path : \"finite\",\r\n                component: DiffFinite,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Richardson's Extrapolation\",\r\n                component: DiffRichardson,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Numerical integration\",\r\n        path : \"integral\",\r\n        methods : [\r\n            {\r\n                name: \"Rectangle & Midpoint\",\r\n                path : \"midpoint\",\r\n                component: IntegralMidpoint,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Trapezoidal\",\r\n                path : \"trapezoidal\",\r\n                component: IntegralTrapezoidal,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Simpson's Method\",\r\n                path : \"simpson\",\r\n                component: IntegralSimpson,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Gauss Quadrature\",\r\n                path : \"quadrature\",\r\n                component: IntegralQuadrature,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name : \"Ordinary Differential Equations\",\r\n        path : \"ode\",\r\n        methods : [\r\n            {\r\n                name: \"Euler\",\r\n                path : \"euler\",\r\n                component: OdeEuler,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Midpoint\",\r\n                path : \"midpoint\",\r\n                component: OdeMidpoint,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Runge-Kutta\",\r\n                path : \"runge\",\r\n                component: OdeRunge,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Multistep\",\r\n                path : \"multistep\",\r\n                component: OdeMultistep,\r\n                completed: false,\r\n            },\r\n            {\r\n                name: \"Predictor-Corrector\",\r\n                path : \"predictor\",\r\n                component: OdePredictor,\r\n                completed: false,\r\n            },\r\n        ]\r\n    },\r\n\r\n]\r\n\r\nexport default categories;","import React from \"react\";\r\n\r\nfunction LinearPivot() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearPivot;","import React from \"react\";\r\n\r\nfunction LinearJordan() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearJordan;","import React from \"react\";\r\n\r\nfunction LinearJacobi() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearJacobi;","import React from \"react\";\r\n\r\nfunction LinearSeidel() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearSeidel;","import React from \"react\";\r\n\r\nfunction LinearLU() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearLU;","import React from \"react\";\r\n\r\nfunction LinearSVD() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearSVD;","import React from \"react\";\r\n\r\nfunction LinearInverse() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearInverse;","import React from \"react\";\r\n\r\nfunction PenroseInverse() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PenroseInverse;","import React from \"react\";\r\n\r\nfunction EigenPower() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EigenPower;","import React from \"react\";\r\n\r\nfunction EigenInversePower() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EigenInversePower;","import React from \"react\";\r\n\r\nfunction EigenShiftedPower() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EigenShiftedPower;","import React from \"react\";\r\n\r\nfunction EigenQR() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EigenQR;","import React from \"react\";\r\n\r\nfunction OptiGoldenSearch() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptiGoldenSearch;","import React from \"react\";\r\n\r\nfunction OptiParabolic() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptiParabolic;","import React from \"react\";\r\n\r\nfunction OptiNewton() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptiNewton;","import React from \"react\";\r\n\r\nfunction OptiGradient() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptiGradient;","import React from \"react\";\r\n\r\nfunction OptiLinearProg() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptiLinearProg;","import React from \"react\";\r\n\r\nfunction CurveLinear() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurveLinear;","import React from \"react\";\r\n\r\nfunction CurvePoly() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurvePoly;","import React from \"react\";\r\n\r\nfunction CurveSpline() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurveSpline;","import React from \"react\";\r\n\r\nfunction FFT() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FFT;","import React from \"react\";\r\n\r\nfunction DiffFinite() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiffFinite;","import React from \"react\";\r\n\r\nfunction DiffRichardson() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiffRichardson;","import React from \"react\";\r\n\r\nfunction IntegralMidpoint() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntegralMidpoint;","import React from \"react\";\r\n\r\nfunction IntegralTrapezoidal() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntegralTrapezoidal;","import React from \"react\";\r\n\r\nfunction IntegralSimpson() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntegralSimpson;","import React from \"react\";\r\n\r\nfunction IntegralQuadrature() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntegralQuadrature;","import React from \"react\";\r\n\r\nfunction OdeEuler() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OdeEuler;","import React from \"react\";\r\n\r\nfunction OdeMidpoint() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OdeMidpoint;","import React from \"react\";\r\n\r\nfunction OdeRunge() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OdeRunge;","import React from \"react\";\r\n\r\nfunction OdeMultistep() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OdeMultistep;","import Header from \"../header/Header\";\r\nimport Category from \"./Category\";\r\nimport categories from \"../../constants/categories\";\r\nimport {generatePath} from \"../utils\";\r\nimport {React, useEffect} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Fade, Zoom, Slide, JackInTheBox } from \"react-awesome-reveal\";\r\n\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    \"@keyframes gradient\": {\r\n      '0%': {\r\n        'background-position': '0% 50%'\r\n      },\r\n      '50%': {\r\n        'background-position': '100% 50%'\r\n      },\r\n      '100%': {\r\n        'background-position': '0% 50%'\r\n      }\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    margin: theme.spacing(1),\r\n    transition: 'transform 0.2s',\r\n    \"&:hover\": {\r\n      'background': 'linear-gradient(45deg, #cbffbb, #bbffe0, #bff4ff, #ffefd0)',\r\n      'background-size': '400% 400%',\r\n      'animation': '$gradient 5s ease infinite'\r\n    },\r\n  },\r\n}));\r\n// 'linear-gradient(45deg, #c9c6ff, #bbffe0, #bff4ff, #ffefd0)'\r\n\r\nfunction Menu() {\r\n  useEffect(() => {\r\n      // Set webpage title\r\n      document.title = \"Numerical Methods Web Demo\";\r\n  });\r\n\r\n  const styleClasses = useStyles();\r\n  const history = useHistory();\r\n  const onMethodClick = ({categoryPath, method}) => {\r\n    history.push(generatePath(categoryPath, method.path));\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <Header methodName = {\"\"} />\r\n        <Zoom duration={500} triggerOnce>\r\n        <Grid container spacing={1}>\r\n        {\r\n          categories.map((category, i) => (\r\n            <Grid key={i} item xs={12} sm={6} md={4} lg={4} xl={4}>\r\n              <Paper className={styleClasses.paper}>\r\n                <Category category={category} methods={category.methods} onMethodClick={onMethodClick}/>\r\n              </Paper>\r\n            </Grid>\r\n          ))\r\n        }\r\n        </Grid>\r\n        </Zoom>\r\n      </>\r\n      \r\n  );\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <p>\r\n        Not Found!\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import logo from './logo.svg';\nimport styles from './App.module.css';\n\nimport React from \"react\";\nimport Menu from \"./components/menu/Menu\";\nimport NotFound from \"./components/NotFound\";\nimport categories from \"./constants/categories\";\nimport {generatePath} from \"./components/utils\";\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\n\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n  /*\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  */\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n\n  const styleClasses = useStyles();\n  return (\n    <div className={styles.App}>\n      <CssBaseline />\n\n      <Container>\n        <div className={styleClasses.root}>\n          <Switch>\n\n            <Route exact path={generatePath()}>\n              <Menu />\n            </Route>\n            {\n              categories.map((category, i) => (\n                category.methods.map((method, j) => (\n                  <Route key={i + j} exact path={generatePath(category.path, method.path)}\n                  component={\n                    () => <method.component methodName={method.name} />\n                  } />\n                ))\n              )).reduce((previous, next) => previous.concat(next), [])\n            }\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n/*\n\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n<p>\n  Edit <code>src/App.js</code> and save to reload.\n</p>\n<a\n  className=\"App-link\"\n  href=\"https://reactjs.org\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  Learn React\n</a>\n\n\nconst data = [\n  {\n    name: \"Baked Salmon\",\n    ingredients: [\n      { name: \"Salmon\", amount: 1, measurement: \"l lb\" },\n      { name: \"Pine Nuts\", amount: 1, measurement: \"cup\" },\n      { name: \"Butter Lettuce\", amount: 2, measurement: \"cups\" },\n      { name: \"Yellow Squash\", amount: 1, measurement: \"med\" },\n      { name: \"Olive Oil\", amount: 0.5, measurement: \"cup\" },\n      { name: \"Garlic\", amount: 3, measurement: \"cloves\" }\n    ],\n    steps: [\n      \"Preheat the oven to 350 degrees.\",\n      \"Spread the olive oil around a glass baking dish.\",\n      \"Add the yellow squash and place in the oven for 30 mins.\",\n      \"Add the salmon, garlic, and pine nuts to the dish.\",\n      \"Bake for 15 minutes.\",\n      \"Remove from oven. Add the lettuce and serve.\"\n    ]\n  },\n  {\n    name: \"Fish Tacos\",\n    ingredients: [\n      { name: \"Whitefish\", amount: 1, measurement: \"l lb\" },\n      { name: \"Cheese\", amount: 1, measurement: \"cup\" },\n      { name: \"Iceberg Lettuce\", amount: 2, measurement: \"cups\" },\n      { name: \"Tomatoes\", amount: 2, measurement: \"large\" },\n      { name: \"Tortillas\", amount: 3, measurement: \"med\" }\n    ],\n    steps: [\n      \"Cook the fish on the grill until hot.\",\n      \"Place the fish on the 3 tortillas.\",\n      \"Top them with lettuce, tomatoes, and cheese.\"\n    ]\n  }\n];\n\nfunction Recipe({ name, ingredients, steps }) {\n  return (\n    <section id={name.toLowerCase().replace(/ /g, \"-\")}>\n      <h1>{name}</h1>\n      <ul className=\"ingredients\">\n        {ingredients.map((ingredient, i) => (\n        <li key={i}>{ingredient.name}</li>\n        ))}\n      </ul>\n      <section className=\"instructions\">\n        <h2>Cooking Instructions</h2>\n        {steps.map((step, i) => (\n        <p key={i}>{step}</p>\n        ))}\n      </section>\n    </section>\n  );\n}\n\nfunction Menu({ title, recipes }) {\n  return (\n    <article>\n      <header>\n        <h1>{title}</h1>\n      </header>\n      <div className=\"recipes\">\n        {recipes.map((recipe, i) => (\n        <Recipe key={i} {...recipe} />\n        ))}\n      </div>\n    </article>\n  );\n}\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/*\n<React.StrictMode>\n  <App />\n</React.StrictMode>\n*/"],"sourceRoot":""}