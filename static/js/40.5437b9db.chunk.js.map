{"version":3,"sources":["components/methods/eigen/InversePower.js","components/matrix_utils.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","Steps","smallScreen","latexContent","params","styleClasses","useState","currentIteration","setCurrentIteration","hasError","inverseError","errorText","inverseErrorText","iterations","results","previousResult","initalInput","originalInput","scaledNewInput","currentResult","newInput","String","raw","matrixToLatex","inverseMatrix","single","scalingMode","formatLatex","scaleFactor","ax","eigenvalue","leastEigenvalue","previousLeastEigenvalue","Math","abs","className","in","severity","direction","alignItems","justify","xs","item","triggerOnce","id","orientation","onChangeCommitted","event","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","variant","math","block","EigenInversePower","methodName","markdown","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","initialInputColumn","inputColumnState","setInputColumnState","sizeCallback","add","columns","slice","rows","inputColumns","inputRows","push","createNewColumn","length","createNewRow","i","pop","setScalingMode","setIterations","iterError","iterErrorText","Number","isInteger","solve","originalMatrix","gridTo2DArray","inv","modifiedInput","cloneArray","iter","multiply","map","v","runTour","setRunTour","duration","cascade","control","checked","onChange","name","label","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","disabled","type","parseInt","error","toString","helperText","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","props","ref","React","createRef","onInputChange","current","parseFloat","isNaN","setState","this","column","key","onBlur","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","newRow","rowsArray","keys","Object","sort","row","k","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","j","numberFactorials","getBinomialCoefficient","n","nextPermutation","temp","generatePermutationMapping","original","Array","mapping","alreadyCovered","includes","latex","leftBracketOnly","rightBracketOnly","boldRows","boldColumns","transpose","rowLength","colLength","isBold","b","formatMatrixLatex","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix17","initialMatrix18","initialMatrix19","initialMatrix20","initialMatrix21","initialMatrix22"],"mappings":"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","file":"static/js/40.5437b9db.chunk.js","sourcesContent":["import {formatLatex} from \"../../utils\";\r\nimport {initialMatrix13 as initialMatrix, initialInputColumn13 as initialInputColumn,\r\ngenerateGridCallback, createNewColumn, createNewRow, gridTo2DArray, cloneArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { multiply, inv } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".scaling-input\",\r\n        title: \"Use Scaling\",\r\n        content:\r\n        \"Enable/Disable scaling\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".input-col-input\",\r\n        title: \"Input\",\r\n        content:\r\n        \"Specify the initial input vector.\",\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply the inverse power method.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction EigenInversePower({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const [inputColumnState, setInputColumnState] = useState(initialInputColumn);\r\n\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            const inputColumns = inputColumnState.columns.slice();\r\n            const inputRows = inputColumnState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n                inputColumns.push(createNewColumn(inputColumns.length));\r\n                inputRows[0][`col_${inputColumns.length}`] = 0;\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n                for (let i = 0; i < inputRows.length; i++) {\r\n                    delete inputRows[i][`col_${inputColumns.length}`];\r\n                }\r\n                inputColumns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n            setInputColumnState({columns: inputColumns, rows: inputRows});\r\n        };\r\n    }\r\n\r\n    // Scaling mode\r\n    const [scalingMode, setScalingMode] = useState(true);\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(6);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = iterError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    let inverseMatrix, inverseError = false, inverseErrorText = \"\";\r\n    try {\r\n        inverseMatrix = inv(originalMatrix);\r\n    }\r\n    catch {\r\n        inverseError = true;\r\n        inverseErrorText = \"Matrix A does not have an inverse!\";\r\n        solve = true;\r\n    }\r\n    const originalInput = gridTo2DArray(inputColumnState.rows)[0];\r\n    let modifiedInput = cloneArray(originalInput);\r\n    let results = [];\r\n    if (!hasError && !inverseError) {\r\n        solve = true;\r\n        for (let iter  = 0; iter < iterations; iter++) {\r\n            modifiedInput = multiply(inverseMatrix, modifiedInput);\r\n            let scaleFactor = scalingMode ? Math.max(...modifiedInput.map((v) => Math.abs(v))) : 0;\r\n            let scaledNewInput = scalingMode ? modifiedInput.map((v) => v / scaleFactor) : modifiedInput;\r\n            let ax = multiply(inverseMatrix, scaledNewInput);\r\n            let eigenvalue = multiply(ax, scaledNewInput) / multiply(scaledNewInput, scaledNewInput);\r\n            results.push({\r\n                scaleFactor,\r\n                newInput: cloneArray(modifiedInput),\r\n                scaledNewInput: cloneArray(scaledNewInput),\r\n                ax,\r\n                eigenvalue,\r\n            });\r\n            modifiedInput = scaledNewInput;\r\n        }\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, inverseMatrix, inverseError, inverseErrorText, originalInput, scalingMode, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        \r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"scaling-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={scalingMode} onChange={(event) => setScalingMode(event.target.checked)} name=\"useScaling\" />}\r\n                                                label=\"Use Scaling\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"input-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Initial Input, <TeX math={String.raw`X^{(0)}`} />:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={1} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={inputColumnState.columns}\r\n                                                        rowGetter={i => inputColumnState.rows[i]}\r\n                                                        rowsCount={inputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(inputColumnState, setInputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * inputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * inputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"iteration-input\">\r\n                                            <Card className={styleClasses.card}>\r\n                                                <CardContent className={styleClasses.cardContent}>\r\n                                                    <Typography variant=\"h6\">\r\n                                                        Iterations:\r\n                                                    </Typography>\r\n                                                    <TextField\r\n                                                        disabled={false}\r\n                                                        type=\"number\"\r\n                                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                                        error={iterError}\r\n                                                        label={iterError?\"Error\":\"\"}\r\n                                                        defaultValue={iterations.toString()}\r\n                                                        helperText={iterErrorText}\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let hasError = params.inverseError;\r\n    let errorText = params.inverseErrorText;\r\n    let latexContent;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.inverseError) {\r\n\r\n    }\r\n    else {\r\n        let results = params.results;\r\n        let previousResult = currentIteration === 1 ? null : results[currentIteration - 2];\r\n        let initalInput = currentIteration === 1 ? params.originalInput : previousResult.scaledNewInput;\r\n        let currentResult = results[currentIteration - 1];\r\n        let newInput = currentResult.newInput;\r\n        let scaledNewInput = currentResult.scaledNewInput;\r\n        \r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ A^{-1} = ${matrixToLatex(params.inverseMatrix)}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ X_{${currentIteration}} &=& A^{-1} X_{${currentIteration - 1}}\r\n        \\\\\r\n        \\\\                         &=& ${matrixToLatex(params.inverseMatrix)} ${matrixToLatex(initalInput, {single: true})}\r\n        \\\\\r\n        \\\\                         &=& ${matrixToLatex(newInput, {single: true})}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        `;\r\n        if (params.scalingMode) {\r\n            latexContent += String.raw`\r\n            \\\\ max \\lbrace |X_{${currentIteration}}| \\rbrace = ${formatLatex(currentResult.scaleFactor)}\r\n            \\\\ \\begin{array}{lcl}\r\n            \\\\ X_{${currentIteration}} &=& \\frac{1}{max \\lbrace X_{${currentIteration}} \\rbrace} X_{${currentIteration}}\r\n            \\\\\r\n            \\\\                         &=& \\frac{1}{${formatLatex(currentResult.scaleFactor)}} ${matrixToLatex(newInput, {single: true})}\r\n            \\\\\r\n            \\\\                         &=& ${matrixToLatex(scaledNewInput, {single: true})}\r\n            \\\\ \r\n            \\\\ \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ \\text{Dominant eigenvalue of } A^{-1} \\text{, } \\lambda_{${currentIteration}}^{-1}\r\n            &=& \\frac{A^{-1} X_{${currentIteration}} \\cdot X_{${currentIteration}}}{X_{${currentIteration}} \\cdot X_{${currentIteration}}}\r\n        \\\\\r\n        \\\\  &=& \\frac{${matrixToLatex([currentResult.ax])} ${matrixToLatex(scaledNewInput, {single: true})}} {${matrixToLatex([scaledNewInput])} ${matrixToLatex(scaledNewInput, {single: true})}}\r\n        \\\\\r\n        \\\\  &=& ${formatLatex(currentResult.eigenvalue)}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\begin{array}{lcl}\r\n        \\\\ \\text{Smallest eigenvalue of } A \\text{, } \\lambda_{${currentIteration}}\r\n            &=& \\frac{1}{\\lambda_{${currentIteration}}^{-1}}\r\n        \\\\\r\n        \\\\  &=& \\frac{1}{${formatLatex(currentResult.eigenvalue)}}\r\n        \\\\\r\n        \\\\  &=& ${formatLatex( 1 / currentResult.eigenvalue)}\r\n        \\\\ \\end{array}\r\n        `;\r\n        \r\n        if (currentIteration > 1) {\r\n            let leastEigenvalue = 1 / currentResult.eigenvalue;\r\n            let previousLeastEigenvalue = 1 / previousResult.eigenvalue;\r\n            latexContent += String.raw`\r\n            \\\\ \\hline\r\n            \\begin{array}{lcl}\r\n            \\\\ \\text{Error} &=& \\frac{\\lambda_{${currentIteration}} - \\lambda_{${currentIteration - 1}}}{\\lambda_{${currentIteration}}}\r\n            \\\\\r\n            \\\\       &=& |\\frac{${formatLatex(leastEigenvalue)} - ${formatLatex(previousLeastEigenvalue)}}{${formatLatex(leastEigenvalue)}}|\r\n            \\\\\r\n            \\\\       &=& ${formatLatex(Math.abs((leastEigenvalue - previousLeastEigenvalue)/ leastEigenvalue))}\r\n            \\\\ \\end{array}\r\n            `;\r\n        }\r\n\r\n        latexContent += String.raw`\r\n        \\\\\r\n        \\\\ \\end{array}`;\r\n     }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" width=\"70vw\">\r\n                                <Slider\r\n                                    orientation=\"horizontal\"\r\n                                    onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations<=0 ? 1 :params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iteration {currentIteration}:\r\n                                    </Typography>\r\n                                    <TeX math={latexContent} block />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n            </Collapse>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EigenInversePower;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 5, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix18 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix19 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix20 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n        { key: \"col_3\", name: \"u\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: 2},\r\n    ]\r\n}\r\nexport const initialMatrix21 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 2},\r\n    ]\r\n}\r\nexport const initialMatrix22 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 5},\r\n    ]\r\n}"],"sourceRoot":""}