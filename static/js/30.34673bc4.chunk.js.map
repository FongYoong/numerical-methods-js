{"version":3,"sources":["../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","components/methods/linear/SVD.js","components/matrix_utils.js"],"names":["useMediaQuery","queryInput","options","arguments","length","undefined","theme","useTheme","props","getThemeProps","name","query","replace","supportMatchMedia","window","matchMedia","_props$options","_extends","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","React","matches","match","setMatch","active","queryList","updateMatch","addListener","removeListener","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","LinearSVD","methodName","useEffect","document","styleClasses","smallScreen","breakpoints","down","columnWidth","widthPadding","heightPadding","useState","initialMatrix","gridState","setGridState","columnCallback","add","columns","slice","rows","push","createNewColumn","i","pop","rowCallback","createNewRow","originalMatrix","gridTo2DArray","rowLength","colLength","multiplyTranspose","multiply","transpose","multiplyTransposeEigen","eigs","multiplyTransposeSingularValues","values","reverse","map","v","Math","sqrt","transposeMultiply","transposeMultiplyEigen","transposeMultiplySingularValues","rightUnitaryT","vectors","leftUnitaryT","leftUnitary","diagonal","Array","fill","product","latexContent","String","raw","matrixToLatex","formatMatrixLatex","j","runTour","setRunTour","className","duration","triggerOnce","cascade","variant","direction","alignItems","justify","xs","item","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","math","block","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","ref","createRef","onInputChange","value","current","parseFloat","isNaN","setState","this","column","key","defaultValue","onBlur","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","newRow","rowsArray","keys","Object","sort","row","k","cloneArray","array","JSON","parse","stringify","isDiagonallyDominant","matrix","sum","abs","numberFactorials","getBinomialCoefficient","n","nextPermutation","temp","generatePermutationMapping","original","mapping","alreadyCovered","includes","latex","single","leftBracketOnly","rightBracketOnly","boldRows","boldColumns","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix17"],"mappings":"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","file":"static/js/30.34673bc4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import {formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix6 as initialMatrix, generateGridCallback, createNewColumn, createNewRow, gridTo2DArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { transpose, multiply, eigs } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport { Zoom } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-col-input\",\r\n        title: \"Column\",\r\n        content:\r\n        \"Add/Remove columns\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-row-input\",\r\n        title: \"Row\",\r\n        content:\r\n        \"Add/Remove rows\",\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearSVD({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const columnCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n    const rowCallback = (add) => {\r\n        return () => {\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                rows.push(createNewRow(gridState.columns.length));\r\n            }\r\n            else {\r\n                if (rows.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n            }\r\n            setGridState({...gridState, rows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    const rowLength = gridState.rows.length; // row dimension\r\n    const colLength = gridState.columns.length; // column dimension\r\n\r\n    const multiplyTranspose = multiply(transpose(originalMatrix), originalMatrix); // AT*A\r\n    const multiplyTransposeEigen = eigs(multiplyTranspose);\r\n    const multiplyTransposeSingularValues = multiplyTransposeEigen.values.slice().reverse().map((v) => Math.sqrt(v));\r\n    const transposeMultiply = multiply(originalMatrix, transpose(originalMatrix)); // A*AT\r\n    const transposeMultiplyEigen = eigs(transposeMultiply);\r\n    const transposeMultiplySingularValues = transposeMultiplyEigen.values.slice().reverse().map((v) => Math.sqrt(v));\r\n\r\n    let rightUnitaryT = transpose(multiplyTransposeEigen.vectors).reverse();\r\n\r\n    let leftUnitaryT = transpose(transposeMultiplyEigen.vectors).reverse();\r\n    let leftUnitary = transpose(leftUnitaryT);\r\n\r\n    let diagonal = [];\r\n    if (rowLength <= colLength) {\r\n        for (let i = 0; i < rowLength; i++) {\r\n            diagonal.push(Array(colLength).fill(0));\r\n            if (i < colLength) {\r\n                diagonal[i][i] = multiplyTransposeSingularValues[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++) {\r\n            diagonal.push(Array(colLength).fill(0));\r\n            if (i < colLength) {\r\n                diagonal[i][i] = transposeMultiplySingularValues[i];\r\n            }\r\n        }\r\n    }\r\n    let product = multiply(leftUnitary, multiply(diagonal, rightUnitaryT));\r\n\r\n    let latexContent = String.raw`\r\n    \\displaystyle\r\n    \\begin{array}{l}\r\n    \\begin{array}{lcl}\r\n    \\\\ AA^{T} = ${matrixToLatex(multiplyTranspose)}\r\n    \\\\ \r\n    \\\\\r\n    \\\\ \\text{The eigenvectors of } AA^{T}:\r\n    \\\\\r\n    \\\\ \\bf{U} = \\left[\\begin{matrix}`;\r\n\r\n    for (let i = 0 ; i < transposeMultiplyEigen.vectors.length; i++) {\r\n        latexContent += String.raw` v_{${i + 1}}\\cr `;\r\n    }\r\n\r\n    latexContent += String.raw`\r\n    \\end{matrix}\\right]^{T} = ${matrixToLatex(leftUnitary)}\r\n    \\\\ \r\n    \\\\ \\hline\r\n    \\\\\r\n    \\\\ A^{T}A = ${matrixToLatex(multiplyTranspose)}\r\n    \\\\\r\n    \\\\\r\n    \\\\ \\text{The eigenvectors of } A^{T}A:\r\n    \\\\\r\n    \\\\ \\bf{V^{T}} = \\left[\\begin{matrix}`;\r\n\r\n    for (let i = 0 ; i < multiplyTransposeEigen.vectors.length; i++) {\r\n        latexContent += String.raw` v_{${i + 1}}\\cr `;\r\n    }\r\n\r\n    latexContent += String.raw`\r\n    \\end{matrix}\\right] = ${matrixToLatex(rightUnitaryT)}\r\n    \\\\ \r\n    \\\\ \\text{The eigenvalues of } A^{T}A \\text{ or singular values,} \\ \\sigma\r\n    \\\\ = ${multiplyTransposeSingularValues.map((v) => formatMatrixLatex(v))}\r\n    \\\\\r\n    \\\\ \\bf{D} = \\left[\\begin{matrix}`;\r\n    for (let i = 0; i < rowLength; i++) {\r\n        for (let j = 0; j < colLength; j++) {\r\n            if (j === i) {\r\n                latexContent += String.raw`\\colorbox{aqua}{\\bf{${formatMatrixLatex(diagonal[i][j])}}}`;\r\n            }\r\n            else {\r\n                latexContent += String.raw`${formatMatrixLatex(diagonal[i][j])}`;\r\n            }\r\n            if (j !== colLength - 1) {\r\n                latexContent += String.raw`&`;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\cr`;\r\n    }\r\n\r\n   latexContent += String.raw`\r\n    \\end{matrix}\\right]\r\n    \\\\\r\n    \\\\ \\hline\r\n    \\\\ \\begin{array}{lcl}\r\n    \\\\ A &=& ${matrixToLatex(originalMatrix)}\r\n    \\\\\r\n    \\\\ U &=& ${matrixToLatex(leftUnitary)}\r\n    \\\\\r\n    \\\\ D &=& ${matrixToLatex(diagonal)}\r\n    \\\\\r\n    \\\\ V^{T} &=& ${matrixToLatex(rightUnitaryT)}\r\n    \\\\\r\n    \\\\ A &=& U D V^{T}\r\n    \\\\\r\n    \\\\   &=& ${matrixToLatex(leftUnitary)} ${matrixToLatex(diagonal)} ${matrixToLatex(rightUnitaryT)}\r\n    \\\\\r\n    \\\\   &=& ${matrixToLatex(product)}\r\n    \\\\ \\end{array}\r\n    \\\\\r\n    `;\r\n    if (rowLength > colLength) {\r\n        latexContent += String.raw`\r\n        \\\\ \\text{We find that } U D V^{T} \\ne A.\r\n        \\\\ \\text{This is because the my naive SVD algorithm does not work when rows are greater than columns.}\r\n        \\\\ \\text{I'm too lazy to rectify this, sorry!}\r\n        `  \r\n    }\r\n    latexContent += String.raw`\\end{array}\\end{array}`;\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        Incomplete! Experimental!\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-col-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Columns:\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(false)}>\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(true)}>\r\n                                                <AddCircleOutlineOutlinedIcon  />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-row-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Rows:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n\r\n            <Container className={styleClasses.container}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Zoom direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <TeX math={latexContent} block />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Zoom>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinearSVD;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 2, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}"],"sourceRoot":""}