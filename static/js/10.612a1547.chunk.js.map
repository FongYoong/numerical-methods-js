{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","components/methods/linear/Gauss.js","components/methods/linear/matrix_utils.js"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","spacing","textAlign","palette","text","primary","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","bottom","right","Steps","latexContent","smallScreen","params","styleClasses","useState","currentIteration","setCurrentIteration","iterations","results","previousMatrix","originalMatrix","finalMatrix","previousOutput","originalOutput","finalOutput","currentResult","String","raw","interchange","row","pivot","formatLatex","factor","boldRows","row2","finalLatex","matrixToLatex","leftBracketOnly","single","rightBracketOnly","initialLatex","operationLatex","formatMatrixLatex","direction","alignItems","justify","xs","item","triggerOnce","id","orientation","onChangeCommitted","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","math","block","LinearGauss","methodName","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","initialOutputColumn","outputColumnState","setOutputColumnState","generateGridCallback","state","stateSetter","fromRow","toRow","updated","rows","slice","i","columnCallback","add","columns","push","createNewColumn","length","pop","rowCallback","outputColumns","outputRows","createNewRow","gridTo2DArray","modifiedMatrix","cloneArray","modifiedOutput","rowLength","colLength","pivotLength","validPivot","tempMatrixRow","tempOutputElement","divisionByZero","isNaN","col","runTour","setRunTour","duration","cascade","rel","href","aria-label","onClick","rowGetter","rowsCount","onGridRowsUpdated","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","Math","random","in","arrow","placement","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","action","MatrixElementEditor","createRef","onInputChange","current","parseFloat","setState","this","column","key","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","newNum","newRow","rowsArray","keys","Object","sort","map","k","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","j","abs","numberFactorials","nextPermutation","temp","generatePermutationMapping","original","Array","mapping","alreadyCovered","includes","latex","boldColumns","transpose","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6"],"mappings":"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","file":"static/js/10.612a1547.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import {formatLatex, formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix, initialOutputColumn, createNewColumn, createNewRow, gridTo2DArray, cloneArray, matrixToLatex} from \"./matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-col-input\",\r\n        title: \"Column\",\r\n        content:\r\n        \"Add/Remove columns\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-row-input\",\r\n        title: \"Row\",\r\n        content:\r\n        \"Add/Remove rows\",\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".output-col-input\",\r\n        title: \"Output\",\r\n        content:\r\n        \"Specify the output vector.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearGauss({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const [outputColumnState, setOutputColumnState] = useState(initialOutputColumn);\r\n    function generateGridCallback (state, stateSetter) {\r\n        return ({ fromRow, toRow, updated }) => {\r\n            const rows = state.rows.slice();\r\n            for (let i = fromRow; i <= toRow; i++) {\r\n                rows[i] = { ...rows[i], ...updated };\r\n            }\r\n            stateSetter({\r\n                ...state, rows\r\n            });\r\n        };\r\n    }\r\n    /*\r\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n        const rows = gridState.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        setGridState({\r\n            ...gridState, rows\r\n        });\r\n    };\r\n    const onOutputColumnStateUpdated = ({ fromRow, toRow, updated }) => {\r\n        const rows = outputColumnState.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        setOutputColumnState({\r\n            ...outputColumnState, rows\r\n        });\r\n    };\r\n    */\r\n    const columnCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n    const rowCallback = (add) => {\r\n        return () => {\r\n            const rows = gridState.rows.slice();\r\n            const outputColumns = outputColumnState.columns.slice();\r\n            const outputRows = outputColumnState.rows.slice();\r\n            if (add) {\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                outputColumns.push(createNewColumn(outputColumns.length));\r\n                outputRows[0][`col_${outputColumns.length}`] = 0;\r\n            }\r\n            else {\r\n                if (rows.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < outputRows.length; i++) {\r\n                    delete outputRows[i][`col_${outputColumns.length}`];\r\n                }\r\n                outputColumns.pop();\r\n            }\r\n            setGridState({...gridState, rows});\r\n            setOutputColumnState({columns: outputColumns, rows: outputRows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    let solve = true;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    let modifiedMatrix = cloneArray(originalMatrix);\r\n    const originalOutput = gridTo2DArray(outputColumnState.rows)[0];\r\n    let modifiedOutput = cloneArray(originalOutput);\r\n    const rowLength = gridState.rows.length; // row dimension, also the output dimension\r\n    const colLength = gridState.columns.length; // column dimension\r\n    let results = [];\r\n    let pivotLength = rowLength;\r\n    \r\n    for (let pivot  = 0; pivot < pivotLength - 1; pivot++) {\r\n        let validPivot = true;\r\n        if (modifiedMatrix[pivot][pivot] === 0 ) {\r\n            validPivot = false;\r\n            for (let row2 = pivot + 1; row2 < pivotLength; row2++) {\r\n                if (modifiedMatrix[row2][pivot] !== 0) {\r\n                    let tempMatrixRow = modifiedMatrix[pivot];\r\n                    modifiedMatrix[pivot] = modifiedMatrix[row2];\r\n                    modifiedMatrix[row2] = tempMatrixRow;\r\n                    let tempOutputElement = modifiedOutput[pivot];\r\n                    modifiedOutput[pivot] = modifiedOutput[row2];\r\n                    modifiedOutput[row2] = tempOutputElement;\r\n                    results.push({\r\n                        finalMatrix: cloneArray(modifiedMatrix),\r\n                        finalOutput: cloneArray(modifiedOutput),\r\n                        interchange: true,\r\n                        pivot: pivot + 1,\r\n                        row: pivot + 1,\r\n                        row2: row2 + 1,\r\n                    });\r\n                    validPivot = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (validPivot) {\r\n            for (let row  = pivot + 1; row < pivotLength; row++) {\r\n                let factor = modifiedMatrix[row][pivot] / modifiedMatrix[pivot][pivot];\r\n                let divisionByZero = false;\r\n                if (factor === 0) {\r\n                    divisionByZero = true;\r\n                }\r\n                else if (isNaN(factor)) {\r\n                    continue;\r\n                }\r\n                if (!divisionByZero) {\r\n                    for (let col  = 0; col < colLength; col++) {\r\n                        modifiedMatrix[row][col] -= factor * modifiedMatrix[pivot][col];\r\n                    }\r\n                    modifiedOutput[row] -= factor * modifiedOutput[pivot];\r\n                }\r\n                results.push({\r\n                    finalMatrix: cloneArray(modifiedMatrix),\r\n                    finalOutput: cloneArray(modifiedOutput),\r\n                    interchange: false,\r\n                    factor,\r\n                    pivot: pivot + 1,\r\n                    row: row + 1,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    let iterations = results.length;\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, originalOutput, rowLength, colLength, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        This method is applied to matrices in the form of\r\n                        <TeX math={String.raw`\\ Ax=B`} />\r\n                        . <Link rel=\"noopener noreferrer\" href=\"https://people.richland.edu/james/lecture/m116/matrices/pivot.html\" target=\"_blank\" aria-label=\"Pivoting\">Pivoting</Link> is also implemented.\r\n                        No backsubstitution or Gauss-Jordan form due to&nbsp;\r\n                        <Link color=\"error\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/watch?v=vIci3C4JkL0\" target=\"_blank\" aria-label=\"laziness\">laziness</Link>.\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-col-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Columns:\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(false)}>\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(true)}>\r\n                                                <AddCircleOutlineOutlinedIcon  />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-row-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Rows:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"output-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Output, B:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={Math.random()} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={outputColumnState.columns}\r\n                                                        rowGetter={i => outputColumnState.rows[i]}\r\n                                                        rowsCount={outputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(outputColumnState, setOutputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * outputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * outputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let latexContent;\r\n\r\n    if (currentIteration <= 0) {\r\n        setCurrentIteration(1);\r\n    }\r\n    else if (params.iterations > 0 && currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.iterations >= 2 ) {\r\n        let results = params.results;\r\n        let previousMatrix = currentIteration===1 ? params.originalMatrix : results[currentIteration - 2].finalMatrix;\r\n        let previousOutput = currentIteration===1 ? params.originalOutput : results[currentIteration - 2].finalOutput;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        `;\r\n        if (!currentResult.interchange) {\r\n            latexContent += String.raw`\r\n            \\begin{array}{lcl}\r\n            \\\\ Factor &=& \\frac{A_{${currentResult.row}${currentResult.pivot}}}{A_{${currentResult.pivot}${currentResult.pivot}}}\r\n            \\\\        &=& ${formatLatex(currentResult.factor)}\r\n            \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\\\\ \\begin{array}{lcl} `;\r\n        const boldRows = currentResult.interchange ? [currentResult.row, currentResult.row2] : [currentResult.row, currentResult.pivot];\r\n        const finalLatex= String.raw`\\overbrace{${matrixToLatex(currentResult.finalMatrix, {leftBracketOnly:true, boldRows: boldRows})}}^{A}\r\n        \\overbrace{${matrixToLatex(currentResult.finalOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n        if (!currentResult.interchange && currentResult.factor === 0) {\r\n            latexContent += String.raw`\r\n                \\\\ \\text{The factor is zero, so no elimination is done here.}\r\n                \\\\\r\n                \\\\ ${finalLatex}\r\n            `;\r\n        }\r\n        else {\r\n            const initialLatex = String.raw`\r\n            \\overbrace{${matrixToLatex(previousMatrix, {leftBracketOnly: true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(previousOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            const operationLatex = currentResult.interchange ?\r\n            String.raw`R_{${currentResult.row}} \\leftrightarrow R_{${currentResult.row2}}`\r\n            : String.raw`R_{${currentResult.row}} = R_{${currentResult.row}}-${formatMatrixLatex(currentResult.factor)}R_{${currentResult.pivot}}`;\r\n            if (smallScreen) {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                \\\\ \\begin{array}{lcl}\r\n                       & \\downarrow &\r\n                    \\\\ & ${operationLatex} &\r\n                    \\\\ & \\downarrow &\r\n                    \\end{array}\r\n                \\\\ ${finalLatex}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                & \\overrightarrow{${operationLatex}}\r\n                & ${finalLatex}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n    }\r\n    else {\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\text{Cannot do any elimination.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n            \\overbrace{${matrixToLatex(params.originalOutput, {single:true, rightBracketOnly:true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid xs item className=\"iteration-slider\">\r\n                    <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" width=\"70vw\">\r\n                            <Slider\r\n                                orientation=\"horizontal\"\r\n                                onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations<=0 ? 1 :params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                        </Box>\r\n                    </Slide>\r\n                </Grid>\r\n                <Grid xs item className=\"step-math\">\r\n                    <Slide direction=\"right\" triggerOnce>\r\n                        <Card className={styleClasses.card}>\r\n                            <CardContent className={styleClasses.cardContent}>\r\n                                <Typography variant=\"h6\">\r\n                                    Iteration {currentIteration}:\r\n                                </Typography>\r\n                                <TeX math={latexContent} block />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Slide>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearGauss;","import {formatMatrixLatex} from \"../../utils\";\r\nimport React from \"react\";\r\n\r\nexport class MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nexport default class WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns) => {\r\n    const newNum = numberOfColumns + 1;\r\n    return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 2, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}"],"sourceRoot":""}