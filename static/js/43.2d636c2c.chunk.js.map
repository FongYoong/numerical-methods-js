{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/methods/optimisation/Gradient.js","components/matrix_utils.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","fab","position","bottom","right","Steps","smallScreen","latexContent","params","styleClasses","useState","currentIteration","setCurrentIteration","results","variables","currentResult","iterations","String","raw","join","mathjsToLatex","functionNode","matrixToLatex","previousVector","forEach","v","index","derivNodes","formatLatex","derivResult","directionNodes","transformedFunction","simplifiedFunction","simplifiedFunctionDeriv","isFinite","rootT","initialRoot","errorThreshold","newtonIter","newVector","newFunctionResult","errorMagnitude","Container","className","Collapse","in","Alert","severity","Grid","direction","alignItems","justify","xs","item","triggerOnce","Box","id","width","Slider","orientation","onChangeCommitted","event","defaultValue","aria-labelledby","marks","min","max","valueLabelDisplay","Card","CardContent","Typography","variant","math","block","addStyles","OptiGradient","methodName","markdown","useEffect","document","useMediaQuery","useTheme","breakpoints","down","functionLatex","setFunctionLatex","functionText","setFunctionText","functionError","functionErrorText","Set","parse","traverse","node","path","parent","type","mathjsKeywords","includes","name","add","sort","columnWidth","widthPadding","heightPadding","initialMatrix17","vectorState","setVectorState","initialVector","columns","rows","addVariableToVector","variableName","variableValue","push","createNewColumn","colName","hasOwnProperty","setInitialRoot","initialRootError","initialRootErrorText","isNaN","setErrorThreshold","thresholdError","thresholdErrorText","setIterations","iterError","iterErrorText","Number","isInteger","hasError","solve","isValidMath","derivative","iter","gridTo2DArray","derivScope","element","evaluate","simplify","transform","isSymbolNode","simplifiedFunctionDeriv2","oldT","funcValue","t","derivValue","Math","abs","map","functionScope","norm","subtract","runTour","setRunTour","Header","Paper","duration","cascade","disabled","latex","onChange","mathField","mathquillDidMount","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","minColumnWidth","minWidth","rowHeight","minHeight","TextField","parseFloat","error","label","toString","helperText","parseInt","Divider","Tooltip","arrow","placement","Fab","aria-label","onClick","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","slice","MatrixElementEditor","props","ref","React","createRef","onInputChange","current","setState","this","column","key","onBlur","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","createNewRow","newRow","rowsArray","keys","Object","row","k","cloneArray","array","JSON","stringify","isDiagonallyDominant","matrix","diagonal","sum","j","numberFactorials","getBinomialCoefficient","nextPermutation","temp","generatePermutationMapping","original","mapping","alreadyCovered","single","leftBracketOnly","rightBracketOnly","boldRows","boldColumns","transpose","rowLength","colLength","isBold","b","formatMatrixLatex","isBoldRow","isBoldRowColumn","c","initialMatrix","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix18","initialMatrix19","initialMatrix20","initialMatrix21","initialMatrix22"],"mappings":"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","file":"static/js/43.2d636c2c.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import {isValidMath, mathjsToLatex, formatLatex, mathjsKeywords} from \"../../utils\";\r\nimport {initialMatrix17, generateGridCallback, createNewColumn, gridTo2DArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse, derivative, simplify, subtract, norm } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function with multiple variables. Variable names must contain only one alphabet, such as x, y, z etc.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".variables-display\",\r\n        title: \"Variables\",\r\n        content:\r\n        \"The variables of the function are displayed here.\",\r\n    },\r\n    {\r\n        target: \".vector-input\",\r\n        title: \"Initial Vector\",\r\n        content:\r\n        \"Specify the initial values of the variables here.\",\r\n    },\r\n    {\r\n        target: \".initialRoot-input\",\r\n        title: \"Initial Root Guess\",\r\n        content:\r\n            \"Specify the initial root guess when finding the root.\",\r\n    },\r\n    {\r\n        target: \".errorThreshold-input\",\r\n        title: \"Error Threshold\",\r\n        content:\r\n            \"Specify the minimum error threshold when finding the root.\",\r\n    },\r\n    {\r\n        target: \".iteration-input\",\r\n        title: \"Iterations\",\r\n        content:\r\n            \"Specify the number of iterations to apply the gradient method.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction OptiGradient({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n    // 2xy+2x-x^2-2y^2\r\n    // 2\\left(x+y\\right)^2 + \\left(x-y\\right)^2 + 3x + 2y\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`2\\left(x+y\\right)^2 + \\left(x-y\\right)^2 + 3x + 2y`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionNode;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    let variables = new Set(); // Unique set of variables\r\n    try {\r\n        functionNode = parse(functionText);\r\n        functionNode.traverse(function (node, path, parent) {\r\n            if (node.type === 'SymbolNode' && !mathjsKeywords.includes(node.name)) {\r\n                if (node.name.length > 1) {\r\n                    throw \"variableName\";\r\n                }\r\n                if (node.name === 't') {\r\n                    throw \"noTVariableName\";\r\n                }\r\n                variables.add(node.name);\r\n            }\r\n        });\r\n        variables = [...variables].sort(); // Alphabetical order\r\n    }\r\n    catch(e) {\r\n        functionError = true;\r\n        functionErrorText = e === \"variableName\" ? \"Variable names must contain only one alphabet! x, y, z etc\" :  \"Invalid equation!\";\r\n        functionErrorText = e === \"noTVariableName\" ? \"Variable name t is not allowed!\": functionErrorText;\r\n    }\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    \r\n    let [vectorState, setVectorState] = useState(initialMatrix17);\r\n\r\n    let initialVector = { columns:[], rows:[{}] };\r\n    const addVariableToVector = (variableName, variableValue) => {\r\n        const columns = initialVector.columns;\r\n        const rows = initialVector.rows;\r\n        columns.push(createNewColumn(columns.length, variableName));\r\n        let colName = `col_${columns.length}`;\r\n        rows[0][colName] = vectorState.rows[0].hasOwnProperty(colName) ?  vectorState.rows[0][colName] : variableValue;\r\n    }\r\n    for (let v of variables) {\r\n        addVariableToVector(v, 0);\r\n    }\r\n    vectorState = initialVector;\r\n\r\n    // Initial Root\r\n    const [initialRoot, setInitialRoot] = useState(0.1);\r\n    let initialRootError = false;\r\n    let initialRootErrorText = \"\";\r\n    if (isNaN(initialRoot)) {\r\n        initialRootError = true;\r\n        initialRootErrorText = \"Initial root guess must be a valid number!\";\r\n    }\r\n\r\n    // Error threshold\r\n    const [errorThreshold, setErrorThreshold] = useState(0.005);\r\n    let thresholdError = false;\r\n    let thresholdErrorText = \"\";\r\n    if (errorThreshold < 0 || isNaN(errorThreshold)) {\r\n        thresholdError = true;\r\n        thresholdErrorText = \"Threshold cannot be negative or zero!\";\r\n    }\r\n\r\n    // Iterations\r\n    const [iterations, setIterations] = useState(5);\r\n    let iterError = false;\r\n    let iterErrorText = \"\";\r\n    if (!Number.isInteger(iterations) || iterations <= 0) {\r\n        iterError = true;\r\n        iterErrorText = \"Iterations must be a positive integer!\";\r\n    }\r\n\r\n    let hasError = functionError || initialRootError || thresholdError || iterError;\r\n\r\n    // Solve\r\n    let solve = false;\r\n    let derivNodes = {};\r\n    let results = [];\r\n\r\n    if (isValidMath(functionNode) && !hasError && variables.length > 0) {\r\n        solve = true;\r\n        for (let v of variables) {\r\n            derivNodes[v] = derivative(functionText, v);\r\n        }\r\n        for (let iter = 0; iter < iterations; iter++) {\r\n            const previousVector = (iter === 0) ? gridTo2DArray(vectorState.rows)[0]: results[iter - 1].newVector;\r\n            let derivScope = {};\r\n            variables.forEach((element, index) => {\r\n                derivScope[element] = previousVector[index];\r\n            });\r\n            let derivResult = [];\r\n            for (let v of variables) {\r\n                derivResult.push(derivNodes[v].evaluate(derivScope));\r\n            }\r\n            let directionNodes = {};\r\n            variables.forEach((element, index) => {\r\n                directionNodes[element] = simplify(parse(String.raw`${previousVector[index]} + t*(${derivResult[index]})`));\r\n            });\r\n            const transformedFunction = functionNode.transform(function (node, path, parent) {\r\n                if (node.isSymbolNode && !mathjsKeywords.includes(node.name)) {\r\n                    return directionNodes[node.name];\r\n                }\r\n                else {\r\n                    return node;\r\n                }\r\n            });\r\n            const simplifiedFunction = simplify(transformedFunction);\r\n            const simplifiedFunctionDeriv = derivative(simplifiedFunction, 't');\r\n            const simplifiedFunctionDeriv2 = derivative(simplifiedFunctionDeriv, 't');\r\n            let rootT = initialRoot;\r\n            let newtonIter = 1;\r\n            while(true) {\r\n                const oldT = rootT;\r\n                const funcValue = simplifiedFunctionDeriv.evaluate({t: rootT});\r\n                const derivValue = simplifiedFunctionDeriv2.evaluate({t: rootT});\r\n                rootT = rootT - funcValue / derivValue;\r\n                if (!isFinite(rootT)) {\r\n                    break;\r\n                }\r\n                let errorX = Math.abs(rootT - oldT);\r\n                if (errorX < errorThreshold || newtonIter > 50) {\r\n                    break;\r\n                }\r\n                newtonIter++;\r\n            }\r\n            const newVector = variables.map((element, index) => {\r\n                return directionNodes[element].evaluate({t: rootT});\r\n            });\r\n            let functionScope = {};\r\n            variables.forEach((element, index) => {\r\n                functionScope[element] = newVector[index];\r\n            });\r\n            const newFunctionResult = functionNode.evaluate(functionScope)\r\n            const errorMagnitude = norm(subtract(newVector, previousVector), 2);\r\n            results.push({\r\n                previousVector,\r\n                derivResult,\r\n                directionNodes,\r\n                transformedFunction,\r\n                simplifiedFunction,\r\n                simplifiedFunctionDeriv,\r\n                newtonIter,\r\n                rootT,\r\n                newVector,\r\n                newFunctionResult,\r\n                errorMagnitude,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true);\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {functionNode, variables, derivNodes, initialRoot, errorThreshold, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown}/>\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                    Supports as many variables as possible (x, y, z, a, b, c etc).\r\n                    <br/>\r\n                    However, the more variables, the longer the computation time.\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                        }}\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"variables-display\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Variables:\r\n                                    </Typography>\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                    <Collapse in={!functionError}>\r\n                                        {!functionError && <Fade triggerOnce>\r\n                                            <Typography variant=\"h6\">\r\n                                                {[...variables].join(', ')}\r\n                                            </Typography>\r\n                                        </Fade>}\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"vector-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Grid xs item>\r\n                                <Typography variant=\"h6\">\r\n                                    Initial Point, <TeX math={String.raw`X^{(0)}`} />:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid key={1} item className={styleClasses.overflow}>\r\n                                    <ReactDataGrid\r\n                                        columns={vectorState.columns}\r\n                                        rowGetter={i => vectorState.rows[i]}\r\n                                        rowsCount={vectorState.rows.length}\r\n                                        onGridRowsUpdated={generateGridCallback(vectorState, setVectorState)}\r\n                                        enableCellSelect={true}\r\n                                        minColumnWidth={columnWidth}\r\n                                        minWidth={columnWidth * vectorState.columns.length + widthPadding}\r\n                                        rowHeight={rowHeight}\r\n                                        minHeight={rowHeight * (vectorState.rows.length + 1) + heightPadding}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"initialRoot-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial root guess, <TeX math={String.raw`t_0`} />:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialRoot(parseFloat(event.target.value))}\r\n                                        error={initialRootError}\r\n                                        label={initialRootError?\"Error\":\"\"}\r\n                                        defaultValue={initialRoot.toString()}\r\n                                        helperText={initialRootErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"errorThreshold-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Error threshold for finding <TeX math={String.raw`t^*`} />:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setErrorThreshold(parseFloat(event.target.value))}\r\n                                        error={thresholdError}\r\n                                        label={thresholdError?\"Error\":\"\"}\r\n                                        defaultValue={errorThreshold.toString()}\r\n                                        helperText={thresholdErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid xs item className=\"iteration-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iterations of gradient method:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setIterations(parseInt(event.target.value))}\r\n                                        error={iterError}\r\n                                        label={iterError?\"Error\":\"\"}\r\n                                        defaultValue={iterations.toString()}\r\n                                        helperText={iterErrorText}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n\r\n    let hasError = false;\r\n    let errorText = \"\";\r\n\r\n    const results = params.results;\r\n    const variables = params.variables;\r\n    const currentResult = results[currentIteration - 1];\r\n\r\n    let latexContent;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        \r\n        latexContent =\r\n        String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}\r\n        \\\\ f(${variables.join(\",\")}) = ${mathjsToLatex(params.functionNode)}\r\n        \\\\\r\n        \\\\ X^{(${currentIteration - 1})} = ${matrixToLatex([currentResult.previousVector])}\r\n        \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}`;\r\n\r\n        variables.forEach((v, index) => {\r\n            latexContent += String.raw`\r\n            \\\\ f_${v} &=& ${mathjsToLatex(params.derivNodes[v])}\r\n            \\\\ f_${v}(X^{(${currentIteration - 1})}) &=& ${formatLatex(currentResult.derivResult[index])}\r\n            \\\\ \r\n            `;\r\n        });\r\n\r\n        latexContent += String.raw`\r\n        \\\\ \\nabla f &=& ${matrixToLatex([currentResult.derivResult])}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ X^{(${currentIteration})} &=& X^{(${currentIteration - 1})} + t \\cdot \\nabla f\r\n        \\\\\r\n        \\\\                           &=& ${matrixToLatex([currentResult.previousVector])} + t \\cdot ${matrixToLatex([currentResult.derivResult])}\r\n        \\\\\r\n        \\\\                           &=& \\left[\\begin{matrix}\r\n        `;\r\n        variables.forEach((v, index) => {\r\n            latexContent += String.raw`\r\n            ${mathjsToLatex(currentResult.directionNodes[v])}\r\n            `;\r\n            if (index !== variables.length - 1) {\r\n                latexContent += ',&';\r\n            }\r\n        });\r\n        latexContent += String.raw`\r\n        \\end{matrix}\\right]\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ f(X^{(${currentIteration})}) &=& ${mathjsToLatex(currentResult.transformedFunction)}\r\n        \\\\\r\n        \\\\                              &=& ${mathjsToLatex(currentResult.simplifiedFunction)}\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        \\\\ \\hline\r\n        \\begin{array}{lcl}\r\n        \\\\ \\frac{df(X^{(${currentIteration})})}{dt} = 0\r\n        \\\\\r\n        \\\\ ${mathjsToLatex(currentResult.simplifiedFunctionDeriv)} &=& 0\r\n        \\\\ \\end{array}\r\n        \\\\\r\n        `\r\n        if (!isFinite(currentResult.rootT)) {\r\n            latexContent += String.raw`\r\n            \\\\ \\text{Given that }\\frac{df(X^{(${currentIteration})})}{dt} = 0 \\text{ has no roots, the gradient method cannot proceed.}\r\n            `;\r\n        }\r\n        else {    \r\n            latexContent += String.raw`\r\n            \\\\ \\text{Using the Newton-Rhapson method}\r\n            \\\\ \\text{with initial guess } t_0 = ${params.initialRoot}\r\n            \\\\ \\text{and error threshold of ${params.errorThreshold},}\r\n            \\\\ \\text{the solution to } \\frac{df(X^{(${currentIteration})})}{dt} = 0 \\text{ after ${currentResult.newtonIter} iterations is:}\r\n            \\\\\r\n            \\\\ t^* = ${formatLatex(currentResult.rootT)}\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\begin{array}{lcl}\r\n            \\\\ X^{(${currentIteration})} &=& X^{(${currentIteration - 1})} + t^* \\cdot \\nabla f\r\n            \\\\\r\n            \\\\                           &=& ${matrixToLatex([currentResult.previousVector])} + ${formatLatex(currentResult.rootT)} \\cdot ${matrixToLatex([currentResult.derivResult])}\r\n            \\\\\r\n            \\\\                           &=& ${matrixToLatex([currentResult.newVector])}\r\n            \\\\\r\n            \\\\ f(X^{(${currentIteration})}) &=& ${formatLatex(currentResult.newFunctionResult)}\r\n            \\\\\r\n            \\end{array}\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\begin{array}{lcl}\r\n            \\\\ Error &=& \\lVert X^{(${currentIteration})} - X^{(${currentIteration - 1})} \\rVert\r\n            \\\\       &=& \\lVert ${matrixToLatex([currentResult.newVector])} - ${matrixToLatex([currentResult.previousVector])} \\rVert\r\n            \\\\       &=& ${formatLatex(currentResult.errorMagnitude)}\r\n            \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\r\n        \\end{array}\r\n        `\r\n    }\r\n    return (\r\n        <Container className={styleClasses.container}>\r\n\r\n            <Collapse in={hasError}>\r\n                <Alert severity=\"error\">\r\n                    {errorText}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={!hasError}>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                    <Grid xs item className=\"iteration-slider\">\r\n                        <Slide direction=\"left\" triggerOnce>\r\n                            <Box id=\"iteration-slider\" width=\"70vw\">\r\n                                <Slider\r\n                                    orientation=\"horizontal\"\r\n                                    onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider-small-steps\"\r\n                                    step={1}\r\n                                    marks\r\n                                    min={1}\r\n                                    max={params.iterations}\r\n                                    valueLabelDisplay=\"on\"\r\n                                />\r\n                            </Box>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Grid xs item className=\"step-math\">\r\n                        <Slide direction=\"right\" triggerOnce>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Iteration {currentIteration}:\r\n                                    </Typography>\r\n                                    <TeX math={latexContent} block />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Collapse>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OptiGradient;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 5, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix18 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix19 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix20 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n        { key: \"col_3\", name: \"u\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: 2},\r\n    ]\r\n}\r\nexport const initialMatrix21 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 2},\r\n    ]\r\n}\r\nexport const initialMatrix22 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 5},\r\n    ]\r\n}"],"sourceRoot":""}