{"version":3,"sources":["components/methods/linear/Inverse.js","components/matrix_utils.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","position","bottom","right","Steps","smallScreen","latexContent","params","styleClasses","useState","currentIteration","setCurrentIteration","iterations","currentResult","results","String","raw","matrixToLatex","lowerMatrix","identityColumn","single","dError","d","upperMatrix","xError","x","inverseMatrix","originalMatrix","multiply","className","direction","alignItems","justify","xs","item","triggerOnce","id","orientation","onChangeCommitted","event","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","variant","math","block","LinearInverse","methodName","markdown","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","sizeCallback","add","columns","slice","rows","push","createNewColumn","length","createNewRow","i","pop","gridTo2DArray","matrixSize","lupResult","lup","L","U","permutation","p","identityMatrix","identity","inverseError","iter","getColumn","toArray","lsolve","map","v","usolve","transpose","runTour","setRunTour","duration","cascade","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","in","arrow","placement","aria-label","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","props","ref","React","createRef","onInputChange","current","parseFloat","isNaN","setState","this","column","key","onBlur","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","name","newRow","rowsArray","keys","Object","sort","row","k","cloneArray","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","j","Math","abs","numberFactorials","getBinomialCoefficient","n","nextPermutation","temp","generatePermutationMapping","original","Array","mapping","alreadyCovered","includes","latex","leftBracketOnly","rightBracketOnly","boldRows","boldColumns","rowLength","colLength","isBold","b","formatMatrixLatex","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialOutputColumn","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix17","initialMatrix18","initialMatrix19","initialMatrix20","initialMatrix21","initialMatrix22"],"mappings":"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","file":"static/js/38.db66d5c7.chunk.js","sourcesContent":["import {formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix4 as initialMatrix, generateGridCallback, createNewColumn, createNewRow, gridTo2DArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport { identity, column as getColumn, lup, usolve, lsolve, multiply, transpose } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-size-input\",\r\n        title: \"Size\",\r\n        content:\r\n        \"Increase/Reduce the matrix's size\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearInverse({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const sizeCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    let solve = true;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    const matrixSize = gridState.rows.length;\r\n    let iterations = matrixSize;\r\n    const lupResult = lup(originalMatrix);\r\n    let lowerMatrix = lupResult.L;\r\n    let upperMatrix = lupResult.U;\r\n    let permutation = lupResult.p;\r\n    let identityMatrix = identity(matrixSize);\r\n    let inverseMatrix = [];\r\n    let results = [];\r\n    let inverseError = false;\r\n    for (let iter  = 0; iter < iterations; iter++) {\r\n        let identityColumn = getColumn(identityMatrix, iter).toArray();\r\n        let d, dError = false, x, xError = false;\r\n        try {\r\n            d = lsolve(lowerMatrix, identityColumn).map((v) => v[0]);\r\n        }\r\n        catch {\r\n            dError = true;\r\n        }\r\n        try {\r\n            x = usolve(upperMatrix, d).map((v) => v[0]);\r\n        }\r\n        catch {\r\n            xError = true;\r\n        }\r\n        inverseMatrix.push(x);\r\n        results.push({\r\n            identityColumn,\r\n            d,\r\n            dError,\r\n            x,\r\n            xError,\r\n        });\r\n        if (dError || xError) {\r\n            inverseError = true;\r\n            iterations = iter + 1;\r\n            break;\r\n        }\r\n    }\r\n    if (!inverseError) {\r\n        inverseMatrix = transpose(inverseMatrix);\r\n        inverseMatrix = permutation.map(i => inverseMatrix[i]);\r\n    }\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, matrixSize, lowerMatrix, upperMatrix, iterations, results, inverseMatrix};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        \r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-size-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"h6\">\r\n                                                Size:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={sizeCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let latexContent;\r\n\r\n    if (currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else {\r\n        let results = params.results;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\begin{array}{lcl}`;\r\n        if (currentIteration === 1) {\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\\\ \\text{After LU decomposition,}\r\n            \\\\ \\begin{array}{lcl}\r\n            \\\\ A &=& L U\r\n            \\\\\r\n            \\\\   &=& ${matrixToLatex(params.lowerMatrix)} ${matrixToLatex(params.lowerMatrix)}\r\n            \\end{array}\r\n            \\\\\r\n            \\\\ \\hline\r\n            `\r\n        }\r\n        latexContent += String.raw`\r\n        \\\\ I_{${currentIteration}} = ${matrixToLatex(currentResult.identityColumn, {single: true})}\r\n        \\\\\r\n        \\\\ \\text{Using backsubstitution,}\r\n        \\\\ \\begin{array}{rcl}\r\n         L d &=& I_{${currentIteration}}\r\n        \\\\\r\n        \\\\ ${matrixToLatex(params.lowerMatrix)} d &=& ${matrixToLatex(currentResult.identityColumn, {single: true})}\r\n        \\\\`\r\n        if (!currentResult.dError) {\r\n            latexContent += String.raw`\r\n            \\\\ d &=& ${matrixToLatex(currentResult.d, {single: true})}\r\n            \\\\ \\end{array}\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\\\ \\text{Using backsubstitution again,}\r\n            \\\\ \\begin{array}{rcl}\r\n            U x &=& d\r\n            \\\\\r\n            \\\\ ${matrixToLatex(params.upperMatrix)} x &=& ${matrixToLatex(currentResult.d, {single: true})}\r\n            \\\\\r\n            `;\r\n            if (!currentResult.xError) {\r\n                latexContent += String.raw`\r\n                \\\\ x &=& ${matrixToLatex(currentResult.x, {single: true})}\r\n                \\\\ \\end{array}\r\n                \\\\\r\n                \\\\ \\hline\r\n                \\\\ A^{-1}_{${currentIteration}} = x = ${matrixToLatex(currentResult.x, {single: true})}\r\n\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ \\end{array}\r\n                \\\\ \\text{Given that x cannot be solved,}\r\n                \\\\ \\text{an inverse does not exist.}\r\n                \\\\\r\n                `;\r\n            }\r\n        }\r\n        else {\r\n            latexContent += String.raw`\r\n            \\\\ \\end{array}\r\n            \\\\ \\text{Given that d cannot be solved,}\r\n            \\\\ \\text{an inverse does not exist.}\r\n            \\\\\r\n            `;\r\n        }\r\n        \r\n        if (currentIteration === params.iterations && !currentResult.dError && !currentResult.xError) {\r\n            latexContent += String.raw`\r\n            \\\\\r\n            \\\\ \\hline\r\n            \\\\\r\n            \\\\ Inverse, A^{-1} = ${matrixToLatex(params.inverseMatrix)}\r\n            \\\\\r\n            \\\\ \\text{To verify the answer,}\r\n            \\\\ \\begin{array}{lcl}\r\n            \\\\ A A^{-1} &=& ${matrixToLatex(params.originalMatrix)} ${matrixToLatex(params.inverseMatrix)}\r\n            \\\\\r\n            \\\\                           &=& ${matrixToLatex(multiply(params.originalMatrix, params.inverseMatrix))}\r\n            \\\\\r\n            \\\\                           &=&  \\text{Identity Matrix}\r\n            \\\\ \\end{array}\r\n            \\\\\r\n            \\\\\r\n            `\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid xs item className=\"iteration-slider\">\r\n                    <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" width=\"70vw\">\r\n                            <Slider\r\n                                orientation=\"horizontal\"\r\n                                onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations<=0 ? 1 :params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                        </Box>\r\n                    </Slide>\r\n                </Grid>\r\n                <Grid xs item className=\"step-math\">\r\n                    <Slide direction=\"right\" triggerOnce>\r\n                        <Card className={styleClasses.card}>\r\n                            <CardContent className={styleClasses.cardContent}>\r\n                                <Typography variant=\"h6\">\r\n                                    Iteration {currentIteration}:\r\n                                </Typography>\r\n                                <TeX math={latexContent} block />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Slide>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearInverse;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 5, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix18 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix19 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix20 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n        { key: \"col_3\", name: \"u\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: 2},\r\n    ]\r\n}\r\nexport const initialMatrix21 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 2},\r\n    ]\r\n}\r\nexport const initialMatrix22 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 5},\r\n    ]\r\n}"],"sourceRoot":""}