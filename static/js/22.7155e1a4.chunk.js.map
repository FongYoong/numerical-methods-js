{"version":3,"sources":["components/methods/differential/Finite.js","components/Graph.js"],"names":["TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","margin","container","card","cardContent","overflow","fab","position","bottom","right","addStyles","DiffFinite","methodName","useEffect","document","functionValue","styleClasses","smallScreen","useMediaQuery","useTheme","breakpoints","down","useState","String","raw","functionLatex","setFunctionLatex","functionText","setFunctionText","functionError","functionErrorText","parse","hasError","initialX","setInitialX","solve","isValidMath","runTour","setRunTour","className","duration","triggerOnce","cascade","direction","alignItems","justify","xs","item","variant","disabled","latex","onChange","mathField","mathquillDidMount","in","severity","math","type","event","parseFloat","value","label","defaultValue","toString","latexContent","block","params","Iterations","graphCallback","calculator","currentResult","arrow","placement","aria-label","onClick","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","DialogTitle","withStyles","root","closeButton","top","grey","props","children","classes","onClose","other","disableTypography","DialogContent","currentIteration","setCurrentIteration","defaultIteration","iterations","results","desmosDiv","useRef","updateGraph","useCallback","current","style","width","height","Desmos","keypad","expressions","expressionsTopbar","component","mathjsToLatex","orientation","aria-labelledby","step","marks","min","max","valueLabelDisplay","ref","Graph","openDialog","setOpenDialog","handleClose","endIcon","scroll","maxWidth","fullScreen","open","id","dividers"],"mappings":"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","file":"static/js/22.7155e1a4.chunk.js","sourcesContent":["import {isValidMath, mathjsToLatex, formatLatex} from \"../../utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\nimport Graph from \"../../Graph\";\r\nimport * as Desmos from 'desmos';\r\n\r\nimport { addStyles, EditableMathField } from 'react-mathquill';\r\nimport { parse, derivative } from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".function-input\",\r\n        title: \"Function\",\r\n        content:\r\n        \"Type a math function which only has the variable x. cos(x), sin(x) and e^x are supported.\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".initialX-input\",\r\n        title: \"Initial x value\",\r\n        content:\r\n            \"Specify the initial/starting value of x.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps for each iteration are shown here.\",\r\n    },\r\n    {\r\n        target: \".graph-button\",\r\n        title: \"View graph\",\r\n        content:\r\n            \"Click this to visualise the results.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.primary,\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    \"& > *\": {\r\n        margin: theme.spacing(1)\r\n    }\r\n  },\r\n  card: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  cardContent: {\r\n    overflow: 'auto',\r\n    \"& > *\": {\r\n        margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\naddStyles(); // inserts the required css to the <head> block for mathquill\r\n\r\nfunction DiffFinite({methodName}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Derivative\r\n    // Another sample would be: `3x^2+2x-8`\r\n    const [functionLatex, setFunctionLatex] = useState(String.raw`x-\\cos\\left( x\\right)`);\r\n    const [functionText, setFunctionText] = useState('');\r\n\r\n    let functionValue, derivValue, derivLatex;\r\n    let functionError = false;\r\n    let functionErrorText = \"\";\r\n    try {\r\n        functionValue = parse(functionText);\r\n    }\r\n    catch {\r\n        functionError = true;\r\n        functionErrorText = \"Invalid equation!\";\r\n    }\r\n\r\n   \r\n    let hasError = functionError;\r\n\r\n    // Initial x\r\n    const [initialX, setInitialX] = useState(0.0);\r\n\r\n    // Solve\r\n    let solve = false;\r\n    if (isValidMath(functionValue) && !hasError) {\r\n        solve = true;\r\n        \r\n    }\r\n    let latexContent;\r\n\r\n    let graphCallback = (calculator, currentResult) => {\r\n\r\n    }\r\n\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true);\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName = {methodName} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"function-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Function:\r\n                                    </Typography>\r\n                                    <EditableMathField\r\n                                        disabled={false}\r\n                                        latex={functionLatex}\r\n                                        onChange={(mathField) => {\r\n                                            setFunctionText(mathField.text());\r\n                                            setFunctionLatex(mathField.latex());\r\n                                        }}\r\n                                        mathquillDidMount={(mathField) => {\r\n                                            setFunctionText(mathField.text())\r\n                                        }}\r\n                                    />\r\n                                    <Collapse in={functionError}>\r\n                                        <Alert severity=\"error\">\r\n                                            {functionErrorText}\r\n                                        </Alert>\r\n                                    </Collapse>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item className=\"initialX-input\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Initial value, <TeX math={String.raw`x_0`} />:\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        disabled={false}\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setInitialX(parseFloat(event.target.value))}\r\n                                        label={\"\"}\r\n                                        defaultValue={initialX.toString()}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve &&\r\n                        <Container className={styleClasses.container}>\r\n                            <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid xs item className=\"step-math\">\r\n                                    <Slide direction=\"left\" triggerOnce>\r\n                                        <Card className={styleClasses.card}>\r\n                                            <CardContent className={styleClasses.cardContent}>\r\n                                                <TeX math={latexContent} block />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Slide>\r\n                                </Grid>\r\n                                <Grid xs item className=\"graph-button\">\r\n                                    <Slide direction=\"right\" triggerOnce>\r\n                                        <Graph params={{Iterations: 0, graphCallback, smallScreen}} />\r\n                                    </Slide>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                        }\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiffFinite;","import {mathjsToLatex} from \"./utils\";\r\nimport {React, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\nimport * as Desmos from 'desmos';\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst styleClasses = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styleClasses)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent =  withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))((props) => {\r\n    const params = props.params;\r\n    const [currentIteration, setCurrentIteration] = useState(params.currentIteration);\r\n    const defaultIteration = params.currentIteration;\r\n    const currentResult = params.iterations > 0 ? params.results[currentIteration - 1] : null;\r\n    const desmosDiv = useRef(null);\r\n    const calculator = useRef(null);\r\n\r\n    const updateGraph = useCallback(() => {\r\n        if (calculator.current){\r\n            params.graphCallback(calculator, currentResult);\r\n        }\r\n    }, [calculator, currentResult, params]);\r\n    updateGraph();\r\n\r\n    useEffect(() => {\r\n        if (desmosDiv.current){\r\n            const smallScreen = props.smallScreen;\r\n            desmosDiv.current.style.width = smallScreen?'90vw':'60vw';\r\n            desmosDiv.current.style.height = smallScreen?'90vh':'60vh';\r\n            const desmosOptions = {\r\n                keypad: false,\r\n                expressions: false,\r\n                expressionsTopbar: false,\r\n            };\r\n            calculator.current = Desmos.GraphingCalculator(desmosDiv.current, desmosOptions);\r\n            updateGraph();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        \r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            {params.functionValue && <Box component=\"div\" overflow=\"visible\">\r\n                    <TeX math={`${mathjsToLatex(params.functionValue)}`} block />\r\n                </Box>\r\n            }\r\n            <Typography variant=\"h6\">\r\n                {params.iterations > 0 ? `Iteration ${currentIteration}:` : <br />}\r\n            </Typography>\r\n            {params.iterations > 0 &&\r\n                <Box width=\"70%\">\r\n                    <Slider\r\n                        orientation=\"horizontal\"\r\n                        onChange={(event, value) => setCurrentIteration(value)}\r\n                        defaultValue={defaultIteration}\r\n                        aria-labelledby=\"discrete-slider-small-steps\"\r\n                        step={1}\r\n                        marks\r\n                        min={1}\r\n                        max={params.iterations}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </Box>\r\n            }\r\n            <Grid item>\r\n                <div ref={desmosDiv}>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\nfunction Graph({params, smallScreen}) {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDialog(true);\r\n    };\r\n      const handleClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" endIcon={<TimelineIcon/>} onClick={handleClickOpen}>\r\n                View Graph\r\n            </Button>\r\n            \r\n            <Dialog scroll='paper' maxWidth={false} fullScreen={smallScreen} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n                <Fade>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\r\n                    <DialogContent dividers smallScreen={smallScreen} params={params} />\r\n                </Fade>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Graph;"],"sourceRoot":""}