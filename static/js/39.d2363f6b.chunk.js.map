{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","components/methods/linear/Gauss.js","components/matrix_utils.js"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","TOUR_STEPS","target","title","content","disableBeacon","useStyles","makeStyles","theme","paper","spacing","textAlign","palette","text","primary","container","card","cardContent","overflow","matrixCard","width","divider","height","marginTop","marginBottom","fab","bottom","right","Steps","latexContent","smallScreen","params","styleClasses","useState","currentIteration","setCurrentIteration","iterations","results","previousMatrix","originalMatrix","finalMatrix","previousOutput","originalOutput","finalOutput","currentResult","String","raw","interchange","row","pivot","formatLatex","factor","boldRows","row2","finalLatex","matrixToLatex","leftBracketOnly","single","rightBracketOnly","initialLatex","operationLatex","formatMatrixLatex","Container","Grid","direction","alignItems","justify","xs","item","triggerOnce","Box","id","Slider","orientation","onChangeCommitted","value","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","Card","CardContent","math","block","LinearGauss","methodName","markdown","useEffect","document","useMediaQuery","useTheme","breakpoints","down","columnWidth","widthPadding","heightPadding","initialMatrix","gridState","setGridState","initialOutputColumn","outputColumnState","setOutputColumnState","columnCallback","add","columns","slice","rows","push","createNewColumn","length","i","pop","rowCallback","outputColumns","outputRows","createNewRow","gridTo2DArray","modifiedMatrix","cloneArray","modifiedOutput","rowLength","colLength","pivotLength","validPivot","tempMatrixRow","tempOutputElement","divisionByZero","isNaN","col","runTour","setRunTour","Header","Paper","duration","cascade","rel","href","aria-label","IconButton","onClick","rowGetter","rowsCount","onGridRowsUpdated","generateGridCallback","enableCellSelect","headerRowHeight","minColumnWidth","minWidth","rowHeight","minHeight","Divider","Collapse","in","Tooltip","arrow","placement","Fab","scrollToFirstStep","run","steps","continuous","showSkipButton","locale","last","callback","state","action","stateSetter","fromRow","toRow","updated","MatrixElementEditor","createRef","onInputChange","current","parseFloat","setState","this","column","key","onChange","Component","style","display","justifyContent","flexDirection","columnSettings","editable","editor","formatter","numberOfColumns","customName","newNum","newRow","rowsArray","keys","Object","sort","map","k","array","JSON","parse","stringify","isDiagonallyDominant","matrix","diagonal","sum","j","Math","abs","numberFactorials","getBinomialCoefficient","n","nextPermutation","temp","generatePermutationMapping","original","Array","mapping","alreadyCovered","includes","latex","boldColumns","transpose","isBold","b","isBoldRow","isBoldRowColumn","c","col_1","col_2","col_3","col_4","initialMatrix3","initialInputColumn3","initialOutputColumn3","initialMatrix4","initialMatrix6","initialMatrix12","initialInputColumn12","initialMatrix13","initialInputColumn13","initialMatrix14","initialInputColumn14","initialMatrix15","initialMatrix17","initialMatrix18","initialMatrix19","initialMatrix20","initialMatrix21","initialMatrix22"],"mappings":"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","file":"static/js/39.d2363f6b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import {formatLatex, formatMatrixLatex} from \"../../utils\";\r\nimport {initialMatrix, initialOutputColumn, generateGridCallback, createNewColumn, createNewRow, gridTo2DArray, cloneArray, matrixToLatex} from \"../../matrix_utils\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Header from \"../../header/Header\";\r\n\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Joyride, { Step as JoyrideStep, CallBackProps as JoyrideCallBackProps} from \"react-joyride\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { Fade, Zoom, Slide } from \"react-awesome-reveal\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst TOUR_STEPS: JoyrideStep[] = [\r\n    {\r\n        target: \".matrix-col-input\",\r\n        title: \"Column\",\r\n        content:\r\n        \"Add/Remove columns\",\r\n        disableBeacon: true,\r\n    },\r\n    {\r\n        target: \".matrix-row-input\",\r\n        title: \"Row\",\r\n        content:\r\n        \"Add/Remove rows\",\r\n    },\r\n    {\r\n        target: \".matrix-input\",\r\n        title: \"Matrix\",\r\n        content:\r\n        \"Specify the matrix here.\",\r\n    },\r\n    {\r\n        target: \".output-col-input\",\r\n        title: \"Output\",\r\n        content:\r\n        \"Specify the output vector.\",\r\n    },\r\n    {\r\n        target: \".step-math\",\r\n        title: \"Steps\",\r\n        content:\r\n            \"The steps are shown here.\",\r\n    },\r\n    {\r\n        target: \".iteration-slider\",\r\n        title: \"Iteration slider\",\r\n        content:\r\n            \"Change the slider to view the result of any iteration.\",\r\n    },\r\n];\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0.5),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    card: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    cardContent: {\r\n        overflow: 'auto',\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    },\r\n    overflow: {\r\n        overflow: 'auto',\r\n    },\r\n    matrixCard: {\r\n        width: \"60vw\",\r\n    },\r\n    divider: {\r\n        width: '500 px',\r\n        height: '100px',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction LinearGauss({methodName, markdown}) {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = methodName;\r\n        \r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    // Grid\r\n    const columnWidth = smallScreen ? 45 : 60;\r\n    const rowHeight = smallScreen ? 35 : 35;\r\n    const widthPadding = smallScreen ? 10 : 100;\r\n    const heightPadding = smallScreen ? 5 : 20;\r\n    const [gridState, setGridState] = useState(initialMatrix);\r\n    const [outputColumnState, setOutputColumnState] = useState(initialOutputColumn);\r\n    /*\r\n    const onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n        const rows = gridState.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        setGridState({\r\n            ...gridState, rows\r\n        });\r\n    };\r\n    const onOutputColumnStateUpdated = ({ fromRow, toRow, updated }) => {\r\n        const rows = outputColumnState.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        setOutputColumnState({\r\n            ...outputColumnState, rows\r\n        });\r\n    };\r\n    */\r\n    const columnCallback = (add) => {\r\n        return () => {\r\n            const columns = gridState.columns.slice();\r\n            const rows = gridState.rows.slice();\r\n            if (add) {\r\n                columns.push(createNewColumn(columns.length));\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    rows[i][`col_${columns.length}`] = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (columns.length === 2) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    delete rows[i][`col_${columns.length}`];\r\n                }\r\n                columns.pop();\r\n            }\r\n            setGridState({columns, rows});\r\n        };\r\n    }\r\n    const rowCallback = (add) => {\r\n        return () => {\r\n            const rows = gridState.rows.slice();\r\n            const outputColumns = outputColumnState.columns.slice();\r\n            const outputRows = outputColumnState.rows.slice();\r\n            if (add) {\r\n                rows.push(createNewRow(gridState.columns.length));\r\n                outputColumns.push(createNewColumn(outputColumns.length));\r\n                outputRows[0][`col_${outputColumns.length}`] = 0;\r\n            }\r\n            else {\r\n                if (rows.length === 2) {\r\n                    return;\r\n                }\r\n                rows.pop();\r\n                for (let i = 0; i < outputRows.length; i++) {\r\n                    delete outputRows[i][`col_${outputColumns.length}`];\r\n                }\r\n                outputColumns.pop();\r\n            }\r\n            setGridState({...gridState, rows});\r\n            setOutputColumnState({columns: outputColumns, rows: outputRows});\r\n        };\r\n    }\r\n\r\n    // Solve\r\n    let solve = true;\r\n    const originalMatrix = gridTo2DArray(gridState.rows);\r\n    let modifiedMatrix = cloneArray(originalMatrix);\r\n    const originalOutput = gridTo2DArray(outputColumnState.rows)[0];\r\n    let modifiedOutput = cloneArray(originalOutput);\r\n    const rowLength = gridState.rows.length; // row dimension, also the output dimension\r\n    const colLength = gridState.columns.length; // column dimension\r\n    let results = [];\r\n    let pivotLength = rowLength;\r\n    \r\n    for (let pivot  = 0; pivot < pivotLength - 1; pivot++) {\r\n        let validPivot = true;\r\n        if (modifiedMatrix[pivot][pivot] === 0 ) {\r\n            validPivot = false;\r\n            for (let row2 = pivot + 1; row2 < pivotLength; row2++) {\r\n                if (modifiedMatrix[row2][pivot] !== 0) {\r\n                    let tempMatrixRow = modifiedMatrix[pivot];\r\n                    modifiedMatrix[pivot] = modifiedMatrix[row2];\r\n                    modifiedMatrix[row2] = tempMatrixRow;\r\n                    let tempOutputElement = modifiedOutput[pivot];\r\n                    modifiedOutput[pivot] = modifiedOutput[row2];\r\n                    modifiedOutput[row2] = tempOutputElement;\r\n                    results.push({\r\n                        finalMatrix: cloneArray(modifiedMatrix),\r\n                        finalOutput: cloneArray(modifiedOutput),\r\n                        interchange: true,\r\n                        pivot: pivot + 1,\r\n                        row: pivot + 1,\r\n                        row2: row2 + 1,\r\n                    });\r\n                    validPivot = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (validPivot) {\r\n            for (let row  = pivot + 1; row < pivotLength; row++) {\r\n                let factor = modifiedMatrix[row][pivot] / modifiedMatrix[pivot][pivot];\r\n                let divisionByZero = false;\r\n                if (factor === 0) {\r\n                    divisionByZero = true;\r\n                }\r\n                else if (isNaN(factor)) {\r\n                    continue;\r\n                }\r\n                if (!divisionByZero) {\r\n                    for (let col  = 0; col < colLength; col++) {\r\n                        modifiedMatrix[row][col] -= factor * modifiedMatrix[pivot][col];\r\n                    }\r\n                    modifiedOutput[row] -= factor * modifiedOutput[pivot];\r\n                }\r\n                results.push({\r\n                    finalMatrix: cloneArray(modifiedMatrix),\r\n                    finalOutput: cloneArray(modifiedOutput),\r\n                    interchange: false,\r\n                    factor,\r\n                    pivot: pivot + 1,\r\n                    row: row + 1,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    let iterations = results.length;\r\n\r\n    // Joyride Tour\r\n    const [runTour, setRunTour] = useState(false);\r\n    const openHelp = () => {\r\n        setRunTour(true)\r\n    };\r\n    const joyrideCallback = (state: JoyrideCallBackProps) => {\r\n        if (state.action === \"reset\" || state.action === \"close\") {\r\n            setRunTour(false);\r\n        }\r\n    };\r\n\r\n    let params = {originalMatrix, originalOutput, rowLength, colLength, iterations, results};\r\n    \r\n    return (\r\n        <>\r\n            <Header methodName={methodName} markdown={markdown} />\r\n            <Paper className={styleClasses.paper}>\r\n                <Container className={styleClasses.container}>\r\n                <Zoom duration={500} triggerOnce cascade>\r\n                    <Typography variant=\"body1\">\r\n                        This method is applied to matrices in the form of\r\n                        <TeX math={String.raw`\\ Ax=B`} /> .\r\n                        <br/>\r\n                        <Link rel=\"noopener noreferrer\" href=\"https://people.richland.edu/james/lecture/m116/matrices/pivot.html\" target=\"_blank\" aria-label=\"Pivoting\">Pivoting</Link> is also implemented.\r\n                        <br/>\r\n                        No backsubstitution or Gauss-Jordan form due to&nbsp;\r\n                        <Link color=\"error\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/watch?v=vIci3C4JkL0\" target=\"_blank\" aria-label=\"laziness\">laziness</Link>.\r\n                    </Typography>\r\n                    <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                        <Grid xs item>\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                        <Grid xs item className=\"matrix-col-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Columns:\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(false)}>\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={columnCallback(true)}>\r\n                                                <AddCircleOutlineOutlinedIcon  />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-row-input\" container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                            <Typography variant=\"subtitle1\">\r\n                                                Rows:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Typography>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(false)} >\r\n                                                <RemoveCircleOutlineOutlinedIcon color=\"error\" />\r\n                                            </IconButton>\r\n                                            <IconButton variant=\"contained\" color=\"primary\" onClick={rowCallback(true)} >\r\n                                                <AddCircleOutlineOutlinedIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"matrix-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Matrix, A:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={0} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={gridState.columns}\r\n                                                        rowGetter={i => gridState.rows[i]}\r\n                                                        rowsCount={gridState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(gridState, setGridState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * gridState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * gridState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid xs item className=\"output-col-input\" container spacing={1} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                                            <Grid xs item>\r\n                                                <Typography variant=\"h6\">\r\n                                                    Output, B:\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid xs item container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                                <Grid key={1} item className={styleClasses.overflow}>\r\n                                                    <ReactDataGrid\r\n                                                        columns={outputColumnState.columns}\r\n                                                        rowGetter={i => outputColumnState.rows[i]}\r\n                                                        rowsCount={outputColumnState.rows.length}\r\n                                                        onGridRowsUpdated={generateGridCallback(outputColumnState, setOutputColumnState)}\r\n                                                        enableCellSelect={true}\r\n                                                        headerRowHeight={1}\r\n                                                        minColumnWidth={columnWidth}\r\n                                                        minWidth={columnWidth * outputColumnState.columns.length + widthPadding}\r\n                                                        rowHeight={rowHeight}\r\n                                                        minHeight={rowHeight * outputColumnState.rows.length + heightPadding}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Zoom>\r\n                </Container>\r\n            </Paper>\r\n\r\n            <Divider />\r\n            \r\n            <Collapse in={solve}>\r\n                <Fade triggerOnce>\r\n                    <Paper className={styleClasses.paper}>\r\n                        {solve && <Steps smallScreen={smallScreen} params={params}/>}\r\n                    </Paper>\r\n                </Fade>\r\n            </Collapse>\r\n            <Tooltip arrow title=\"Help\" placement=\"top\">\r\n                <Fab color=\"secondary\" aria-label=\"help\" className={styleClasses.fab} onClick={openHelp}>\r\n                    <HelpIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            <Joyride\r\n                scrollToFirstStep \r\n                run={runTour}\r\n                steps={TOUR_STEPS}\r\n                continuous={true}\r\n                showSkipButton={true}\r\n                    locale={{\r\n                    last: \"End tour\",\r\n                }}\r\n                callback={joyrideCallback}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Steps({smallScreen, params}) {\r\n\r\n    const styleClasses = useStyles();\r\n\r\n    const [currentIteration, setCurrentIteration] = useState(1);\r\n    let latexContent;\r\n\r\n    if (currentIteration <= 0) {\r\n        setCurrentIteration(1);\r\n    }\r\n    else if (params.iterations > 0 && currentIteration > params.iterations) {\r\n        setCurrentIteration(params.iterations);\r\n    }\r\n    else if (params.iterations >= 2 ) {\r\n        let results = params.results;\r\n        let previousMatrix = currentIteration===1 ? params.originalMatrix : results[currentIteration - 2].finalMatrix;\r\n        let previousOutput = currentIteration===1 ? params.originalOutput : results[currentIteration - 2].finalOutput;\r\n        let currentResult = results[currentIteration - 1];\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        `;\r\n        if (!currentResult.interchange) {\r\n            latexContent += String.raw`\r\n            \\begin{array}{lcl}\r\n            \\\\ Factor &=& \\frac{A_{${currentResult.row}${currentResult.pivot}}}{A_{${currentResult.pivot}${currentResult.pivot}}}\r\n            \\\\        &=& ${formatLatex(currentResult.factor)}\r\n            \\end{array}\r\n            `;\r\n        }\r\n        latexContent += String.raw`\\\\ \\begin{array}{lcl} `;\r\n        const boldRows = currentResult.interchange ? [currentResult.row, currentResult.row2] : [currentResult.row, currentResult.pivot];\r\n        const finalLatex= String.raw`\\overbrace{${matrixToLatex(currentResult.finalMatrix, {leftBracketOnly:true, boldRows: boldRows})}}^{A}\r\n        \\overbrace{${matrixToLatex(currentResult.finalOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n        if (!currentResult.interchange && currentResult.factor === 0) {\r\n            latexContent += String.raw`\r\n                \\\\ \\text{The factor is zero, so no elimination is done here.}\r\n                \\\\\r\n                \\\\ ${finalLatex}\r\n            `;\r\n        }\r\n        else {\r\n            const initialLatex = String.raw`\r\n            \\overbrace{${matrixToLatex(previousMatrix, {leftBracketOnly: true, boldRows: boldRows})}}^{A}\r\n            \\overbrace{${matrixToLatex(previousOutput, {single:true, rightBracketOnly:true, boldRows: boldRows})}}^{B}`;\r\n            const operationLatex = currentResult.interchange ?\r\n            String.raw`R_{${currentResult.row}} \\leftrightarrow R_{${currentResult.row2}}`\r\n            : String.raw`R_{${currentResult.row}} = R_{${currentResult.row}}-${formatMatrixLatex(currentResult.factor)}R_{${currentResult.pivot}}`;\r\n            if (smallScreen) {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                \\\\ \\begin{array}{lcl}\r\n                       & \\downarrow &\r\n                    \\\\ & ${operationLatex} &\r\n                    \\\\ & \\downarrow &\r\n                    \\end{array}\r\n                \\\\ ${finalLatex}\r\n                `;\r\n            }\r\n            else {\r\n                latexContent += String.raw`\r\n                \\\\ ${initialLatex}\r\n                & \\overrightarrow{${operationLatex}}\r\n                & ${finalLatex}\r\n                `;\r\n            }\r\n        }\r\n        latexContent += String.raw`\\end{array}\\end{array}`;\r\n    }\r\n    else {\r\n        latexContent = String.raw`\r\n        \\displaystyle\r\n        \\begin{array}{l}\r\n        \\\\ \\text{Cannot do any elimination.}\r\n        \\\\ \\overbrace{${matrixToLatex(params.originalMatrix, {leftBracketOnly: true})}}^{A}\r\n            \\overbrace{${matrixToLatex(params.originalOutput, {single:true, rightBracketOnly:true})}}^{B}\r\n        \\end{array}\r\n        `;\r\n    }\r\n    \r\n    return (\r\n        <Container className={styleClasses.container}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid xs item className=\"iteration-slider\">\r\n                    <Slide direction=\"left\" triggerOnce>\r\n                        <Box id=\"iteration-slider\" width=\"70vw\">\r\n                            <Slider\r\n                                orientation=\"horizontal\"\r\n                                onChangeCommitted={(event, value) => {setCurrentIteration(value)}}\r\n                                defaultValue={1}\r\n                                aria-labelledby=\"discrete-slider-small-steps\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={params.iterations<=0 ? 1 :params.iterations}\r\n                                valueLabelDisplay=\"on\"\r\n                            />\r\n                        </Box>\r\n                    </Slide>\r\n                </Grid>\r\n                <Grid xs item className=\"step-math\">\r\n                    <Slide direction=\"right\" triggerOnce>\r\n                        <Card className={styleClasses.card}>\r\n                            <CardContent className={styleClasses.cardContent}>\r\n                                <Typography variant=\"h6\">\r\n                                    Iteration {currentIteration}:\r\n                                </Typography>\r\n                                <TeX math={latexContent} block />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Slide>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LinearGauss;","import {formatMatrixLatex} from \"./utils\";\r\nimport React from \"react\";\r\n\r\nexport function generateGridCallback (state, stateSetter) {\r\n    return ({ fromRow, toRow, updated }) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n        }\r\n        stateSetter({\r\n            ...state, rows\r\n        });\r\n    };\r\n}\r\n\r\nclass MatrixElementEditor extends React.Component {\r\n    ref = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: props.value };\r\n    }\r\n    getValue() {\r\n        return { [this.props.column.key]: this.state.value };\r\n    }\r\n\r\n    getInputNode() {\r\n        return this.ref.current ? this.ref.current : null;\r\n    }\r\n\r\n    onInputChange = () => {\r\n        let value = this.ref.current.value;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (isNaN(value)) {\r\n                value = 0;\r\n            }\r\n        }\r\n        catch {\r\n            value = 0;\r\n        }\r\n        this.setState({ value: value });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <input ref={this.ref} defaultValue={this.state.value} onBlur={this.onInputChange} onChange={this.onInputChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n};\r\n\r\nclass WrapperFormatter extends React.Component {\r\n\r\n    render() {\r\n        return (<div style={style}>{this.props.value}</div>)\r\n    }\r\n}\r\n\r\nconst columnSettings = {\r\n    editable: true,\r\n    editor: MatrixElementEditor,\r\n    formatter : WrapperFormatter,\r\n};\r\n\r\nexport const createNewColumn = (numberOfColumns, customName = \"\") => {\r\n    const newNum = numberOfColumns + 1;\r\n    if (customName) {\r\n        return { key: `col_${newNum}`, name: customName, ...columnSettings };\r\n    }\r\n    else {\r\n        return { key: `col_${newNum}`, name: `C${newNum}`, ...columnSettings };\r\n    }\r\n}\r\n\r\nexport const createNewRow = (numberOfColumns) => {\r\n    let newRow = {};\r\n    for (let i = 1; i <= numberOfColumns; i++) {\r\n        newRow[`col_${i}`] = 0;\r\n    }\r\n    return newRow;\r\n}\r\n\r\nexport const gridTo2DArray = (rowsArray) => {\r\n    let keys = Object.keys(rowsArray[0]).sort();\r\n    let result = rowsArray.map((row) => {\r\n        return keys.map((k) => row[k]);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport const cloneArray = (array) => {\r\n    return JSON.parse(JSON.stringify(array));\r\n}\r\n\r\nexport const isDiagonallyDominant = (matrix) => {\r\n    // Strictly diagonal dominant\r\n    for (let i  = 0; i < matrix.length; i++) {\r\n        let diagonal = matrix[i][i];\r\n        let sum = 0;\r\n        for (let j  = 0; j < matrix.length; j++) {\r\n            if (j !== i) {\r\n                sum += matrix[i][j];\r\n            }\r\n        }\r\n        if (Math.abs(diagonal) <= Math.abs(sum)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// First 15 factorials.\r\nexport const numberFactorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000];\r\n\r\nexport const getBinomialCoefficient = (n, k) => {\r\n    return numberFactorials[n] / numberFactorials[k] / numberFactorials[n - k];\r\n}\r\n\r\nexport const nextPermutation = (array) => {\r\n    // Mutates array\r\n    // Find non-increasing suffix\r\n    let i = array.length - 1;\r\n    while (i > 0 && array[i - 1] >= array[i])\r\n        i--;\r\n    if (i <= 0)\r\n        return false;\r\n\r\n    // Find successor to pivot\r\n    let j = array.length - 1;\r\n    while (array[j] <= array[i - 1])\r\n        j--;\r\n    let temp = array[i - 1];\r\n    array[i - 1] = array[j];\r\n    array[j] = temp;\r\n\r\n    // Reverse suffix\r\n    j = array.length - 1;\r\n    while (i < j) {\r\n        temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const generatePermutationMapping = (target, original=[...Array(target.length).keys()]) => {\r\n    let mapping = {};\r\n    let alreadyCovered = [];\r\n    for (let i = 0; i < original.length; i++) {\r\n        if (!alreadyCovered.includes(target[i]) && original[i] !== target[i]) {\r\n            mapping[i] = target[i];\r\n            alreadyCovered.push(original[i], target[i]);\r\n        }\r\n    }\r\n    return mapping;\r\n}\r\n\r\nexport const matrixToLatex = (matrix, {single=false, leftBracketOnly=false, rightBracketOnly=false, boldRows=[], boldColumns=[], transpose=false}={}) => {\r\n    let latex;\r\n    if (rightBracketOnly) {\r\n        latex = String.raw`\\left|\\begin{matrix}`;\r\n    }\r\n    else {\r\n        latex = String.raw`\\left[\\begin{matrix}`\r\n    }\r\n    const rowLength = matrix.length;\r\n    const colLength = matrix[0].length;\r\n    if (single) {\r\n        // 1D array\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBold = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBold = true;\r\n                    break;\r\n                }\r\n            }\r\n            const content = String.raw` ${formatMatrixLatex(matrix[i])} `;\r\n            if (isBold) {\r\n                latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n            }\r\n            else {\r\n                latex += String.raw`${content}`;\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < rowLength; i++){\r\n            let isBoldRow = false;\r\n            for (let b = 0; b < boldRows.length; b++) {\r\n                if (boldRows[b] === i + 1) {\r\n                    isBoldRow = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < colLength; j++){\r\n                let isBoldRowColumn = false;\r\n                for (let c = 0; c < boldColumns.length; c++) {\r\n                    if (boldColumns[c] === j + 1) {\r\n                        isBoldRowColumn = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let content = String.raw` ${formatMatrixLatex(matrix[i][j])} `;\r\n                if (isBoldRow || isBoldRowColumn) {\r\n                    latex += String.raw` \\colorbox{aqua}{\\bf{${content}}} `;\r\n                }\r\n                else {\r\n                    latex += String.raw`${content}`;\r\n                }\r\n                if (j !== colLength - 1) {\r\n                    latex += String.raw`&`;\r\n                }\r\n            }\r\n            latex += String.raw`\\cr`;\r\n        }\r\n    }\r\n    if (leftBracketOnly) {\r\n        latex += String.raw`\\end{matrix}\\right|`;\r\n    }\r\n    else {\r\n        latex += String.raw`\\end{matrix}\\right]`;\r\n    }\r\n    return latex;\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\n// Matrix initial values\r\n///////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////\r\nexport const initialMatrix = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: -3, col_4: 4 },\r\n        { col_1: 2, col_2: -2, col_3: 1, col_4: 0 },\r\n        { col_1: 2, col_2: -1, col_3: -2, col_4: 4 },\r\n        { col_1: -6, col_2: 4, col_3: 3, col_4: -8 },\r\n    ]\r\n}\r\nexport const initialInputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0},\r\n    ]\r\n}\r\nexport const initialOutputColumn = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1, col_3: 0, col_4: 1},\r\n    ]\r\n}\r\n\r\nexport const initialMatrix2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -10, col_3: 1 },\r\n        { col_1: 20, col_2: 1, col_3: -1 },\r\n        { col_1: -1, col_2: 1, col_3: 10 },\r\n    ]\r\n}\r\nexport const initialInputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn2 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 13, col_2: 17, col_3: 18 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -1, col_2: 11, col_3: -1, col_4: 3 },\r\n        { col_1: 10, col_2: -1, col_3: 2, col_4: 0 },\r\n        { col_1: 0, col_2: 3, col_3: -1, col_4: 8 },\r\n        { col_1: 2, col_2: -1, col_3: 10, col_4: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 0, col_4: 0 },\r\n    ]\r\n}\r\nexport const initialOutputColumn3 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 25, col_2: 6, col_3: 15, col_4: -11, },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix4 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: -0.1, col_3: -0.2 },\r\n        { col_1: 0.1, col_2: 7, col_3: -0.3 },\r\n        { col_1: 0.3, col_2: -0.2, col_3: 10 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix5 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 5 },\r\n        { col_1: -1, col_2: 7 },\r\n    ]\r\n}\r\n\r\nexport const initialMatrix6 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 3, col_2: 5, col_3: 2 },\r\n        { col_1: 2, col_2: 3, col_3: -2 },\r\n    ]\r\n}\r\nexport const initialMatrix7 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 4 },\r\n        { col_1: 1, col_2: 3 },\r\n        { col_1: 0, col_2: 0 },\r\n        { col_1: 0, col_2: 0 },\r\n    ]\r\n}\r\nexport const initialMatrix8 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -2, col_3: 3 },\r\n        { col_1: 5, col_2: 8, col_3: -1 },\r\n        { col_1: 2, col_2: 1, col_3: 1 },\r\n        { col_1: -1, col_2: 4, col_3: -3 },\r\n    ]\r\n}\r\nexport const initialMatrix9 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 2, col_3: 3 },\r\n        { col_1: 3, col_2: 4, col_3: 5 },\r\n        { col_1: 5, col_2: 6, col_3: 7},\r\n        { col_1: 7, col_2: 8, col_3: 9 },\r\n    ]\r\n}\r\nexport const initialMatrix10 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 6, col_2: -7, col_3: 2 },\r\n        { col_1: 4, col_2: -5, col_3: 2 },\r\n        { col_1: 1, col_2: -1, col_3: 1 },\r\n    ]\r\n}\r\nexport const initialMatrix11 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 1, col_3: 2 },\r\n        { col_1: 1, col_2: 0, col_3: 1 },\r\n        { col_1: 4, col_2: 1, col_3: 4 },\r\n    ]\r\n}\r\nexport const initialMatrix12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 4, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn12 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 2, col_2: 3 },\r\n        { col_1: 4, col_2: 1 },\r\n    ]\r\n}\r\nexport const initialInputColumn13 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: -0.7, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 7, col_2: -2 },\r\n        { col_1: 3, col_2: -1 },\r\n    ]\r\n}\r\nexport const initialInputColumn14 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix15 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n        { key: \"col_3\", name: \"C3\", ...columnSettings },\r\n        { key: \"col_4\", name: \"C4\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 5, col_2: 0, col_3: 0, col_4: -1, },\r\n        { col_1: 1, col_2: 0, col_3: -1, col_4: 1, },\r\n        { col_1: -1.5, col_2: 1, col_3: -2, col_4: 1, },\r\n        { col_1: -1, col_2: 1, col_3: 3, col_4: -3, },\r\n    ]\r\n}\r\nexport const initialMatrix16 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"C1\", ...columnSettings },\r\n        { key: \"col_2\", name: \"C2\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: -1},\r\n        { col_1: 2, col_2: -1},\r\n    ]\r\n}\r\nexport const initialMatrix17 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0},\r\n    ]\r\n}\r\nexport const initialMatrix18 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix19 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 1, col_2: 1},\r\n    ]\r\n}\r\nexport const initialMatrix20 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"x\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y\", ...columnSettings },\r\n        { key: \"col_3\", name: \"u\", ...columnSettings },\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 1, col_3: 2},\r\n    ]\r\n}\r\nexport const initialMatrix21 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 2},\r\n    ]\r\n}\r\nexport const initialMatrix22 = {\r\n    columns: [\r\n        { key: \"col_1\", name: \"a\", ...columnSettings },\r\n        { key: \"col_2\", name: \"y(a)\", ...columnSettings },\r\n        { key: \"col_3\", name: \"b\", ...columnSettings },\r\n        { key: \"col_4\", name: \"y(b)\", ...columnSettings }\r\n    ],\r\n    rows: [\r\n        { col_1: 0, col_2: 0, col_3: 1, col_4: 5},\r\n    ]\r\n}"],"sourceRoot":""}